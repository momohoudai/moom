!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
0	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
1	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
2	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
2022-12-03	journal.md	/^### 2022-12-03$/;"	S	language:Markdown	chapter:Journal
2022-12-08	journal.md	/^### 2022-12-08$/;"	S	language:Markdown	chapter:Journal
2022-12-26	journal.md	/^### 2022-12-26$/;"	S	language:Markdown	chapter:Journal
2022-12-27	journal.md	/^### 2022-12-27$/;"	S	language:Markdown	chapter:Journal
2022-12-28	journal.md	/^### 2022-12-28$/;"	S	language:Markdown	chapter:Journal
a	D:/work/git/moom/code/momo_colors.h	/^  f32_t a;$/;"	m	language:C++	struct:rgba_t	typeref:typename:f32_t
abort	build/a.out.js	/^function abort(what) {$/;"	f	language:JavaScript
ABORT	build/a.out.js	/^var ABORT = false;$/;"	v	language:JavaScript
abs_f32	D:/work/git/moom/code/momo_types.h	/^abs_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
abs_f64	D:/work/git/moom/code/momo_types.h	/^abs_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
abs_s16	D:/work/git/moom/code/momo_types.h	/^abs_s16(s16_t x) {$/;"	f	language:C++	typeref:typename:s16_t
abs_s32	D:/work/git/moom/code/momo_types.h	/^abs_s32(s32_t x) {$/;"	f	language:C++	typeref:typename:s32_t
abs_s64	D:/work/git/moom/code/momo_types.h	/^abs_s64(s64_t x) {$/;"	f	language:C++	typeref:typename:s64_t
abs_s8	D:/work/git/moom/code/momo_types.h	/^abs_s8(s8_t x) {$/;"	f	language:C++	typeref:typename:s8_t
acos_f32	D:/work/git/moom/code/momo_intrinsics.h	/^acos_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
acos_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t acos_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
acos_f64	D:/work/git/moom/code/momo_intrinsics.h	/^acos_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
acos_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t acos_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
active_asset_index	D:/work/git/moom/code/sui_pack.h	/^  u32_t active_asset_index;$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:u32_t
active_font	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_font_t* active_font;$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:sui_atlas_font_t *
active_group	D:/work/git/moom/code/sui_pack.h	/^  karu_group_t* active_group;$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:karu_group_t *
additional_flags	D:/work/git/moom/code/momo_png.h	/^  u8_t additional_flags;$/;"	m	language:C++	struct:_png_idat_header_t	typeref:typename:u8_t
addOnExit	build/a.out.js	/^function addOnExit(cb) {$/;"	f	language:JavaScript
addOnInit	build/a.out.js	/^function addOnInit(cb) {$/;"	f	language:JavaScript
addOnPostRun	build/a.out.js	/^function addOnPostRun(cb) {$/;"	f	language:JavaScript
addOnPreMain	build/a.out.js	/^function addOnPreMain(cb) {$/;"	f	language:JavaScript
addOnPreRun	build/a.out.js	/^function addOnPreRun(cb) {$/;"	f	language:JavaScript
addRunDependency	build/a.out.js	/^function addRunDependency(id) {$/;"	f	language:JavaScript
add_task	D:/work/git/moom/code/moe_platform.h	/^  platform_add_task_f* add_task;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_add_task_f *
Adobe_OpacityMaskFilter	build/web.html	/^   id="Adobe_OpacityMaskFilter"$/;"	I	language:HTML
Adobe_OpacityMaskFilter_1_	build/web.html	/^   id="Adobe_OpacityMaskFilter_1_"$/;"	I	language:HTML
age	build/test_json.json	/^  "age":30, $/;"	n	language:JSON
align_down_pow2	D:/work/git/moom/code/momo_types.h	/^#define align_down_pow2(/;"	d	language:C++
align_up_pow2	D:/work/git/moom/code/momo_types.h	/^#define align_up_pow2(/;"	d	language:C++
allocate_memory	D:/work/git/moom/code/moe_platform.h	/^  platform_allocate_memory_f* allocate_memory;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_allocate_memory_f *
allocator	D:/work/git/moom/code/w32_audio_wasapi.h	/^  arena_t allocator;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:arena_t
analyzePath	build/a.out.js	/^  analyzePath: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
anchor	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t anchor;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:v2f_t
AnonymousFunctionb4ad68160100	build/a.out.js	/^  fs.readFile(filename, function(err, data) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160200	build/a.out.js	/^      get: function() {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160300	build/a.out.js	/^      get: function() {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160400	build/a.out.js	/^      get: function() {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160500	build/a.out.js	/^      runDependencyWatcher = setInterval(function() {$/;"	f	language:JavaScript	function:addRunDependency
AnonymousFunctionb4ad68160600	build/a.out.js	/^  return function() {$/;"	f	language:JavaScript	function:createExportWrapper
AnonymousFunctionb4ad68160700	build/a.out.js	/^      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160800	build/a.out.js	/^      }).catch(function () {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160900	build/a.out.js	/^        return new Promise(function(resolve, reject) {$/;"	f	language:JavaScript	function:getBinaryPromise
AnonymousFunctionb4ad68160a00	build/a.out.js	/^          readAsync(wasmBinaryFile, function(response) { resolve(new Uint8Array(\/** @type{!Arra/;"	f	language:JavaScript	function:getBinaryPromise.AnonymousFunctionb4ad68160900
AnonymousFunctionb4ad68160b00	build/a.out.js	/^  return Promise.resolve().then(function() { return getBinary(wasmBinaryFile); });$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160c00	build/a.out.js	/^    return getBinaryPromise().then(function(binary) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160d00	build/a.out.js	/^    }).then(function (instance) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160e00	build/a.out.js	/^    }).then(receiver, function(reason) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68160f00	build/a.out.js	/^      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68161000	build/a.out.js	/^          function(reason) {$/;"	f	language:JavaScript
AnonymousFunctionb4ad68161100	build/a.out.js	/^    setTimeout(function() {$/;"	f	language:JavaScript	function:run
AnonymousFunctionb4ad68161200	build/a.out.js	/^      setTimeout(function() {$/;"	f	language:JavaScript	function:run.AnonymousFunctionb4ad68161100
ARCH_ARM	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	D:/work/git/moom/code/momo_types.h	/^# define ARCH_ARM /;"	d	language:C++
ARCH_X64	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	D:/work/git/moom/code/momo_types.h	/^# define ARCH_X64 /;"	d	language:C++
ARCH_X86	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	D:/work/git/moom/code/momo_types.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	D:/work/git/moom/code/momo_types.h	/^# define ARCH_X86 /;"	d	language:C++
arena	D:/work/git/moom/code/momo_arena.h	/^  arena_t* arena;$/;"	m	language:C++	struct:arena_marker_t	typeref:typename:arena_t *
arena	D:/work/git/moom/code/momo_png.h	/^  arena_t* arena; $/;"	m	language:C++	struct:_png_context_t	typeref:typename:arena_t *
arena_clear	D:/work/git/moom/code/momo_arena.h	/^arena_clear(arena_t* a) {$/;"	f	language:C++	typeref:typename:void
arena_clear	D:/work/git/moom/code/momo_arena.h	/^static void   arena_clear(arena_t* a);$/;"	p	language:C++	typeref:typename:void
arena_init	D:/work/git/moom/code/momo_arena.h	/^arena_init(arena_t* a, void* mem, umi_t cap) {$/;"	f	language:C++	typeref:typename:void
arena_init	D:/work/git/moom/code/momo_arena.h	/^static void   arena_init(arena_t* a, void* mem, umi_t cap);$/;"	p	language:C++	typeref:typename:void
arena_mark	D:/work/git/moom/code/momo_arena.h	/^arena_mark(arena_t* a) {$/;"	f	language:C++	typeref:typename:arena_marker_t
arena_mark	D:/work/git/moom/code/momo_arena.h	/^static arena_marker_t arena_mark(arena_t* a);$/;"	p	language:C++	typeref:typename:arena_marker_t
arena_marker_t	D:/work/git/moom/code/momo_arena.h	/^struct arena_marker_t {$/;"	s	language:C++
arena_partition	D:/work/git/moom/code/momo_arena.h	/^arena_partition(arena_t* a, arena_t* partition, umi_t size, umi_t align) {	$/;"	f	language:C++	typeref:typename:b32_t
arena_partition	D:/work/git/moom/code/momo_arena.h	/^static b32_t    arena_partition(arena_t* a, arena_t* partition, umi_t size, umi_t align);$/;"	p	language:C++	typeref:typename:b32_t
arena_partition_with_remaining	D:/work/git/moom/code/momo_arena.h	/^arena_partition_with_remaining(arena_t* a, arena_t* partition, umi_t align){$/;"	f	language:C++	typeref:typename:b32_t
arena_partition_with_remaining	D:/work/git/moom/code/momo_arena.h	/^static b32_t    arena_partition_with_remaining(arena_t* a, arena_t* partition, umi_t align);$/;"	p	language:C++	typeref:typename:b32_t
arena_push	D:/work/git/moom/code/momo_arena.h	/^#define arena_push(/;"	d	language:C++
arena_push_align	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_align(/;"	d	language:C++
arena_push_arr	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_arr(/;"	d	language:C++
arena_push_arr_align	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_arr_align(/;"	d	language:C++
arena_push_arr_zero	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_arr_zero(/;"	d	language:C++
arena_push_arr_zero_align	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_arr_zero_align(/;"	d	language:C++
arena_push_size	D:/work/git/moom/code/momo_arena.h	/^arena_push_size(arena_t* a, umi_t size, umi_t align) {$/;"	f	language:C++	typeref:typename:void *
arena_push_size	D:/work/git/moom/code/momo_arena.h	/^static void*  arena_push_size(arena_t* a, umi_t size, umi_t align);$/;"	p	language:C++	typeref:typename:void *
arena_push_size_zero	D:/work/git/moom/code/momo_arena.h	/^arena_push_size_zero(arena_t* a, umi_t size, umi_t align) $/;"	f	language:C++	typeref:typename:void *
arena_push_size_zero	D:/work/git/moom/code/momo_arena.h	/^static void*  arena_push_size_zero(arena_t* a, umi_t size, umi_t align); $/;"	p	language:C++	typeref:typename:void *
arena_push_zero	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_zero(/;"	d	language:C++
arena_push_zero_align	D:/work/git/moom/code/momo_arena.h	/^#define arena_push_zero_align(/;"	d	language:C++
arena_remaining	D:/work/git/moom/code/momo_arena.h	/^arena_remaining(arena_t* a) {$/;"	f	language:C++	typeref:typename:umi_t
arena_remaining	D:/work/git/moom/code/momo_arena.h	/^static umi_t    arena_remaining(arena_t* a);$/;"	p	language:C++	typeref:typename:umi_t
arena_revert	D:/work/git/moom/code/momo_arena.h	/^arena_revert(arena_marker_t marker) {$/;"	f	language:C++	typeref:typename:void
arena_revert	D:/work/git/moom/code/momo_arena.h	/^static void arena_revert(arena_marker_t marker);$/;"	p	language:C++	typeref:typename:void
arena_set_revert_point	D:/work/git/moom/code/momo_arena.h	/^# define arena_set_revert_point(/;"	d	language:C++
arena_t	D:/work/git/moom/code/momo_arena.h	/^struct arena_t {$/;"	s	language:C++
arguments_	build/a.out.js	/^var arguments_ = [];$/;"	v	language:JavaScript
arr	build/test_json.json	/^  "arr": [1,2,3],$/;"	a	language:JSON
arr	D:/work/git/moom/code/momo_json.h	/^    json_array_t arr;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:json_array_t
array_count	D:/work/git/moom/code/momo_types.h	/^#define array_count(/;"	d	language:C++
arrival_time	D:/work/git/moom/code/scene_lit.h	/^  f32_t arrival_time;$/;"	m	language:C++	struct:lit_title_waypoint_t	typeref:typename:f32_t
ascii_to_digit	D:/work/git/moom/code/momo_types.h	/^#define ascii_to_digit(/;"	d	language:C++
asdf	D:/work/git/moom/code/meta.cpp	/^#define asdf(/;"	d	language:C++	file:
asin_f32	D:/work/git/moom/code/momo_intrinsics.h	/^asin_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
asin_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t asin_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
asin_f64	D:/work/git/moom/code/momo_intrinsics.h	/^asin_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
asin_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t asin_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
asmLibraryArg	build/a.out.js	/^var asmLibraryArg = {$/;"	c	language:JavaScript
ASM_CONSTS	build/a.out.js	/^var ASM_CONSTS = {$/;"	v	language:JavaScript
assert	build/a.out.js	/^function assert(condition, text) {$/;"	f	language:JavaScript
assert	D:/work/git/moom/code/momo_types.h	/^# define assert(/;"	d	language:C++
assert	D:/work/git/moom/code/momo_types.h	/^# define assert(/;"	d	language:C++
ASSERTIONS	build/a.out.js	/^var ASSERTIONS = true;$/;"	v	language:JavaScript
assert_callback	D:/work/git/moom/code/momo_types.h	/^# define assert_callback(/;"	d	language:C++
assert_callback	D:/work/git/moom/code/sui.h	/^#define assert_callback(/;"	d	language:C++
assert_callback	D:/work/git/moom/code/test.h	/^#define assert_callback(/;"	d	language:C++
assets	D:/work/git/moom/code/moe.h	/^  assets_t assets;$/;"	m	language:C++	struct:moe_t	typeref:typename:assets_t
assets	D:/work/git/moom/code/sui_pack.h	/^  karu_asset_t assets[1024]; \/\/ to be written to file$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:karu_asset_t[1024]
ASSETS_H	D:/work/git/moom/code/moe_assets.h	/^#define ASSETS_H$/;"	d	language:C++
assets_t	D:/work/git/moom/code/moe_assets.h	/^struct assets_t {$/;"	s	language:C++
asset_arena	D:/work/git/moom/code/moe.h	/^  arena_t asset_arena;$/;"	m	language:C++	struct:moe_t	typeref:typename:arena_t
asset_bitmap_id_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_bitmap_id_t { u32_t value; };$/;"	s	language:C++
asset_bitmap_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_bitmap_t {$/;"	s	language:C++
asset_count	D:/work/git/moom/code/karu.h	/^  u32_t asset_count;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
asset_count	D:/work/git/moom/code/moe_assets.h	/^  u32_t asset_count;$/;"	m	language:C++	struct:assets_t	typeref:typename:u32_t
asset_count	D:/work/git/moom/code/sui_pack.h	/^  u32_t asset_count;$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:u32_t
asset_font_glyph_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_font_glyph_t {$/;"	s	language:C++
asset_font_id_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_font_id_t { u32_t value; };$/;"	s	language:C++
asset_font_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_font_t {$/;"	s	language:C++
asset_group_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_group_t {$/;"	s	language:C++
Asset_Group_Type	D:/work/git/moom/code/moe_asset_types.h	/^enum Asset_Group_Type : u32_t {$/;"	g	language:C++	typeref:typename:u32_t
ASSET_GROUP_TYPE_ATLAS	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_ATLAS,$/;"	e	language:C++	enum:Asset_Group_Type
ASSET_GROUP_TYPE_BLANK_SPRITE	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_BLANK_SPRITE,$/;"	e	language:C++	enum:Asset_Group_Type
ASSET_GROUP_TYPE_CIRCLE_SPRITE	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_CIRCLE_SPRITE,$/;"	e	language:C++	enum:Asset_Group_Type
ASSET_GROUP_TYPE_COUNT	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_COUNT,$/;"	e	language:C++	enum:Asset_Group_Type
ASSET_GROUP_TYPE_FILLED_CIRCLE_SPRITE	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_FILLED_CIRCLE_SPRITE,$/;"	e	language:C++	enum:Asset_Group_Type
ASSET_GROUP_TYPE_FONTS	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_GROUP_TYPE_FONTS,$/;"	e	language:C++	enum:Asset_Group_Type
asset_match_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_match_t {$/;"	s	language:C++
asset_slots	D:/work/git/moom/code/moe_assets.h	/^  asset_slot_t* asset_slots;$/;"	m	language:C++	struct:assets_t	typeref:typename:asset_slot_t *
asset_slot_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_slot_t {$/;"	s	language:C++
asset_sprite_id_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_sprite_id_t { u32_t value; };$/;"	s	language:C++
asset_sprite_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_sprite_t {$/;"	s	language:C++
ASSET_STATE_LOADED	D:/work/git/moom/code/moe_assets.h	/^  ASSET_STATE_LOADED,$/;"	e	language:C++	enum:asset_state_t
ASSET_STATE_LOADING	D:/work/git/moom/code/moe_assets.h	/^  ASSET_STATE_LOADING,$/;"	e	language:C++	enum:asset_state_t
asset_state_t	D:/work/git/moom/code/moe_assets.h	/^enum asset_state_t {$/;"	g	language:C++
ASSET_STATE_UNLOADED	D:/work/git/moom/code/moe_assets.h	/^  ASSET_STATE_UNLOADED,$/;"	e	language:C++	enum:asset_state_t
asset_tag_t	D:/work/git/moom/code/moe_assets.h	/^struct asset_tag_t {$/;"	s	language:C++
Asset_Tag_Type	D:/work/git/moom/code/moe_asset_types.h	/^enum Asset_Tag_Type : u32_t {$/;"	g	language:C++	typeref:typename:u32_t
ASSET_TAG_TYPE_COUNT	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_TAG_TYPE_COUNT,$/;"	e	language:C++	enum:Asset_Tag_Type
ASSET_TAG_TYPE_FONT	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_TAG_TYPE_FONT,$/;"	e	language:C++	enum:Asset_Tag_Type
Asset_Type	D:/work/git/moom/code/moe_asset_types.h	/^enum Asset_Type : u32_t {$/;"	g	language:C++	typeref:typename:u32_t
ASSET_TYPE_BITMAP	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_TYPE_BITMAP,$/;"	e	language:C++	enum:Asset_Type
ASSET_TYPE_FONT	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_TYPE_FONT,$/;"	e	language:C++	enum:Asset_Type
ASSET_TYPE_SPRITE	D:/work/git/moom/code/moe_asset_types.h	/^  ASSET_TYPE_SPRITE,$/;"	e	language:C++	enum:Asset_Type
at	D:/work/git/moom/code/meta.cpp	/^  u32_t at;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:u32_t	file:
at	D:/work/git/moom/code/momo_json.h	/^  u32_t at;$/;"	m	language:C++	struct:_json_tokenizer_t	typeref:typename:u32_t
atan_f32	D:/work/git/moom/code/momo_intrinsics.h	/^atan_f32(f32_t x){$/;"	f	language:C++	typeref:typename:f32_t
atan_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t atan_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
atan_f64	D:/work/git/moom/code/momo_intrinsics.h	/^atan_f64(f64_t x){$/;"	f	language:C++	typeref:typename:f64_t
atan_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t atan_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
atlas_font	D:/work/git/moom/code/sui_pack.h	/^  sui_atlas_font_t* atlas_font;$/;"	m	language:C++	struct:sui_packer_source_font_t	typeref:typename:sui_atlas_font_t *
atomic_add_u32	D:/work/git/moom/code/momo_intrinsics.h	/^atomic_add_u32(u32_t volatile* value, u32_t to_add) {$/;"	f	language:C++	typeref:typename:u32_t
atomic_add_u32	D:/work/git/moom/code/momo_intrinsics.h	/^static u32_t atomic_add_u32(u32_t volatile* value, u32_t to_add);$/;"	p	language:C++	typeref:typename:u32_t
atomic_add_u64	D:/work/git/moom/code/momo_intrinsics.h	/^atomic_add_u64(u64_t volatile* value, u64_t to_add) {$/;"	f	language:C++	typeref:typename:u64_t
atomic_add_u64	D:/work/git/moom/code/momo_intrinsics.h	/^static u64_t atomic_add_u64(u64_t volatile* value, u64_t to_add);$/;"	p	language:C++	typeref:typename:u64_t
atomic_assign_u64	D:/work/git/moom/code/momo_intrinsics.h	/^atomic_assign_u64(u64_t volatile* value,$/;"	f	language:C++	typeref:typename:u64_t
atomic_assign_u64	D:/work/git/moom/code/momo_intrinsics.h	/^static u64_t atomic_assign_u64(u64_t volatile* value, u64_t new_value);$/;"	p	language:C++	typeref:typename:u64_t
atomic_compare_assign_u32	D:/work/git/moom/code/momo_intrinsics.h	/^atomic_compare_assign_u32(u32_t volatile* value,$/;"	f	language:C++	typeref:typename:u32_t
atomic_compare_assign_u32	D:/work/git/moom/code/momo_intrinsics.h	/^static u32_t atomic_compare_assign_u32(u32_t volatile* value, u32_t new_value, u32_t expected_va/;"	p	language:C++	typeref:typename:u32_t
audio	D:/work/git/moom/code/moe_platform.h	/^  platform_audio_t* audio;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_audio_t *
audio_client	D:/work/git/moom/code/w32_audio_wasapi.h	/^  IAudioClient2* audio_client;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:IAudioClient2 *
audio_format	D:/work/git/moom/code/momo_wav.h	/^  u16_t audio_format;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u16_t
audio_render_client	D:/work/git/moom/code/w32_audio_wasapi.h	/^  IAudioRenderClient* audio_render_client;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:IAudioRenderClient *
average	D:/work/git/moom/code/moe_profiler_rendering.h	/^  f64_t average;$/;"	m	language:C++	struct:profiler_stat_t	typeref:typename:f64_t
b	D:/work/git/moom/code/momo_colors.h	/^    struct { f32_t r, g, b; };  $/;"	m	language:C++	struct:rgba_t::__anon7258a5bb010a::__anon7258a5bb0208	typeref:typename:f32_t
b	D:/work/git/moom/code/momo_colors.h	/^  f32_t r, g, b;   $/;"	m	language:C++	struct:rgb_t	typeref:typename:f32_t
b	D:/work/git/moom/code/momo_strings.h	/^  union { u32_t v; u8_t b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon620e3633030a	typeref:typename:u8_t[4]
b32	D:/work/git/moom/code/momo_json.h	/^    b32_t b32;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:b32_t
b32_t	D:/work/git/moom/code/momo_types.h	/^typedef u32_t    b32_t;$/;"	t	language:C++	typeref:typename:u32_t
b8_t	D:/work/git/moom/code/momo_types.h	/^typedef u8_t     b8_t;$/;"	t	language:C++	typeref:typename:u8_t
before	D:/work/git/moom/code/moe_platform.h	/^  b32_t before;$/;"	m	language:C++	struct:__anona41ebd570608	typeref:typename:b32_t
begin	D:/work/git/moom/code/meta.cpp	/^  u32_t begin;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:u32_t	file:
begin	D:/work/git/moom/code/momo_json.h	/^  u32_t begin;$/;"	m	language:C++	struct:_json_token_t	typeref:typename:u32_t
begin_clone_emsdk	bin/setup_emsdk.bat	/^:begin_clone_emsdk$/;"	l	language:DosBatch
bitmap	D:/work/git/moom/code/karu.h	/^    karu_bitmap_t bitmap;$/;"	m	language:C++	union:karu_asset_t::__anon06005905010a	typeref:typename:karu_bitmap_t
bitmap	D:/work/git/moom/code/moe_assets.h	/^    asset_bitmap_t bitmap;$/;"	m	language:C++	union:asset_slot_t::__anonef445425020a	typeref:typename:asset_bitmap_t
bitmap	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_bitmap_t bitmap;$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:sui_atlas_bitmap_t
bitmap	D:/work/git/moom/code/sui_pack.h	/^    sui_packer_source_bitmap_t bitmap; $/;"	m	language:C++	union:sui_packer_source_t::__anon38c8e121010a	typeref:typename:sui_packer_source_bitmap_t
bitmap_asset_id	D:/work/git/moom/code/karu.h	/^  u32_t bitmap_asset_id; $/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
bitmap_asset_id	D:/work/git/moom/code/karu.h	/^  u32_t bitmap_asset_id; $/;"	m	language:C++	struct:karu_sprite_t	typeref:typename:u32_t
bitmap_asset_id	D:/work/git/moom/code/karu.h	/^  u32_t bitmap_asset_id;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:u32_t
bitmap_asset_id	D:/work/git/moom/code/moe_assets.h	/^  asset_bitmap_id_t bitmap_asset_id;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:asset_bitmap_id_t
bitmap_asset_id	D:/work/git/moom/code/moe_assets.h	/^  asset_bitmap_id_t bitmap_asset_id;$/;"	m	language:C++	struct:asset_sprite_t	typeref:typename:asset_bitmap_id_t
bitmap_asset_id	D:/work/git/moom/code/sui_pack.h	/^  u32_t bitmap_asset_id;$/;"	m	language:C++	struct:sui_packer_source_font_t	typeref:typename:u32_t
bitmap_asset_id	D:/work/git/moom/code/sui_pack.h	/^  u32_t bitmap_asset_id;$/;"	m	language:C++	struct:sui_packer_source_sprite_t	typeref:typename:u32_t
bitmap_counter	D:/work/git/moom/code/moe_assets.h	/^  u32_t bitmap_counter;$/;"	m	language:C++	struct:assets_t	typeref:typename:u32_t
bitmap_id_name	D:/work/git/moom/code/sui_atlas.h	/^  const char* bitmap_id_name;$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:const char *
bits_per_sample	D:/work/git/moom/code/momo_wav.h	/^  u16_t bits_per_sample;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u16_t
bits_per_sample	D:/work/git/moom/code/w32_audio_wasapi.h	/^  u16_t bits_per_sample;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:u16_t
bit_buffer	D:/work/git/moom/code/momo_streams.h	/^  u32_t bit_buffer;$/;"	m	language:C++	struct:stream_t	typeref:typename:u32_t
bit_count	D:/work/git/moom/code/momo_streams.h	/^  u32_t bit_count;$/;"	m	language:C++	struct:stream_t	typeref:typename:u32_t
bit_depth	D:/work/git/moom/code/momo_png.h	/^  u32_t bit_depth;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:u32_t
bit_depth	D:/work/git/moom/code/momo_png.h	/^  u8_t bit_depth;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t
bit_depth	D:/work/git/moom/code/momo_png.h	/^  u8_t bit_depth;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u8_t
bit_is_set	D:/work/git/moom/code/momo_types.h	/^#define bit_is_set(/;"	d	language:C++
bit_set	D:/work/git/moom/code/momo_types.h	/^#define bit_set(/;"	d	language:C++
bit_unset	D:/work/git/moom/code/momo_types.h	/^#define bit_unset(/;"	d	language:C++
blank_sprite	D:/work/git/moom/code/moe.h	/^  asset_sprite_id_t blank_sprite;$/;"	m	language:C++	struct:moe_t	typeref:typename:asset_sprite_id_t
blank_sprite	D:/work/git/moom/code/scene_lit.h	/^  asset_sprite_id_t blank_sprite;$/;"	m	language:C++	struct:lit_t	typeref:typename:asset_sprite_id_t
blank_texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_Texture blank_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
block_align	D:/work/git/moom/code/momo_wav.h	/^  u16_t block_align;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u16_t
block_name	D:/work/git/moom/code/moe_profiler.h	/^  const char* block_name;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:const char *
bonk_tri2_pt2	D:/work/git/moom/code/momo_bonk.h	/^bonk_tri2_pt2(v2f_t tp0, v2f_t tp1, v2f_t tp2, v2f_t pt) {$/;"	f	language:C++	typeref:typename:b32_t
boolean	build/test_json.json	/^  "boolean": true,$/;"	b	language:JSON
boolean2	build/test_json.json	/^  "boolean2": false,$/;"	b	language:JSON
box	D:/work/git/moom/code/karu.h	/^  Rect2 box;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:Rect2
box	D:/work/git/moom/code/moe_assets.h	/^  Rect2 box;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:Rect2
bpm_to_spb_f32	D:/work/git/moom/code/momo_types.h	/^bpm_to_spb_f32(f32_t bpm) {$/;"	f	language:C++	typeref:typename:f32_t
bpm_to_spb_f64	D:/work/git/moom/code/momo_types.h	/^bpm_to_spb_f64(f64_t bpm) {$/;"	f	language:C++	typeref:typename:f64_t
buffer	build/a.out.js	/^  buffer,$/;"	v	language:JavaScript
buffer	D:/work/git/moom/code/moe_console.h	/^  u8_t buffer[256];$/;"	m	language:C++	struct:console_line_t	typeref:typename:u8_t[256]
buffer	D:/work/git/moom/code/w32_audio_wasapi.h	/^  s16_t* buffer;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:s16_t *
buffers	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint buffers[OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT]; \/\/ Opengl__VBO_Count$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLuint[]
buffers	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint buffers[OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT];$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLuint[]
buffer_size	D:/work/git/moom/code/w32_audio_wasapi.h	/^  u32_t buffer_size;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:u32_t
buttons	D:/work/git/moom/code/moe_platform.h	/^    platform_button_t buttons[15];$/;"	m	language:C++	union:__anona41ebd570708::__anona41ebd57080a	typeref:typename:platform_button_t[15]
button_console	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_console;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_down	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_down;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_editor0	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_editor0;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_editor1	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_editor1;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_editor2	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_editor2;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_editor3	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_editor3;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_editor_on	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_editor_on;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_left	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_left;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_right	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_right;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_rotate_left	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_rotate_left;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_rotate_right	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_rotate_right;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_up	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_up;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
button_use	D:/work/git/moom/code/moe_platform.h	/^      platform_button_t button_use;$/;"	m	language:C++	struct:__anona41ebd570708::__anona41ebd57080a::__anona41ebd570908	typeref:typename:platform_button_t
byte_rate	D:/work/git/moom/code/momo_wav.h	/^  u32_t byte_rate;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u32_t
c	D:/work/git/moom/code/test_essentials.h	/^      char c[2];$/;"	m	language:C++	union:test_essentials::__anon4743520c010a	typeref:typename:char[2]
c	D:/work/git/moom/code/test_essentials.h	/^      char c[4];$/;"	m	language:C++	union:test_essentials::__anon4743520c020a	typeref:typename:char[4]
c8_t	D:/work/git/moom/code/momo_types.h	/^typedef char     c8_t;$/;"	t	language:C++	typeref:typename:char
cabinet_index	D:/work/git/moom/code/w32_moe.h	/^  u32_t cabinet_index;$/;"	m	language:C++	struct:w32_file_t	typeref:typename:u32_t
callback	D:/work/git/moom/code/w32_moe.h	/^  platform_task_callback_f* callback;$/;"	m	language:C++	struct:w32_work_t	typeref:typename:platform_task_callback_f *
callMain	build/a.out.js	/^function callMain(args) {$/;"	f	language:JavaScript
callRuntimeCallbacks	build/a.out.js	/^  function callRuntimeCallbacks(callbacks) {$/;"	f	language:JavaScript
canvas	build/web.html	/^      <canvas class="emscripten" id="canvas" oncontextmenu="event.preventDefault()" tabindex=-1>/;"	I	language:HTML
cap	D:/work/git/moom/code/momo_arena.h	/^	umi_t cap;$/;"	m	language:C++	struct:arena_t	typeref:typename:umi_t
cap	D:/work/git/moom/code/momo_strings.h	/^	umi_t cap;$/;"	m	language:C++	struct:sb8_t	typeref:typename:umi_t
cap	D:/work/git/moom/code/momo_ttf.h	/^  u32_t cap;$/;"	m	language:C++	struct:_ttf_edge_list_t	typeref:typename:u32_t
car	build/test_json.json	/^  "car":null, $/;"	z	language:JSON
ceil_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t ceil_f32(f32_t value) {$/;"	f	language:C++	typeref:typename:f32_t
ceil_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t ceil_f32(f32_t value);$/;"	p	language:C++	typeref:typename:f32_t
ceil_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t ceil_f64(f64_t value) {$/;"	f	language:C++	typeref:typename:f64_t
ceil_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t ceil_f64(f64_t value);$/;"	p	language:C++	typeref:typename:f64_t
channels	D:/work/git/moom/code/moe_platform.h	/^  u32_t channels; \/\/TODO: remove this?$/;"	m	language:C++	struct:__anona41ebd570508	typeref:typename:u32_t
channels	D:/work/git/moom/code/w32_audio_wasapi.h	/^  u16_t channels;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:u16_t
chars	D:/work/git/moom/code/moe_platform.h	/^  u8_t chars[32];$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:u8_t[32]
char_count	D:/work/git/moom/code/moe_platform.h	/^  u32_t char_count;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:u32_t
checkIncomingModuleAPI	build/a.out.js	/^function checkIncomingModuleAPI() {$/;"	f	language:JavaScript
checkStackCookie	build/a.out.js	/^function checkStackCookie() {$/;"	f	language:JavaScript
checkUnflushedContent	build/a.out.js	/^function checkUnflushedContent() {$/;"	f	language:JavaScript
CINTERFACE	D:/work/git/moom/code/w32_moe.h	/^#define CINTERFACE$/;"	d	language:C++
circle136	build/web.html	/^   id="circle136" \/><\/g><\/g><g$/;"	I	language:HTML
circle151	build/web.html	/^   id="circle151" \/><\/g><\/g><g$/;"	I	language:HTML
circle166	build/web.html	/^   id="circle166" \/><\/g><\/g><g$/;"	I	language:HTML
circle181	build/web.html	/^   id="circle181" \/><\/g><\/g><g$/;"	I	language:HTML
circle196	build/web.html	/^   id="circle196" \/><\/g><\/g><g$/;"	I	language:HTML
circle211	build/web.html	/^   id="circle211" \/><\/g><\/g><g$/;"	I	language:HTML
circle226	build/web.html	/^   id="circle226" \/><\/g><\/g><g$/;"	I	language:HTML
circle241	build/web.html	/^   id="circle241" \/><\/g><\/g><\/g><\/g><path$/;"	I	language:HTML
circle_sprite	D:/work/git/moom/code/scene_lit.h	/^  asset_sprite_id_t circle_sprite;$/;"	m	language:C++	struct:lit_t	typeref:typename:asset_sprite_id_t
clamp_of	D:/work/git/moom/code/momo_types.h	/^#define clamp_of(/;"	d	language:C++
cll_append	D:/work/git/moom/code/momo_ds.h	/^#define cll_append(/;"	d	language:C++
cll_init	D:/work/git/moom/code/momo_ds.h	/^#define cll_init(/;"	d	language:C++
cll_remove	D:/work/git/moom/code/momo_ds.h	/^#define cll_remove(/;"	d	language:C++
close_file	D:/work/git/moom/code/moe_platform.h	/^  platform_close_file_f* close_file;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_close_file_f *
cmap	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
cmap_mappings	D:/work/git/moom/code/momo_ttf.h	/^  u32_t cmap_mappings;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
COBJMACROS	D:/work/git/moom/code/w32_moe.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	D:/work/git/moom/code/w32_moe.h	/^#define COBJMACROS$/;"	d	language:C++
codepoint	D:/work/git/moom/code/karu.h	/^  u32_t codepoint;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
codepoint	D:/work/git/moom/code/sui_atlas.h	/^  u32_t codepoint;$/;"	m	language:C++	struct:sui_atlas_font_glyph_context_t	typeref:typename:u32_t
codepoints	D:/work/git/moom/code/sui_atlas.h	/^  u32_t codepoints[1024];$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:u32_t[1024]
codepoint_count	D:/work/git/moom/code/sui_atlas.h	/^  u32_t codepoint_count;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:u32_t
codepoint_map	D:/work/git/moom/code/moe_assets.h	/^  u16_t* codepoint_map;$/;"	m	language:C++	struct:asset_font_t	typeref:typename:u16_t *
color	D:/work/git/moom/code/scene_lit_world.h	/^  u32_t color;$/;"	m	language:C++	struct:lit_light_t	typeref:typename:u32_t
colors	D:/work/git/moom/code/moe_gfx.h	/^  rgba_t colors;$/;"	m	language:C++	struct:gfx_command_clear_t	typeref:typename:rgba_t
colors	D:/work/git/moom/code/moe_gfx.h	/^  rgba_t colors;$/;"	m	language:C++	struct:gfx_command_rect_t	typeref:typename:rgba_t
colors	D:/work/git/moom/code/moe_gfx.h	/^  rgba_t colors;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:rgba_t
colors	D:/work/git/moom/code/moe_gfx.h	/^  rgba_t colors;$/;"	m	language:C++	struct:gfx_command_triangle_t	typeref:typename:rgba_t
color_end	D:/work/git/moom/code/scene_lit_entity.h	/^  rgba_t color_start, color_end;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:rgba_t
color_start	D:/work/git/moom/code/scene_lit_entity.h	/^  rgba_t color_start, color_end;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:rgba_t
colour_type	D:/work/git/moom/code/momo_png.h	/^  u8_t colour_type;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t
colour_type	D:/work/git/moom/code/momo_png.h	/^  u8_t colour_type;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u8_t
commands	D:/work/git/moom/code/moe_console.h	/^  console_command_t commands[10];$/;"	m	language:C++	struct:console_t	typeref:typename:console_command_t[10]
command_count	D:/work/git/moom/code/moe_console.h	/^  u32_t command_count;$/;"	m	language:C++	struct:console_t	typeref:typename:u32_t
command_queue	D:/work/git/moom/code/moe_gfx.h	/^  gfx_command_queue_t command_queue;$/;"	m	language:C++	struct:gfx_t	typeref:typename:gfx_command_queue_t
COMPILER_CLANG	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_CLANG	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_GCC	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_GCC	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_MSVC	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_MSVC /;"	d	language:C++
COMPILER_MSVC	D:/work/git/moom/code/momo_types.h	/^# define COMPILER_MSVC /;"	d	language:C++
complete_all_tasks	D:/work/git/moom/code/moe_platform.h	/^  platform_complete_all_tasks_f* complete_all_tasks;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_complete_all_tasks_f *
completion_count	D:/work/git/moom/code/w32_moe.h	/^  u32_t volatile completion_count;$/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:u32_t volatile
completion_goal	D:/work/git/moom/code/w32_moe.h	/^  u32_t volatile completion_goal;$/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:u32_t volatile
compressed_image_stream	D:/work/git/moom/code/momo_png.h	/^  stream_t compressed_image_stream;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:stream_t
compression_flags	D:/work/git/moom/code/momo_png.h	/^  u8_t compression_flags;$/;"	m	language:C++	struct:_png_idat_header_t	typeref:typename:u8_t
compression_method	D:/work/git/moom/code/momo_png.h	/^  u8_t compression_method;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t
compression_method	D:/work/git/moom/code/momo_png.h	/^  u8_t compression_method;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u8_t
Computer	code/scene_computer.h	/^struct Computer{$/;"	s	language:C++
computer_add_selection	code/scene_computer.cpp	/^computer_add_selection(Computer* com, str8_t text, Moe_Mode_Type mode_type) {$/;"	f	language:C++	typeref:typename:void	file:
Computer_Selection	code/scene_computer.h	/^struct Computer_Selection{$/;"	s	language:C++
Computer_Selection_List	code/scene_computer.h	/^struct Computer_Selection_List{$/;"	s	language:C++
computer_tick	code/scene_computer.cpp	/^computer_tick(moe_t* moe)$/;"	f	language:C++	typeref:typename:void	file:
computer_tick	code/scene_computer.h	/^static void computer_tick(moe_t* moe);$/;"	p	language:C++	typeref:typename:void
console	D:/work/git/moom/code/moe.h	/^  console_t console;$/;"	m	language:C++	struct:moe_t	typeref:typename:console_t
console_add_command	D:/work/git/moom/code/moe_console.cpp	/^console_add_command(console_t* dc, $/;"	f	language:C++	typeref:typename:void	file:
console_command_t	D:/work/git/moom/code/moe_console.h	/^struct console_command_t {$/;"	s	language:C++
console_init	D:/work/git/moom/code/moe_console.cpp	/^console_init(console_t* dc, arena_t* allocator) {$/;"	f	language:C++	typeref:typename:void	file:
console_line_t	D:/work/git/moom/code/moe_console.h	/^struct console_line_t {$/;"	s	language:C++
console_t	D:/work/git/moom/code/moe_console.h	/^struct console_t {$/;"	s	language:C++
console_update_and_render	D:/work/git/moom/code/moe_console.cpp	/^console_update_and_render(moe_t* moe) $/;"	f	language:C++	typeref:typename:void	file:
CONST_VTABLE	D:/work/git/moom/code/w32_moe.h	/^#define CONST_VTABLE$/;"	d	language:C++
contour_count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t contour_count;$/;"	m	language:C++	struct:_ttf_glyph_outline_t	typeref:typename:u32_t
controls	build/web.html	/^<span id='controls'>$/;"	I	language:HTML
copy_array	D:/work/git/moom/code/momo_types.h	/^#define copy_array(/;"	d	language:C++
copy_memory	D:/work/git/moom/code/momo_types.h	/^copy_memory(void* dest, const void* src, umi_t size) {$/;"	f	language:C++	typeref:typename:void
copy_memory	D:/work/git/moom/code/momo_types.h	/^copy_memory(void* dest, const void* src, umi_t size) {$/;"	f	language:C++	typeref:typename:void
copy_range	D:/work/git/moom/code/momo_types.h	/^#define copy_range(/;"	d	language:C++
copy_struct	D:/work/git/moom/code/momo_types.h	/^#define copy_struct(/;"	d	language:C++
cos_f32	D:/work/git/moom/code/momo_intrinsics.h	/^cos_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
cos_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t cos_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
cos_f64	D:/work/git/moom/code/momo_intrinsics.h	/^cos_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
cos_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t cos_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
count	code/scene_computer.h	/^  u32_t count;$/;"	m	language:C++	struct:Computer_Selection_List	typeref:typename:u32_t
count	D:/work/git/moom/code/gist_ring_buffer.cpp	/^  u32_t count;$/;"	m	language:C++	struct:gist_rb	typeref:typename:u32_t	file:
count	D:/work/git/moom/code/moe_profiler_rendering.h	/^  u32_t count;$/;"	m	language:C++	struct:profiler_stat_t	typeref:typename:u32_t
count	D:/work/git/moom/code/momo_strings.h	/^			umi_t count;$/;"	m	language:C++	struct:sb8_t::__anon620e3633010a::__anon620e36330208	typeref:typename:umi_t
count	D:/work/git/moom/code/momo_strings.h	/^	umi_t count;$/;"	m	language:C++	struct:str8_t	typeref:typename:umi_t
count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t count;$/;"	m	language:C++	struct:_ttf_edge_list_t	typeref:typename:u32_t
crc	D:/work/git/moom/code/momo_png.h	/^  u32_t crc; $/;"	m	language:C++	struct:_png_chunk_footer_t	typeref:typename:u32_t
crc16	D:/work/git/moom/code/momo_crc.h	/^crc16(u8_t* data, u32_t data_size, u16_t start_register, crc16_table_t* table) {$/;"	f	language:C++	typeref:typename:u32_t
crc16	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc16(u8_t* data, u32_t data_size, u16_t start_register, crc16_table_t* table);$/;"	p	language:C++	typeref:typename:u32_t
crc16_init_table	D:/work/git/moom/code/momo_crc.h	/^crc16_init_table(crc16_table_t* table, u16_t polynomial) {$/;"	f	language:C++	typeref:typename:void
crc16_init_table	D:/work/git/moom/code/momo_crc.h	/^static void crc16_init_table(crc16_table_t* table, u16_t polynomial);$/;"	p	language:C++	typeref:typename:void
crc16_slow	D:/work/git/moom/code/momo_crc.h	/^crc16_slow(u8_t* data, u32_t data_size, u16_t start_register, u16_t polynomial) {$/;"	f	language:C++	typeref:typename:u32_t
crc16_slow	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc16_slow(u8_t* data, u32_t data_size, u16_t start_register, u16_t polynomial);$/;"	p	language:C++	typeref:typename:u32_t
crc16_table_t	D:/work/git/moom/code/momo_crc.h	/^struct crc16_table_t {$/;"	s	language:C++
crc32	D:/work/git/moom/code/momo_crc.h	/^crc32(u8_t* data, u32_t data_size, u16_t start_register, crc32_table_t* table) {$/;"	f	language:C++	typeref:typename:u32_t
crc32	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc32(u8_t* data, u32_t data_size, u16_t start_register, crc32_table_t* table);$/;"	p	language:C++	typeref:typename:u32_t
crc32_init_table	D:/work/git/moom/code/momo_crc.h	/^crc32_init_table(crc32_table_t* table,u32_t polynomial) {$/;"	f	language:C++	typeref:typename:void
crc32_init_table	D:/work/git/moom/code/momo_crc.h	/^static void crc32_init_table(crc32_table_t* table, u32_t polynomial);$/;"	p	language:C++	typeref:typename:void
crc32_slow	D:/work/git/moom/code/momo_crc.h	/^crc32_slow(u8_t* data, u32_t data_size, u32_t start_register, u32_t polynomial) {$/;"	f	language:C++	typeref:typename:u32_t
crc32_slow	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc32_slow(u8_t* data, u32_t data_size, u32_t start_register, u32_t polynomial);$/;"	p	language:C++	typeref:typename:u32_t
crc32_table_t	D:/work/git/moom/code/momo_crc.h	/^struct crc32_table_t {$/;"	s	language:C++
crc8	D:/work/git/moom/code/momo_crc.h	/^crc8(u8_t* data, u32_t data_size, u8_t start_register, crc8_table_t* table) {$/;"	f	language:C++	typeref:typename:u32_t
crc8	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc8(u8_t* data, u32_t data_size, u8_t start_register, crc8_table_t* table);$/;"	p	language:C++	typeref:typename:u32_t
crc8_init_table	D:/work/git/moom/code/momo_crc.h	/^crc8_init_table(crc8_table_t* table, u8_t polynomial) {$/;"	f	language:C++	typeref:typename:void
crc8_init_table	D:/work/git/moom/code/momo_crc.h	/^static void crc8_init_table(crc8_table_t* table, u8_t polynomial); $/;"	p	language:C++	typeref:typename:void
crc8_slow	D:/work/git/moom/code/momo_crc.h	/^crc8_slow(u8_t* data, u32_t data_size, u16_t start_register, u16_t polynomial) {$/;"	f	language:C++	typeref:typename:u32_t
crc8_slow	D:/work/git/moom/code/momo_crc.h	/^static u32_t crc8_slow(u8_t* data, u32_t data_size, u16_t start_register, u16_t polynomial);$/;"	p	language:C++	typeref:typename:u32_t
crc8_table_t	D:/work/git/moom/code/momo_crc.h	/^struct crc8_table_t {$/;"	s	language:C++
createDataFile	build/a.out.js	/^  createDataFile: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
createExportWrapper	build/a.out.js	/^function createExportWrapper(name, fixedasm) {$/;"	f	language:JavaScript
createLazyFile	build/a.out.js	/^  createLazyFile: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
createPreloadedFile	build/a.out.js	/^  createPreloadedFile: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
createWasm	build/a.out.js	/^function createWasm() {$/;"	f	language:JavaScript
cstr_clear	D:/work/git/moom/code/momo_types.h	/^cstr_clear(c8_t* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_compare	D:/work/git/moom/code/momo_types.h	/^cstr_compare(const c8_t* lhs, const c8_t* rhs) {$/;"	f	language:C++	typeref:typename:b32_t
cstr_compare_n	D:/work/git/moom/code/momo_types.h	/^cstr_compare_n(const c8_t* lhs, const c8_t* rhs, umi_t n) {$/;"	f	language:C++	typeref:typename:b32_t
cstr_concat	D:/work/git/moom/code/momo_types.h	/^cstr_concat(c8_t* dest, const c8_t* Src) {$/;"	f	language:C++	typeref:typename:void
cstr_copy	D:/work/git/moom/code/momo_types.h	/^cstr_copy(c8_t * dest, const c8_t* src) {$/;"	f	language:C++	typeref:typename:void
cstr_itoa	D:/work/git/moom/code/momo_types.h	/^cstr_itoa(c8_t* dest, s32_t num) {$/;"	f	language:C++	typeref:typename:void
cstr_len	D:/work/git/moom/code/momo_types.h	/^cstr_len(const c8_t* str) {$/;"	f	language:C++	typeref:typename:umi_t
cstr_reverse	D:/work/git/moom/code/momo_types.h	/^cstr_reverse(c8_t* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_to_f64	D:/work/git/moom/code/momo_types.h	/^cstr_to_f64(const c8_t* p) {$/;"	f	language:C++	typeref:typename:f64_t
ctx	D:/work/git/moom/code/moe_console.h	/^  void* ctx;$/;"	m	language:C++	struct:console_command_t	typeref:typename:void *
current_color	D:/work/git/moom/code/scene_lit_entity.h	/^  u32_t current_color;$/;"	m	language:C++	struct:lit_sensor_t	typeref:typename:u32_t
current_instance_index	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLuint
current_instance_index	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLuint
current_layer	D:/work/git/moom/code/moe_gfx_opengl.h	/^  f32_t current_layer;$/;"	m	language:C++	struct:Opengl	typeref:typename:f32_t
current_level_id	D:/work/git/moom/code/scene_lit.h	/^  u32_t current_level_id;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
current_texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint current_texture;$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLuint
cycles	D:/work/git/moom/code/moe_profiler.h	/^  u32_t cycles;$/;"	m	language:C++	struct:profiler_snapshot_t	typeref:typename:u32_t
c_link	D:/work/git/moom/code/momo_types.h	/^#define c_link /;"	d	language:C++
c_link_begin	D:/work/git/moom/code/momo_types.h	/^#define c_link_begin /;"	d	language:C++
c_link_end	D:/work/git/moom/code/momo_types.h	/^#define c_link_end /;"	d	language:C++
d	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h, d; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0908	typeref:typename:f32_t
data	D:/work/git/moom/code/moe_gfx.h	/^  void* data;$/;"	m	language:C++	struct:gfx_command_t	typeref:typename:void *
data	D:/work/git/moom/code/moe_platform.h	/^  void* data;$/;"	m	language:C++	struct:__anona41ebd570108	typeref:typename:void *
data	D:/work/git/moom/code/momo_png.h	/^  u8_t* data;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t *
data	D:/work/git/moom/code/momo_streams.h	/^  u8_t* data;$/;"	m	language:C++	struct:stream_t	typeref:typename:u8_t *
data	D:/work/git/moom/code/momo_ttf.h	/^  u8_t* data;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u8_t *
data	D:/work/git/moom/code/momo_wav.h	/^  void* data;$/;"	m	language:C++	struct:wav_t	typeref:typename:void *
data	D:/work/git/moom/code/w32_moe.h	/^  void* data;$/;"	m	language:C++	struct:w32_work_t	typeref:typename:void *
dataURIPrefix	build/a.out.js	/^var dataURIPrefix = 'data:application\/octet-stream;base64,';$/;"	v	language:JavaScript
data_chunk	D:/work/git/moom/code/momo_wav.h	/^  wav_data_chunk_t data_chunk;$/;"	m	language:C++	struct:wav_t	typeref:typename:wav_data_chunk_t
data_pos	D:/work/git/moom/code/moe_gfx.h	/^	umi_t data_pos;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:umi_t
data_size	D:/work/git/moom/code/momo_png.h	/^  umi_t data_size;$/;"	m	language:C++	struct:png_t	typeref:typename:umi_t
debug_arena	D:/work/git/moom/code/moe.h	/^  arena_t debug_arena;$/;"	m	language:C++	struct:moe_t	typeref:typename:arena_t
debug_font	D:/work/git/moom/code/moe.h	/^  asset_font_id_t debug_font;$/;"	m	language:C++	struct:moe_t	typeref:typename:asset_font_id_t
debug_log	D:/work/git/moom/code/moe_platform.h	/^  platform_debug_log_f* debug_log;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_debug_log_f *
defer	D:/work/git/moom/code/momo_types.h	/^# define defer /;"	d	language:C++
defs17	build/web.html	/^   id="defs17"><filter$/;"	I	language:HTML
defs343	build/web.html	/^   id="defs343"><linearGradient$/;"	I	language:HTML
defs48	build/web.html	/^   id="defs48"><filter$/;"	I	language:HTML
deg_to_rad_f32	D:/work/git/moom/code/momo_types.h	/^deg_to_rad_f32(f32_t degrees) {$/;"	f	language:C++	typeref:typename:f32_t
deg_to_rad_f64	D:/work/git/moom/code/momo_types.h	/^deg_to_rad_f64(f64_t degrees) {$/;"	f	language:C++	typeref:typename:f64_t
dependenciesFulfilled	build/a.out.js	/^dependenciesFulfilled = function runCaller() {$/;"	f	language:JavaScript
dependenciesFulfilled	build/a.out.js	/^var dependenciesFulfilled = null; \/\/ overridden to take different actions when all run depende/;"	v	language:JavaScript
digit_to_ascii	D:/work/git/moom/code/momo_types.h	/^#define digit_to_ascii(/;"	d	language:C++
dir	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t dir;$/;"	m	language:C++	struct:lit_light_t	typeref:typename:v2f_t
djb2	D:/work/git/moom/code/momo_types.h	/^djb2(const c8_t* str)$/;"	f	language:C++	typeref:typename:u32_t
dll	D:/work/git/moom/code/w32_moe.h	/^  HMODULE dll; $/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:HMODULE
done	bin/setup_emsdk.bat	/^:done$/;"	l	language:DosBatch
doRun	build/a.out.js	/^  function doRun() {$/;"	f	language:JavaScript	function:run
dst	D:/work/git/moom/code/moe_gfx.h	/^  gfx_blend_type_t dst;$/;"	m	language:C++	struct:gfx_command_blend_t	typeref:typename:gfx_blend_type_t
dummy_texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_Texture dummy_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
e	code/scene_computer.h	/^  Computer_Selection e[10];$/;"	m	language:C++	struct:Computer_Selection_List	typeref:typename:Computer_Selection[10]
e	D:/work/git/moom/code/moe_assets.h	/^  } e[ASSET_TAG_TYPE_COUNT];$/;"	m	language:C++	struct:asset_match_t	typeref:struct:asset_match_t::__anonef4454250108[]
e	D:/work/git/moom/code/momo_matrix.h	/^	f32_t e[4][4];$/;"	m	language:C++	struct:m44f_t	typeref:typename:f32_t[4][4]
e	D:/work/git/moom/code/momo_strings.h	/^			u8_t* e;$/;"	m	language:C++	struct:sb8_t::__anon620e3633010a::__anon620e36330208	typeref:typename:u8_t *
e	D:/work/git/moom/code/momo_strings.h	/^	u8_t* e;$/;"	m	language:C++	struct:str8_t	typeref:typename:u8_t *
e	D:/work/git/moom/code/momo_ttf.h	/^  _ttf_edge_t** e;$/;"	m	language:C++	struct:_ttf_edge_list_t	typeref:typename:_ttf_edge_t **
e	D:/work/git/moom/code/momo_vectors.h	/^	f32_t e[2];$/;"	m	language:C++	union:v2f_t	typeref:typename:f32_t[2]
e	D:/work/git/moom/code/momo_vectors.h	/^	s32_t e[2];$/;"	m	language:C++	union:v2s_t	typeref:typename:s32_t[2]
e	D:/work/git/moom/code/momo_vectors.h	/^	u32_t e[2];$/;"	m	language:C++	union:v2u_t	typeref:typename:u32_t[2]
e	D:/work/git/moom/code/momo_vectors.h	/^  f32_t e[3];$/;"	m	language:C++	union:v3f_t	typeref:typename:f32_t[3]
e	D:/work/git/moom/code/momo_vectors.h	/^  f32_t e[4];$/;"	m	language:C++	union:v4f_t	typeref:typename:f32_t[4]
ease_inout_back_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_back_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_back_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_back_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_back_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_back_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_back_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_back_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_bounce_f32(f32_t t) {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_bounce_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_bounce_f64(f64_t t) {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_bounce_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_circ	D:/work/git/moom/code/momo_easing.h	/^ease_inout_circ(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_circ_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_circ_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_circ_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_circ_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_circ_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_circ_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_cubic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_cubic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_cubic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_cubic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_elastic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_elastic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_elastic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_elastic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_expo_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_expo_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_expo_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_expo_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_expo_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_expo_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_expo_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_expo_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_quad_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quad_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_quad_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_quad_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_quad_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quad_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_quad_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_quad_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_quart_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quart_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_quart_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_quart_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_quart_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quart_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_quart_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_quart_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_quint_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quint_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_quint_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_quint_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_quint_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_quint_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_quint_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_quint_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_inout_sine_f32	D:/work/git/moom/code/momo_easing.h	/^ease_inout_sine_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_inout_sine_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_inout_sine_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_inout_sine_f64	D:/work/git/moom/code/momo_easing.h	/^ease_inout_sine_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_inout_sine_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_inout_sine_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_back_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_back_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_back_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_back_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_back_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_back_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_back_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_back_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_bounce_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_bounce_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_bounce_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_bounce_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_circ_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_circ_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_circ_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_circ_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_circ_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_circ_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_circ_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_circ_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_cubic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_cubic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_cubic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_cubic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_elastic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_elastic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_elastic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_elastic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_expo_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_expo_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_expo_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_expo_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_expo_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_expo_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_expo_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_expo_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_quad_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_quad_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_quad_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_quad_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_quad_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_quad_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_quad_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_quad_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_quart_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_quart_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_quart_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_quart_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_quart_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_quart_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_quart_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_quart_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_quint_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_quint_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_quint_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_quint_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_quint_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_quint_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_quint_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_quint_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_in_sine_f32	D:/work/git/moom/code/momo_easing.h	/^ease_in_sine_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_in_sine_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_in_sine_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_in_sine_f64	D:/work/git/moom/code/momo_easing.h	/^ease_in_sine_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_in_sine_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_in_sine_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_linear_f32	D:/work/git/moom/code/momo_easing.h	/^ease_linear_f32(f32_t t) $/;"	f	language:C++	typeref:typename:f32_t
ease_linear_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_linear_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_linear_f64	D:/work/git/moom/code/momo_easing.h	/^ease_linear_f64(f64_t t) $/;"	f	language:C++	typeref:typename:f64_t
ease_linear_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_linear_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_back_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_back_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_back_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_back_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_back_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_back_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_back_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_back_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_bounce_f32(f32_t t) {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_bounce_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_bounce_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_bounce_f64(f64_t t) {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_bounce_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_bounce_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_circ_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_circ_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_circ_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_circ_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_circ_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_circ_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_circ_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_circ_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_cubic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_cubic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_cubic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_cubic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_cubic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_cubic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_elastic_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_elastic_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_elastic_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_elastic_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_elastic_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_elastic_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_expo_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_expo_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_expo_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_expo_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_expo_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_expo_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_expo_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_expo_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_quad_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_quad_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_quad_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_quad_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_quad_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_quad_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_quad_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_quad_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_quart_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_quart_f32(f32_t t) {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_quart_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_quart_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_quart_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_quart_f64(f64_t t) {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_quart_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_quart_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
ease_out_quint_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_quint_f32(f32_t t)  {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_quint_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_quint_f32(f32_t t);;$/;"	p	language:C++	typeref:typename:f32_t
ease_out_quint_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_quint_f64(f64_t t)  {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_quint_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_quint_f64(f64_t t);;$/;"	p	language:C++	typeref:typename:f64_t
ease_out_sine_f32	D:/work/git/moom/code/momo_easing.h	/^ease_out_sine_f32(f32_t t) {$/;"	f	language:C++	typeref:typename:f32_t
ease_out_sine_f32	D:/work/git/moom/code/momo_easing.h	/^static f32_t ease_out_sine_f32(f32_t t);$/;"	p	language:C++	typeref:typename:f32_t
ease_out_sine_f64	D:/work/git/moom/code/momo_easing.h	/^ease_out_sine_f64(f64_t t) {$/;"	f	language:C++	typeref:typename:f64_t
ease_out_sine_f64	D:/work/git/moom/code/momo_easing.h	/^static f64_t ease_out_sine_f64(f64_t t);$/;"	p	language:C++	typeref:typename:f64_t
edges	D:/work/git/moom/code/scene_lit.h	/^  lit_edge_t edges[256];$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_edge_t[256]
edge_count	D:/work/git/moom/code/scene_lit.h	/^  u32_t edge_count;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
emscripten_memcpy_big	build/a.out.js	/^  "emscripten_memcpy_big": _emscripten_memcpy_big,$/;"	p	language:JavaScript	class:asmLibraryArg
ENABLE_ASSERT	D:/work/git/moom/code/momo_types.h	/^# define ENABLE_ASSERT /;"	d	language:C++
endian_swap_s16	D:/work/git/moom/code/momo_types.h	/^endian_swap_s16(s16_t value) {$/;"	f	language:C++	typeref:typename:s16_t
endian_swap_u16	D:/work/git/moom/code/momo_types.h	/^endian_swap_u16(u16_t value) {$/;"	f	language:C++	typeref:typename:u16_t
endian_swap_u32	D:/work/git/moom/code/momo_types.h	/^endian_swap_u32(u32_t value) {$/;"	f	language:C++	typeref:typename:u32_t
end_clone_emsdk	bin/setup_emsdk.bat	/^:end_clone_emsdk$/;"	l	language:DosBatch
end_point_indices	D:/work/git/moom/code/momo_ttf.h	/^  u16_t* end_point_indices; \/\/ as many as contour_counts$/;"	m	language:C++	struct:_ttf_glyph_outline_t	typeref:typename:u16_t *
end_pt	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t end_pt;$/;"	m	language:C++	struct:lit_edge_t	typeref:typename:v2f_t
entries	D:/work/git/moom/code/moe_inspector.h	/^  inspector_entry_t entries[64];$/;"	m	language:C++	struct:__anona16973e90308	typeref:typename:inspector_entry_t[64]
entries	D:/work/git/moom/code/moe_profiler.h	/^  profiler_entry_t entries[PROFILER_MAX_ENTRIES];$/;"	m	language:C++	struct:profiler_t	typeref:typename:profiler_entry_t[]
entries	D:/work/git/moom/code/w32_moe.h	/^  w32_work_t entries[256];$/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:w32_work_t[256]
entry_count	D:/work/git/moom/code/moe_gfx.h	/^	umi_t entry_count;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:umi_t
entry_count	D:/work/git/moom/code/moe_inspector.h	/^  u32_t entry_count;$/;"	m	language:C++	struct:__anona16973e90308	typeref:typename:u32_t
entry_count	D:/work/git/moom/code/moe_profiler.h	/^  u32_t entry_count;$/;"	m	language:C++	struct:profiler_t	typeref:typename:u32_t
entry_pos	D:/work/git/moom/code/moe_gfx.h	/^	umi_t entry_pos;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:umi_t
entry_start	D:/work/git/moom/code/moe_gfx.h	/^	umi_t entry_start;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:umi_t
env	build/a.out.js	/^    'env': asmLibraryArg,$/;"	p	language:JavaScript	class:createWasm.info
ENVIRONMENT_IS_NODE	build/a.out.js	/^var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && t/;"	v	language:JavaScript
ENVIRONMENT_IS_SHELL	build/a.out.js	/^var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER/;"	v	language:JavaScript
ENVIRONMENT_IS_WEB	build/a.out.js	/^var ENVIRONMENT_IS_WEB = typeof window == 'object';$/;"	v	language:JavaScript
ENVIRONMENT_IS_WORKER	build/a.out.js	/^var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';$/;"	v	language:JavaScript
error	build/a.out.js	/^  error: function() {$/;"	m	language:JavaScript	class:FS
exitJS	build/a.out.js	/^  function exitJS(status, implicit) {$/;"	f	language:JavaScript
ExitStatus	build/a.out.js	/^  function ExitStatus(status) {$/;"	c	language:JavaScript
EXITSTATUS	build/a.out.js	/^var EXITSTATUS;$/;"	v	language:JavaScript
exported	D:/work/git/moom/code/momo_types.h	/^# define exported /;"	d	language:C++
f	D:/work/git/moom/code/momo_types.h	/^  F f;$/;"	m	language:C++	struct:_defer_scope_guard	typeref:typename:F
f	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_INFINITY::__anonda9447de010a	typeref:typename:f32_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_NAN::__anonda9447de030a	typeref:typename:f32_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_NEG_INFINITY::__anonda9447de020a	typeref:typename:f32_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonda9447de070a	typeref:typename:f32_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonda9447de090a	typeref:typename:f32_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonda9447de0a0a	typeref:typename:f64_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_INFINITY::__anonda9447de050a	typeref:typename:f64_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_NAN::__anonda9447de040a	typeref:typename:f64_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_NEG_INFINITY::__anonda9447de060a	typeref:typename:f64_t
f	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonda9447de080a	typeref:typename:f64_t
F32_EPSILON	D:/work/git/moom/code/momo_types.h	/^#define F32_EPSILON /;"	d	language:C++
F32_INFINITY	D:/work/git/moom/code/momo_types.h	/^#define F32_INFINITY /;"	d	language:C++
F32_NAN	D:/work/git/moom/code/momo_types.h	/^#define F32_NAN /;"	d	language:C++
F32_NEG_INFINITY	D:/work/git/moom/code/momo_types.h	/^#define F32_NEG_INFINITY /;"	d	language:C++
f32_t	D:/work/git/moom/code/momo_json.h	/^    f32_t f32_t;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:f32_t
f32_t	D:/work/git/moom/code/momo_types.h	/^typedef float    f32_t;$/;"	t	language:C++	typeref:typename:float
F64_EPSILON	D:/work/git/moom/code/momo_types.h	/^#define F64_EPSILON /;"	d	language:C++
F64_INFINITY	D:/work/git/moom/code/momo_types.h	/^#define F64_INFINITY /;"	d	language:C++
F64_NAN	D:/work/git/moom/code/momo_types.h	/^#define F64_NAN /;"	d	language:C++
F64_NEG_INFINITY	D:/work/git/moom/code/momo_types.h	/^#define F64_NEG_INFINITY /;"	d	language:C++
f64_t	D:/work/git/moom/code/momo_types.h	/^typedef double   f64_t;$/;"	t	language:C++	typeref:typename:double
fd_write	build/a.out.js	/^  "fd_write": _fd_write$/;"	p	language:JavaScript	class:asmLibraryArg
feColorMatrix20	build/web.html	/^   id="feColorMatrix20" \/><\/filter><\/defs><mask$/;"	I	language:HTML
feColorMatrix51	build/web.html	/^   id="feColorMatrix51" \/><\/filter><\/defs><mask$/;"	I	language:HTML
feGaussianBlur5128	build/web.html	/^       id="feGaussianBlur5128" \/><\/filter><linearGradient$/;"	I	language:HTML
filename	D:/work/git/moom/code/moe_profiler.h	/^  const char* filename;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:const char *
filename	D:/work/git/moom/code/sui_atlas.h	/^  const char* filename;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:const char *
filename	D:/work/git/moom/code/sui_atlas.h	/^  const char* filename;$/;"	m	language:C++	struct:sui_atlas_sprite_t	typeref:typename:const char *
files	D:/work/git/moom/code/w32_moe.h	/^  w32_file_t files[32]; $/;"	m	language:C++	struct:w32_file_cabinet_t	typeref:typename:w32_file_t[32]
file_cabinet	D:/work/git/moom/code/w32_moe.h	/^  w32_file_cabinet_t file_cabinet;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:w32_file_cabinet_t
filled_circle_sprite	D:/work/git/moom/code/scene_lit.h	/^  asset_sprite_id_t filled_circle_sprite;$/;"	m	language:C++	struct:lit_t	typeref:typename:asset_sprite_id_t
filter5126	build/web.html	/^     id="filter5126"><feGaussianBlur$/;"	I	language:HTML
filter_method	D:/work/git/moom/code/momo_png.h	/^  u8_t filter_method;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t
filter_method	D:/work/git/moom/code/momo_png.h	/^  u8_t filter_method;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u8_t
find_best_asset_of_type	D:/work/git/moom/code/moe_assets.cpp	/^find_best_asset_of_type(assets_t* ma, $/;"	f	language:C++	typeref:typename:u32_t	file:
find_best_font	D:/work/git/moom/code/moe_assets.cpp	/^find_best_font(assets_t* ma, $/;"	f	language:C++	typeref:typename:asset_font_id_t	file:
find_best_sprite	D:/work/git/moom/code/moe_assets.cpp	/^find_best_sprite(assets_t* ma, $/;"	f	language:C++	typeref:typename:asset_sprite_id_t	file:
find_first_asset_of_type	D:/work/git/moom/code/moe_assets.cpp	/^find_first_asset_of_type(assets_t* ma, $/;"	f	language:C++	typeref:typename:u32_t	file:
find_first_bitmap	D:/work/git/moom/code/moe_assets.cpp	/^find_first_bitmap(assets_t* ma, Asset_Group_Type group_type) {$/;"	f	language:C++	typeref:typename:asset_bitmap_id_t	file:
find_first_font	D:/work/git/moom/code/moe_assets.cpp	/^find_first_font(assets_t* ma, Asset_Group_Type group_type) {$/;"	f	language:C++	typeref:typename:asset_font_id_t	file:
find_first_sprite	D:/work/git/moom/code/moe_assets.cpp	/^find_first_sprite(assets_t* ma, Asset_Group_Type group_type) {$/;"	f	language:C++	typeref:typename:asset_sprite_id_t	file:
first_asset_index	D:/work/git/moom/code/karu.h	/^  u32_t first_asset_index;$/;"	m	language:C++	struct:karu_group_t	typeref:typename:u32_t
first_asset_index	D:/work/git/moom/code/moe_assets.h	/^  u32_t first_asset_index;$/;"	m	language:C++	struct:asset_group_t	typeref:typename:u32_t
first_payload_index	D:/work/git/moom/code/moe_gfx.h	/^  umi_t first_payload_index;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:umi_t
first_tag_index	D:/work/git/moom/code/karu.h	/^  u32_t first_tag_index;$/;"	m	language:C++	struct:karu_asset_t	typeref:typename:u32_t
first_tag_index	D:/work/git/moom/code/moe_assets.h	/^  u32_t first_tag_index;$/;"	m	language:C++	struct:asset_slot_t	typeref:typename:u32_t
flags	D:/work/git/moom/code/momo_ttf.h	/^  u8_t flags;$/;"	m	language:C++	struct:_ttf_glyph_point_t	typeref:typename:u8_t
flag_for_reset	D:/work/git/moom/code/moe_profiler.h	/^  b32_t flag_for_reset;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:b32_t
floor_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t floor_f32(f32_t value) {$/;"	f	language:C++	typeref:typename:f32_t
floor_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t floor_f32(f32_t value);$/;"	p	language:C++	typeref:typename:f32_t
floor_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t floor_f64(f64_t value);$/;"	p	language:C++	typeref:typename:f64_t
floor_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t floor_f64(f64_t value){$/;"	f	language:C++	typeref:typename:f64_t
flush_NO_FILESYSTEM	build/a.out.js	/^  function flush_NO_FILESYSTEM() {$/;"	f	language:JavaScript
fmt_chunk	D:/work/git/moom/code/momo_wav.h	/^  wav_fmt_chunk_t fmt_chunk;$/;"	m	language:C++	struct:wav_t	typeref:typename:wav_fmt_chunk_t
font	D:/work/git/moom/code/karu.h	/^    Karu_Font font;$/;"	m	language:C++	union:karu_asset_t::__anon06005905010a	typeref:typename:Karu_Font
font	D:/work/git/moom/code/moe_assets.h	/^    asset_font_t font;$/;"	m	language:C++	union:asset_slot_t::__anonef445425020a	typeref:typename:asset_font_t
font	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_font_t* font;$/;"	m	language:C++	struct:sui_atlas_font_glyph_context_t	typeref:typename:sui_atlas_font_t *
font	D:/work/git/moom/code/sui_pack.h	/^    sui_packer_source_font_t font;$/;"	m	language:C++	union:sui_packer_source_t::__anon38c8e121010a	typeref:typename:sui_packer_source_font_t
fonts	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_font_t fonts[128];$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:sui_atlas_font_t[128]
font_count	D:/work/git/moom/code/sui_atlas.h	/^  u32_t font_count;$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:u32_t
font_glyph	D:/work/git/moom/code/sui_atlas.h	/^    sui_atlas_font_glyph_context_t font_glyph;$/;"	m	language:C++	union:sui_atlas_context_t::__anonfc2bf917010a	typeref:typename:sui_atlas_font_glyph_context_t
format	D:/work/git/moom/code/momo_wav.h	/^  u32_t format; \/\/ big endian$/;"	m	language:C++	struct:wav_riff_chunk_t	typeref:typename:u32_t
frame_arena	D:/work/git/moom/code/moe.h	/^  arena_t frame_arena;$/;"	m	language:C++	struct:moe_t	typeref:typename:arena_t
free_files	D:/work/git/moom/code/w32_moe.h	/^  u32_t free_files[32];$/;"	m	language:C++	struct:w32_file_cabinet_t	typeref:typename:u32_t[32]
free_file_count	D:/work/git/moom/code/w32_moe.h	/^  u32_t free_file_count;$/;"	m	language:C++	struct:w32_file_cabinet_t	typeref:typename:u32_t
free_memory	D:/work/git/moom/code/moe_platform.h	/^  platform_free_memory_f* free_memory;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_free_memory_f *
front	D:/work/git/moom/code/gist_ring_buffer.cpp	/^  u32_t front;$/;"	m	language:C++	struct:gist_rb	typeref:typename:u32_t	file:
FS	build/a.out.js	/^var FS = {$/;"	c	language:JavaScript
fs	build/a.out.js	/^var fs, nodePath;$/;"	v	language:JavaScript
func	D:/work/git/moom/code/moe_console.h	/^  void (*func)(void*);$/;"	m	language:C++	struct:console_command_t	typeref:typename:void (*)(void *)
functions	D:/work/git/moom/code/w32_moe.h	/^  void** functions;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:void **
function_count	D:/work/git/moom/code/w32_moe.h	/^  u32_t function_count;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:u32_t
function_names	D:/work/git/moom/code/w32_moe.h	/^  const char** function_names;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:const char **
g	D:/work/git/moom/code/momo_colors.h	/^    struct { f32_t r, g, b; };  $/;"	m	language:C++	struct:rgba_t::__anon7258a5bb010a::__anon7258a5bb0208	typeref:typename:f32_t
g	D:/work/git/moom/code/momo_colors.h	/^  f32_t r, g, b;   $/;"	m	language:C++	struct:rgb_t	typeref:typename:f32_t
g11	build/web.html	/^   id="g11"><path$/;"	I	language:HTML
g121	build/web.html	/^   id="g121"><g$/;"	I	language:HTML
g123	build/web.html	/^   id="g123"><image$/;"	I	language:HTML
g127	build/web.html	/^   id="g127"><radialGradient$/;"	I	language:HTML
g138	build/web.html	/^   id="g138"><image$/;"	I	language:HTML
g142	build/web.html	/^   id="g142"><radialGradient$/;"	I	language:HTML
g153	build/web.html	/^   id="g153"><image$/;"	I	language:HTML
g157	build/web.html	/^   id="g157"><radialGradient$/;"	I	language:HTML
g168	build/web.html	/^   id="g168"><image$/;"	I	language:HTML
g172	build/web.html	/^   id="g172"><radialGradient$/;"	I	language:HTML
g183	build/web.html	/^   id="g183"><image$/;"	I	language:HTML
g187	build/web.html	/^   id="g187"><radialGradient$/;"	I	language:HTML
g198	build/web.html	/^   id="g198"><image$/;"	I	language:HTML
g202	build/web.html	/^   id="g202"><radialGradient$/;"	I	language:HTML
g213	build/web.html	/^   id="g213"><image$/;"	I	language:HTML
g217	build/web.html	/^   id="g217"><radialGradient$/;"	I	language:HTML
g228	build/web.html	/^   id="g228"><image$/;"	I	language:HTML
g23	build/web.html	/^   id="g23"><image$/;"	I	language:HTML
g232	build/web.html	/^   id="g232"><radialGradient$/;"	I	language:HTML
g245	build/web.html	/^   id="g245"$/;"	I	language:HTML
g247	build/web.html	/^   id="g247"><path$/;"	I	language:HTML
g269	build/web.html	/^   id="g269"><linearGradient$/;"	I	language:HTML
g27	build/web.html	/^   id="g27"><path$/;"	I	language:HTML
g33	build/web.html	/^   id="g33"><g$/;"	I	language:HTML
g35	build/web.html	/^   id="g35"><linearGradient$/;"	I	language:HTML
g4141	build/web.html	/^   id="g4141"$/;"	I	language:HTML
g4143	build/web.html	/^   id="g4143"><\/g><g$/;"	I	language:HTML
g4165	build/web.html	/^   id="g4165"><linearGradient$/;"	I	language:HTML
g5130	build/web.html	/^   id="g5130"$/;"	I	language:HTML
g54	build/web.html	/^   id="g54"><image$/;"	I	language:HTML
g58	build/web.html	/^   id="g58"><path$/;"	I	language:HTML
g71	build/web.html	/^   id="g71"><g$/;"	I	language:HTML
g73	build/web.html	/^   id="g73"><g$/;"	I	language:HTML
g75	build/web.html	/^   id="g75"><image$/;"	I	language:HTML
g79	build/web.html	/^   id="g79"><radialGradient$/;"	I	language:HTML
g9	build/web.html	/^   id="g9"><g$/;"	I	language:HTML
game_exit	D:/work/git/moom/code/scene.h	/^game_exit(moe_t* moe) {$/;"	f	language:C++	typeref:typename:void
game_init	D:/work/git/moom/code/scene.h	/^game_init(moe_t* moe) {$/;"	f	language:C++	typeref:typename:void
game_tick	D:/work/git/moom/code/scene.h	/^game_tick(moe_t* moe) $/;"	f	language:C++	typeref:typename:void
getBinary	build/a.out.js	/^function getBinary(file) {$/;"	f	language:JavaScript
getBinaryPromise	build/a.out.js	/^function getBinaryPromise() {$/;"	f	language:JavaScript
getNativeTypeSize	build/a.out.js	/^function getNativeTypeSize(type) {$/;"	f	language:JavaScript
getUniqueRunDependency	build/a.out.js	/^function getUniqueRunDependency(id) {$/;"	f	language:JavaScript
getValue	build/a.out.js	/^  function getValue(ptr, type = 'i8') {$/;"	f	language:JavaScript
get_asset_slot	D:/work/git/moom/code/moe_assets.cpp	/^get_asset_slot(assets_t* ma, u32_t asset_index){$/;"	f	language:C++	typeref:typename:asset_slot_t *	file:
get_bitmap	D:/work/git/moom/code/moe_assets.cpp	/^get_bitmap(assets_t* ma, asset_bitmap_id_t bitmap_id) {$/;"	f	language:C++	typeref:typename:asset_bitmap_t *	file:
get_font	D:/work/git/moom/code/moe_assets.cpp	/^get_font(assets_t* ma, asset_font_id_t font_id) {$/;"	f	language:C++	typeref:typename:asset_font_t *	file:
get_glyph	D:/work/git/moom/code/moe_assets.cpp	/^get_glyph(asset_font_t* font, u32_t codepoint) {$/;"	f	language:C++	typeref:typename:asset_font_glyph_t *	file:
get_kerning	D:/work/git/moom/code/moe_assets.cpp	/^get_kerning(asset_font_t* font,$/;"	f	language:C++	typeref:typename:f32_t	file:
get_next_texture_handle	D:/work/git/moom/code/moe_assets.cpp	/^get_next_texture_handle() {$/;"	f	language:C++	typeref:typename:u32_t	file:
get_performance_counter	D:/work/git/moom/code/moe_profiler.h	/^  profiler_get_performance_counter_t* get_performance_counter;$/;"	m	language:C++	struct:profiler_t	typeref:typename:profiler_get_performance_counter_t *
get_sprite	D:/work/git/moom/code/moe_assets.cpp	/^get_sprite(assets_t* ma, asset_sprite_id_t sprite_id) {$/;"	f	language:C++	typeref:typename:asset_sprite_t *	file:
gfx	D:/work/git/moom/code/moe_gfx_opengl.h	/^  gfx_t gfx; \/\/ Must be first member$/;"	m	language:C++	struct:Opengl	typeref:typename:gfx_t
gfx	D:/work/git/moom/code/moe_platform.h	/^  gfx_t* gfx;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:gfx_t *
gfx_advance_depth	D:/work/git/moom/code/moe_gfx.h	/^gfx_advance_depth(gfx_t* g) {$/;"	f	language:C++	typeref:typename:void
gfx_advance_depth	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_advance_depth(gfx_t* g);$/;"	p	language:C++	typeref:typename:void
gfx_begin_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^gfx_begin_texture_transfer(gfx_t* g, u32_t required_space) {$/;"	f	language:C++	typeref:typename:gfx_texture_payload_t *
gfx_begin_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^static gfx_texture_payload_t* gfx_begin_texture_transfer(gfx_t* g, u32_t required_space);$/;"	p	language:C++	typeref:typename:gfx_texture_payload_t *
GFX_BLEND_TYPE_DST_ALPHA	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_DST_ALPHA,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_DST_COLOR	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_DST_COLOR,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_INV_DST_ALPHA	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_ALPHA,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_INV_DST_COLOR	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_COLOR,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_INV_SRC_ALPHA	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_ALPHA,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_INV_SRC_COLOR	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_COLOR,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_ONE	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_ONE,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_SRC_ALPHA	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_SRC_ALPHA,$/;"	e	language:C++	enum:gfx_blend_type_t
GFX_BLEND_TYPE_SRC_COLOR	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_SRC_COLOR,$/;"	e	language:C++	enum:gfx_blend_type_t
gfx_blend_type_t	D:/work/git/moom/code/moe_gfx.h	/^typedef enum gfx_blend_type_t {$/;"	g	language:C++
gfx_blend_type_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_blend_type_t;$/;"	t	language:C++	typeref:enum:gfx_blend_type_t
GFX_BLEND_TYPE_ZERO	D:/work/git/moom/code/moe_gfx.h	/^  GFX_BLEND_TYPE_ZERO,$/;"	e	language:C++	enum:gfx_blend_type_t
gfx_cancel_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^gfx_cancel_texture_transfer(gfx_texture_payload_t* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_cancel_texture_transfer(gfx_texture_payload_t* entry);$/;"	p	language:C++	typeref:typename:void
gfx_clear_commands	D:/work/git/moom/code/moe_gfx.h	/^gfx_clear_commands(gfx_t* g) {$/;"	f	language:C++	typeref:typename:void
gfx_clear_commands	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_clear_commands(gfx_t* g);$/;"	p	language:C++	typeref:typename:void
gfx_command_advance_depth_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_advance_depth_t {$/;"	s	language:C++
gfx_command_advance_depth_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_advance_depth_t;$/;"	t	language:C++	typeref:struct:gfx_command_advance_depth_t
gfx_command_blend_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_blend_t {$/;"	s	language:C++
gfx_command_blend_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_blend_t;$/;"	t	language:C++	typeref:struct:gfx_command_blend_t
gfx_command_clear_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_clear_t {$/;"	s	language:C++
gfx_command_clear_t	D:/work/git/moom/code/moe_gfx.h	/^}gfx_command_clear_t;$/;"	t	language:C++	typeref:struct:gfx_command_clear_t
gfx_command_delete_all_textures_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_delete_all_textures_t {$/;"	s	language:C++
gfx_command_delete_all_textures_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_delete_all_textures_t;$/;"	t	language:C++	typeref:struct:gfx_command_delete_all_textures_t
gfx_command_delete_texture_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_delete_texture_t {$/;"	s	language:C++
gfx_command_delete_texture_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_delete_texture_t;$/;"	t	language:C++	typeref:struct:gfx_command_delete_texture_t
gfx_command_queue_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_queue_t {$/;"	s	language:C++
gfx_command_queue_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_queue_t;$/;"	t	language:C++	typeref:struct:gfx_command_queue_t
gfx_command_rect_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_rect_t {$/;"	s	language:C++
gfx_command_rect_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_rect_t;$/;"	t	language:C++	typeref:struct:gfx_command_rect_t
gfx_command_sprite_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_sprite_t {$/;"	s	language:C++
gfx_command_sprite_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_sprite_t;$/;"	t	language:C++	typeref:struct:gfx_command_sprite_t
gfx_command_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_t {$/;"	s	language:C++
gfx_command_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_t;$/;"	t	language:C++	typeref:struct:gfx_command_t
gfx_command_triangle_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_triangle_t {$/;"	s	language:C++
gfx_command_triangle_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_triangle_t;$/;"	t	language:C++	typeref:struct:gfx_command_triangle_t
GFX_COMMAND_TYPE_ADVANCE_DEPTH	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_ADVANCE_DEPTH,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_BLEND	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_BLEND,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_CLEAR	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_CLEAR,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_DELETE_TEXTURE	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_TEXTURE,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_LINE	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_LINE,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_RECT	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_RECT,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_SPRITE	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_SPRITE,$/;"	e	language:C++	enum:gfx_command_type_t
gfx_command_type_t	D:/work/git/moom/code/moe_gfx.h	/^typedef enum gfx_command_type_t {$/;"	g	language:C++
gfx_command_type_t	D:/work/git/moom/code/moe_gfx.h	/^}gfx_command_type_t;$/;"	t	language:C++	typeref:enum:gfx_command_type_t
GFX_COMMAND_TYPE_TRIANGLE	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_TRIANGLE,$/;"	e	language:C++	enum:gfx_command_type_t
GFX_COMMAND_TYPE_VIEW	D:/work/git/moom/code/moe_gfx.h	/^  GFX_COMMAND_TYPE_VIEW,$/;"	e	language:C++	enum:gfx_command_type_t
gfx_command_view_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_command_view_t {$/;"	s	language:C++
gfx_command_view_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_command_view_t;$/;"	t	language:C++	typeref:struct:gfx_command_view_t
gfx_complete_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^gfx_complete_texture_transfer(gfx_texture_payload_t* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_complete_texture_transfer	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_complete_texture_transfer(gfx_texture_payload_t* entry);$/;"	p	language:C++	typeref:typename:void
gfx_foreach_command	D:/work/git/moom/code/moe_gfx.h	/^#define gfx_foreach_command(/;"	d	language:C++
gfx_get_command	D:/work/git/moom/code/moe_gfx.h	/^gfx_get_command(gfx_t* g, u32_t index) {$/;"	f	language:C++	typeref:typename:gfx_command_t *
gfx_get_command	D:/work/git/moom/code/moe_gfx.h	/^static gfx_command_t* gfx_get_command(gfx_t* g, u32_t index);$/;"	p	language:C++	typeref:typename:gfx_command_t *
gfx_init_command_queue	D:/work/git/moom/code/moe_gfx.h	/^gfx_init_command_queue(gfx_t* g, void* data, umi_t size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_command_queue	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_init_command_queue(gfx_t* g, void* data, umi_t size);$/;"	p	language:C++	typeref:typename:void
gfx_init_texture_queue	D:/work/git/moom/code/moe_gfx.h	/^gfx_init_texture_queue(gfx_t* g, void* data, umi_t size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_texture_queue	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_init_texture_queue(gfx_t* g, void* data, umi_t size);$/;"	p	language:C++	typeref:typename:void
GFX_MAX_TEXTURES	D:/work/git/moom/code/moe_gfx.h	/^#define GFX_MAX_TEXTURES /;"	d	language:C++
gfx_next_texture_handle	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_next_texture_handle();$/;"	p	language:C++	typeref:typename:void
GFX_OGL_H	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GFX_OGL_H$/;"	d	language:C++
gfx_push_advance_depth	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_advance_depth(gfx_t* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_advance_depth	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_advance_depth(gfx_t* g); $/;"	p	language:C++	typeref:typename:void
gfx_push_blend	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_blend(gfx_t* g, gfx_blend_type_t src, gfx_blend_type_t dst) {$/;"	f	language:C++	typeref:typename:void
gfx_push_blend	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_blend(gfx_t* g, gfx_blend_type_t blend_type);$/;"	p	language:C++	typeref:typename:void
gfx_push_circle_outline	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_circle_outline(gfx_t* g, v2f_t center, f32_t radius, f32_t thickness, u32_t line_count,/;"	f	language:C++	typeref:typename:void
gfx_push_circle_outline	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_circle_outline(gfx_t* g, v2f_t center, f32_t radius, f32_t thickness, u32_t/;"	p	language:C++	typeref:typename:void
gfx_push_colors	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_colors(gfx_t* g, rgba_t colors) {$/;"	f	language:C++	typeref:typename:void
gfx_push_colors	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_colors(gfx_t* g, rgba_t colors); $/;"	p	language:C++	typeref:typename:void
gfx_push_delete_all_textures	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_delete_all_textures(gfx_t* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_all_textures	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_delete_all_textures(gfx_t* g);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_texture	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_delete_texture(gfx_t* g, u32_t texture_index) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_texture	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_delete_texture(gfx_t* g, u32_t texture_index);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_circle	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_filled_circle(gfx_t* g, v2f_t center, f32_t radius,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_filled_rect(gfx_t* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_filled_rect(gfx_t* g, rgba_t colors, v2f_t pos, f32_t rot, v2f_t size);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_triangle	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_filled_triangle(gfx_t* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_triangle	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_filled_triangle(gfx_t* g, rgba_t colors, v2f_t p0, v2f_t p1, v2f_t p2);$/;"	p	language:C++	typeref:typename:void
gfx_push_line	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_line(gfx_t* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_line	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_line(gfx_t* g, v2f_t p0, v2f_t p1, f32_t thickness, rgba_t colors);$/;"	p	language:C++	typeref:typename:void
gfx_push_rect_outline	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_rect_outline(gfx_t* g, Rect2 rect, f32_t thickness, rgba_t colors, f32_t po/;"	p	language:C++	typeref:typename:void
gfx_push_sprite	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_sprite(gfx_t* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_sprite	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_sprite(gfx_t* g, rgba_t colors, v2f_t pos, v2f_t size, v2f_t anchor, u32_t /;"	p	language:C++	typeref:typename:void
gfx_push_view	D:/work/git/moom/code/moe_gfx.h	/^gfx_push_view(gfx_t* g, f32_t min_x, f32_t max_x, f32_t min_y, f32_t max_y, f32_t pos_x, f32_t p/;"	f	language:C++	typeref:typename:void
gfx_push_view	D:/work/git/moom/code/moe_gfx.h	/^static void gfx_push_view(gfx_t* g, v2f_t pos, f32_t width, f32_t height, u32_t layers);$/;"	p	language:C++	typeref:typename:void
gfx_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_t {$/;"	s	language:C++
gfx_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_t;$/;"	t	language:C++	typeref:struct:gfx_t
GFX_TEXTURE_PAYLOAD_STATE_EMPTY	D:/work/git/moom/code/moe_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_EMPTY,$/;"	e	language:C++	enum:gfx_texture_payload_state_t
GFX_TEXTURE_PAYLOAD_STATE_LOADING	D:/work/git/moom/code/moe_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_LOADING,$/;"	e	language:C++	enum:gfx_texture_payload_state_t
GFX_TEXTURE_PAYLOAD_STATE_READY	D:/work/git/moom/code/moe_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_READY,$/;"	e	language:C++	enum:gfx_texture_payload_state_t
gfx_texture_payload_state_t	D:/work/git/moom/code/moe_gfx.h	/^typedef enum gfx_texture_payload_state_t {$/;"	g	language:C++
gfx_texture_payload_state_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_texture_payload_state_t;$/;"	t	language:C++	typeref:enum:gfx_texture_payload_state_t
gfx_texture_payload_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_texture_payload_t {$/;"	s	language:C++
gfx_texture_payload_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_texture_payload_t;$/;"	t	language:C++	typeref:struct:gfx_texture_payload_t
gfx_texture_queue_t	D:/work/git/moom/code/moe_gfx.h	/^typedef struct gfx_texture_queue_t {$/;"	s	language:C++
gfx_texture_queue_t	D:/work/git/moom/code/moe_gfx.h	/^} gfx_texture_queue_t;$/;"	t	language:C++	typeref:struct:gfx_texture_queue_t
gigabytes	D:/work/git/moom/code/momo_types.h	/^#define gigabytes(/;"	d	language:C++
gist_cdl_init	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_init(gist_cdl_node* sentinel) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_new_node	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_new_node(int value) {$/;"	f	language:C++	typeref:typename:gist_cdl_node *	file:
gist_cdl_node	D:/work/git/moom/code/gist_linked_list.cpp	/^struct gist_cdl_node {$/;"	s	language:C++	file:
gist_cdl_node	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^struct gist_cdl_node {$/;"	s	language:C++	file:
gist_cdl_print_backwards	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_print_backwards(gist_cdl_node* sentinel) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_print_forward	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_print_forward(gist_cdl_node* sentinel) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_push_back	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_push_back(gist_cdl_node* sentinel, int value) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_push_back	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^gist_cdl_push_back(gist_cdl_node* sentinel, gist_cdl_node* node) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_push_front	D:/work/git/moom/code/gist_linked_list.cpp	/^gist_cdl_push_front(gist_cdl_node* sentinel, int value) {$/;"	f	language:C++	typeref:typename:void	file:
gist_cdl_push_front	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^gist_cdl_push_front(gist_cdl_node* sentinel, gist_cdl_node* node) {$/;"	f	language:C++	typeref:typename:void	file:
gist_rb	D:/work/git/moom/code/gist_ring_buffer.cpp	/^struct gist_rb {$/;"	s	language:C++	file:
gist_rb_dequeue	D:/work/git/moom/code/gist_ring_buffer.cpp	/^gist_rb_dequeue(gist_rb* rb) $/;"	f	language:C++	typeref:typename:int *	file:
gist_rb_enqueue	D:/work/git/moom/code/gist_ring_buffer.cpp	/^gist_rb_enqueue(gist_rb* rb) $/;"	f	language:C++	typeref:typename:int *	file:
glAttachShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glAttachShader* glAttachShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glAttachShader *
glBindTexture	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glBindTexture* glBindTexture ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindTexture *
glBindVertexArray	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glBindVertexArray* glBindVertexArray;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindVertexArray *
GLbitfield	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef u32_t  GLbitfield;$/;"	t	language:C++	typeref:typename:u32_t
glBlendFunc	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glBlendFunc* glBlendFunc;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFunc *
glBlendFuncSeparate	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glBlendFuncSeparate* glBlendFuncSeparate;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFuncSeparate *
GLboolean	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef b8_t   GLboolean;$/;"	t	language:C++	typeref:typename:b8_t
GLchar	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef c8_t   GLchar;$/;"	t	language:C++	typeref:typename:c8_t
GLclampf	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef f32_t  GLclampf;$/;"	t	language:C++	typeref:typename:f32_t
glClear	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glClear* glClear;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClear *
glClearColor	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glClearColor* glClearColor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClearColor *
glCompileShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCompileShader* glCompileShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCompileShader *
glCreateBuffers	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCreateBuffers* glCreateBuffers;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateBuffers *
glCreateProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCreateProgram* glCreateProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateProgram *
glCreateShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCreateShader* glCreateShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateShader *
glCreateTextures	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCreateTextures* glCreateTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateTextures *
glCreateVertexArrays	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glCreateVertexArrays* glCreateVertexArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateVertexArrays *
glDebugMessageCallbackARB	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDebugMessageCallbackARB* glDebugMessageCallbackARB;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDebugMessageCallbackARB *
GLDEBUGPROC	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void (GLDEBUGPROC)(GLenum source,$/;"	t	language:C++	typeref:typename:void ()(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,GLchar * msg,const void * userParam)
glDeleteShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDeleteShader* glDeleteShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteShader *
glDeleteTextures	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDeleteTextures* glDeleteTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteTextures *
glDisable	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDisable* glDisable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDisable *
glDrawArrays	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDrawArrays* glDrawArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawArrays *
glDrawElementsInstancedBaseInstance	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glDrawElementsInstancedBaseInstance* glDrawElementsInstancedBaseInstance;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawElementsInstancedBaseInstance *
glEnable	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glEnable* glEnable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnable *
glEnableVertexArrayAttrib	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glEnableVertexArrayAttrib* glEnableVertexArrayAttrib;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnableVertexArrayAttrib *
GLenum	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef s32_t  GLenum;$/;"	t	language:C++	typeref:typename:s32_t
GLfloat	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef f32_t  GLfloat;$/;"	t	language:C++	typeref:typename:f32_t
glGetProgramInfoLog	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glGetProgramInfoLog* glGetProgramInfoLog;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramInfoLog *
glGetProgramiv	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glGetProgramiv* glGetProgramiv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramiv *
glGetUniformLocation	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glGetUniformLocation* glGetUniformLocation;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetUniformLocation *
GLint	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef s32_t  GLint; $/;"	t	language:C++	typeref:typename:s32_t
GLintptr	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef smi_t  GLintptr;$/;"	t	language:C++	typeref:typename:smi_t
glLinkProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glLinkProgram* glLinkProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glLinkProgram *
glNamedBufferStorage	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glNamedBufferStorage* glNamedBufferStorage;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferStorage *
glNamedBufferSubData	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glNamedBufferSubData* glNamedBufferSubData;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferSubData *
glProgramUniform4fv	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glProgramUniform4fv* glProgramUniform4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniform4fv *
glProgramUniformMatrix4fv	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glProgramUniformMatrix4fv* glProgramUniformMatrix4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniformMatrix4fv *
glScissor	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glScissor* glScissor ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glScissor *
glShaderSource	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glShaderSource* glShaderSource;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glShaderSource *
GLsizei	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef s32_t  GLsizei;$/;"	t	language:C++	typeref:typename:s32_t
GLsizeiptr	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef smi_t  GLsizeiptr; $/;"	t	language:C++	typeref:typename:smi_t
glTexParameteri	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glTexParameteri*  glTexParameteri ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTexParameteri *
glTextureStorage2D	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glTextureStorage2D* glTextureStorage2D ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureStorage2D *
glTextureSubImage2D	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glTextureSubImage2D*  glTextureSubImage2D;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureSubImage2D *
glue	D:/work/git/moom/code/momo_types.h	/^#define glue(/;"	d	language:C++
glue_	D:/work/git/moom/code/momo_types.h	/^#define glue_(/;"	d	language:C++
GLuint	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef u32_t  GLuint;$/;"	t	language:C++	typeref:typename:u32_t
glUseProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glUseProgram* glUseProgram;  $/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glUseProgram *
glVertexArrayAttribBinding	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glVertexArrayAttribBinding* glVertexArrayAttribBinding;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribBinding *
glVertexArrayAttribFormat	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glVertexArrayAttribFormat* glVertexArrayAttribFormat;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribFormat *
glVertexArrayBindingDivisor	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glVertexArrayBindingDivisor* glVertexArrayBindingDivisor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayBindingDivisor *
glVertexArrayElementBuffer	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glVertexArrayElementBuffer* glVertexArrayElementBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayElementBuffer *
glVertexArrayVertexBuffer	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glVertexArrayVertexBuffer* glVertexArrayVertexBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayVertexBuffer *
glViewport	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_glViewport* glViewport;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glViewport *
glyf	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
glyphs	D:/work/git/moom/code/moe_assets.h	/^  asset_font_glyph_t* glyphs;$/;"	m	language:C++	struct:asset_font_t	typeref:typename:asset_font_glyph_t *
glyph_count	D:/work/git/moom/code/karu.h	/^  u32_t glyph_count;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:u32_t
glyph_count	D:/work/git/moom/code/moe_assets.h	/^  u32_t glyph_count;$/;"	m	language:C++	struct:asset_font_t	typeref:typename:u32_t
glyph_count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t glyph_count;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
glyph_rects	D:/work/git/moom/code/sui_atlas.h	/^  rp_rect_t* glyph_rects;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:rp_rect_t *
glyph_rect_contexts	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_context_t* glyph_rect_contexts;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:sui_atlas_context_t *
GL_BLEND	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_BLEND /;"	d	language:C++
GL_COLOR_BUFFER_BIT	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_COLOR_BUFFER_BIT /;"	d	language:C++
GL_DEBUG_OUTPUT	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT /;"	d	language:C++
GL_DEBUG_OUTPUT_SYNCHRONOUS	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d	language:C++
GL_DEBUG_SEVERITY_HIGH	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d	language:C++
GL_DEBUG_SEVERITY_LOW	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d	language:C++
GL_DEBUG_SEVERITY_MEDIUM	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d	language:C++
GL_DEBUG_SEVERITY_NOTIFICATION	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d	language:C++
GL_DEBUG_SOURCE_API	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_API /;"	d	language:C++
GL_DEBUG_SOURCE_APPLICATION	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d	language:C++
GL_DEBUG_SOURCE_OTHER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d	language:C++
GL_DEBUG_SOURCE_SHADER_COMPILER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d	language:C++
GL_DEBUG_SOURCE_THIRD_PARTY	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d	language:C++
GL_DEBUG_SOURCE_WINDOW_SYSTEM	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d	language:C++
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_ERROR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d	language:C++
GL_DEBUG_TYPE_MARKER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d	language:C++
GL_DEBUG_TYPE_OTHER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d	language:C++
GL_DEBUG_TYPE_PERFORMANCE	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d	language:C++
GL_DEBUG_TYPE_PORTABILITY	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d	language:C++
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d	language:C++
GL_DEPTH_BUFFER_BIT	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d	language:C++
GL_DEPTH_TEST	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DEPTH_TEST /;"	d	language:C++
GL_DST_ALPHA	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DST_ALPHA /;"	d	language:C++
GL_DST_COLOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DST_COLOR /;"	d	language:C++
GL_DYNAMIC_STORAGE_BIT	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d	language:C++
GL_FALSE	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_FALSE /;"	d	language:C++
GL_FLOAT	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_FLOAT /;"	d	language:C++
GL_FRAGMENT_SHADER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_FRAGMENT_SHADER /;"	d	language:C++
GL_LINEAR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_LINEAR /;"	d	language:C++
GL_LINK_STATUS	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_LINK_STATUS /;"	d	language:C++
GL_NEAREST	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_NEAREST /;"	d	language:C++
GL_ONE	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ONE /;"	d	language:C++
GL_ONE_MINUS_DST_ALPHA	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d	language:C++
GL_ONE_MINUS_DST_COLOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d	language:C++
GL_ONE_MINUS_SRC_ALPHA	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d	language:C++
GL_ONE_MINUS_SRC_COLOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d	language:C++
GL_RGBA	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_RGBA /;"	d	language:C++
GL_RGBA8	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_RGBA8 /;"	d	language:C++
GL_SCISSOR_TEST	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_SCISSOR_TEST /;"	d	language:C++
GL_SRC_ALPHA	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_SRC_ALPHA /;"	d	language:C++
GL_SRC_COLOR	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_SRC_COLOR /;"	d	language:C++
GL_TEXTURE_2D	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_TEXTURE_2D /;"	d	language:C++
GL_TEXTURE_MAG_FILTER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d	language:C++
GL_TEXTURE_MIN_FILTER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d	language:C++
GL_TRIANGLES	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_TRIANGLES /;"	d	language:C++
GL_TRUE	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_TRUE /;"	d	language:C++
GL_UNSIGNED_BYTE	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_UNSIGNED_BYTE /;"	d	language:C++
GL_VERTEX_SHADER	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_VERTEX_SHADER /;"	d	language:C++
GL_ZERO	D:/work/git/moom/code/moe_gfx_opengl.h	/^#define GL_ZERO /;"	d	language:C++
GOLD_32	D:/work/git/moom/code/momo_types.h	/^#define GOLD_32 /;"	d	language:C++
GOLD_64	D:/work/git/moom/code/momo_types.h	/^#define GOLD_64 /;"	d	language:C++
gpos	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
groups	D:/work/git/moom/code/moe_assets.h	/^  asset_group_t groups[ASSET_GROUP_TYPE_COUNT];$/;"	m	language:C++	struct:assets_t	typeref:typename:asset_group_t[]
groups	D:/work/git/moom/code/sui_pack.h	/^  karu_group_t groups[ASSET_GROUP_TYPE_COUNT]; \/\/to be written to file$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:karu_group_t[]
group_count	D:/work/git/moom/code/karu.h	/^  u32_t group_count;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
h	D:/work/git/moom/code/momo_colors.h	/^  f32_t h, s, l;  $/;"	m	language:C++	struct:hsl_t	typeref:typename:f32_t
h	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:rp_rect_t	typeref:typename:u32_t
h	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:_RP_Node	typeref:typename:u32_t
h	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h, d; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0908	typeref:typename:f32_t
h	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0608	typeref:typename:f32_t
h	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t w, h; };$/;"	m	language:C++	struct:v2s_t::__anon7ebf604f0408	typeref:typename:s32_t
h	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t w, h; };$/;"	m	language:C++	struct:v2u_t::__anon7ebf604f0208	typeref:typename:u32_t
h16	build/a.out.js	/^  var h16 = new Int16Array(1);$/;"	v	language:JavaScript
h8	build/a.out.js	/^  var h8 = new Int8Array(h16.buffer);$/;"	v	language:JavaScript
half_angle	D:/work/git/moom/code/scene_lit_world.h	/^  f32_t half_angle;$/;"	m	language:C++	struct:lit_light_t	typeref:typename:f32_t
handle	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint handle;$/;"	m	language:C++	struct:__anon99efc5fb0708	typeref:typename:GLuint
handle	D:/work/git/moom/code/w32_moe.h	/^  HANDLE handle;$/;"	m	language:C++	struct:w32_file_t	typeref:typename:HANDLE
handleException	build/a.out.js	/^  function handleException(e) {$/;"	f	language:JavaScript
head	D:/work/git/moom/code/momo_json.h	/^  struct _json_array_node_t* head;  $/;"	m	language:C++	struct:json_array_t	typeref:struct:_json_array_node_t *
head	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
HEAP	build/a.out.js	/^var HEAP,$/;"	v	language:JavaScript
HEAP16	build/a.out.js	/^  HEAP16,$/;"	v	language:JavaScript
HEAP32	build/a.out.js	/^  HEAP32,$/;"	v	language:JavaScript
HEAP8	build/a.out.js	/^  HEAP8,$/;"	v	language:JavaScript
HEAPF32	build/a.out.js	/^  HEAPF32,$/;"	v	language:JavaScript
HEAPF64	build/a.out.js	/^  HEAPF64;$/;"	v	language:JavaScript
HEAPU16	build/a.out.js	/^  HEAPU16,$/;"	v	language:JavaScript
HEAPU32	build/a.out.js	/^  HEAPU32,$/;"	v	language:JavaScript
HEAPU8	build/a.out.js	/^  HEAPU8,$/;"	v	language:JavaScript
height	D:/work/git/moom/code/karu.h	/^  u32_t height;$/;"	m	language:C++	struct:karu_bitmap_t	typeref:typename:u32_t
height	D:/work/git/moom/code/moe_assets.h	/^  u32_t height;$/;"	m	language:C++	struct:asset_bitmap_t	typeref:typename:u32_t
height	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t height;$/;"	m	language:C++	struct:__anon99efc5fb0708	typeref:typename:u32_t
height	D:/work/git/moom/code/momo_png.h	/^  u32_t height;$/;"	m	language:C++	struct:png_t	typeref:typename:u32_t
height	D:/work/git/moom/code/momo_png.h	/^  u32_t height;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u32_t
height	D:/work/git/moom/code/sui_atlas.h	/^  u32_t width, height;$/;"	m	language:C++	struct:sui_atlas_bitmap_t	typeref:typename:u32_t
height	D:/work/git/moom/code/sui_pack.h	/^  u32_t height;$/;"	m	language:C++	struct:sui_packer_source_bitmap_t	typeref:typename:u32_t
held_light	D:/work/git/moom/code/scene_lit_entity.h	/^  lit_light_t* held_light;$/;"	m	language:C++	struct:lit_player_t	typeref:typename:lit_light_t *
hhea	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
highest_codepoint	D:/work/git/moom/code/karu.h	/^  u32_t highest_codepoint;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:u32_t
highest_codepoint	D:/work/git/moom/code/moe_assets.h	/^  u32_t highest_codepoint;$/;"	m	language:C++	struct:asset_font_t	typeref:typename:u32_t
hits	D:/work/git/moom/code/moe_profiler.h	/^  u32_t hits;$/;"	m	language:C++	struct:profiler_snapshot_t	typeref:typename:u32_t
hits_and_cycles	D:/work/git/moom/code/moe_profiler.h	/^  u64_t hits_and_cycles;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:u64_t
hmtx	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
horizontal_advance	D:/work/git/moom/code/karu.h	/^  f32_t horizontal_advance;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:f32_t
horizontal_advance	D:/work/git/moom/code/moe_assets.h	/^  f32_t horizontal_advance;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:f32_t
hsl_set	D:/work/git/moom/code/momo_colors.h	/^hsl_set(f32_t h, f32_t s, f32_t l) {$/;"	f	language:C++	typeref:typename:hsl_t
hsl_set	D:/work/git/moom/code/momo_colors.h	/^static hsl_t  hsl_set(f32_t h, f32_t s, f32_t l);$/;"	p	language:C++	typeref:typename:hsl_t
hsl_t	D:/work/git/moom/code/momo_colors.h	/^typedef struct hsl_t {$/;"	s	language:C++
hsl_t	D:/work/git/moom/code/momo_colors.h	/^} hsl_t;$/;"	t	language:C++	typeref:struct:hsl_t
hsl_to_rgb	D:/work/git/moom/code/momo_colors.h	/^hsl_to_rgb(hsl_t c) {$/;"	f	language:C++	typeref:typename:rgb_t
hsl_to_rgb	D:/work/git/moom/code/momo_colors.h	/^static rgb_t  hsl_to_rgb(hsl_t c);$/;"	p	language:C++	typeref:typename:rgb_t
hundreds	D:/work/git/moom/code/momo_types.h	/^#define hundreds(/;"	d	language:C++
id	D:/work/git/moom/code/moe_gfx.h	/^  u32_t id; \/\/ type id from user$/;"	m	language:C++	struct:gfx_command_t	typeref:typename:u32_t
id	D:/work/git/moom/code/momo_wav.h	/^  u32_t id; \/\/ big endian$/;"	m	language:C++	struct:wav_riff_chunk_t	typeref:typename:u32_t
id	D:/work/git/moom/code/momo_wav.h	/^  u32_t id;$/;"	m	language:C++	struct:wav_data_chunk_t	typeref:typename:u32_t
id	D:/work/git/moom/code/momo_wav.h	/^  u32_t id;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u32_t
IDBFS	build/a.out.js	/^var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';$/;"	v	language:JavaScript
ignoredModuleProp	build/a.out.js	/^function ignoredModuleProp(prop) {$/;"	f	language:JavaScript
image125	build/web.html	/^   id="image125"><\/image><g$/;"	I	language:HTML
image140	build/web.html	/^   id="image140"><\/image><g$/;"	I	language:HTML
image155	build/web.html	/^   id="image155"><\/image><g$/;"	I	language:HTML
image170	build/web.html	/^   id="image170"><\/image><g$/;"	I	language:HTML
image185	build/web.html	/^   id="image185"><\/image><g$/;"	I	language:HTML
image200	build/web.html	/^   id="image200"><\/image><g$/;"	I	language:HTML
image215	build/web.html	/^   id="image215"><\/image><g$/;"	I	language:HTML
image230	build/web.html	/^   id="image230"><\/image><g$/;"	I	language:HTML
image25	build/web.html	/^   id="image25"><\/image><\/g><\/mask><g$/;"	I	language:HTML
image56	build/web.html	/^   id="image56"><\/image><\/g><\/mask><g$/;"	I	language:HTML
image77	build/web.html	/^   id="image77"><\/image><g$/;"	I	language:HTML
image_height	D:/work/git/moom/code/momo_png.h	/^  u32_t image_height;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:u32_t
image_stream	D:/work/git/moom/code/momo_png.h	/^  stream_t image_stream;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:stream_t
image_width	D:/work/git/moom/code/momo_png.h	/^  u32_t image_width;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:u32_t
imm_notifs	D:/work/git/moom/code/w32_audio_wasapi.h	/^  IMMNotificationClient imm_notifs;$/;"	m	language:C++	struct:w32_wasapi_notif_client_t	typeref:typename:IMMNotificationClient
in	D:/work/git/moom/code/test_png.h	/^    const char* in;$/;"	m	language:C++	struct:test_png::__anon599362d60108	typeref:typename:const char *
index	D:/work/git/moom/code/momo_sort.h	/^  u32_t index;$/;"	m	language:C++	struct:sort_entry_t	typeref:typename:u32_t
info	build/a.out.js	/^  var info = {$/;"	c	language:JavaScript	class:createWasm
info_lines	D:/work/git/moom/code/moe_console.h	/^  sb8_t info_lines[9];$/;"	m	language:C++	struct:console_t	typeref:typename:sb8_t[9]
init	build/a.out.js	/^  init: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
INITGUID	D:/work/git/moom/code/w32_moe.h	/^#define INITGUID$/;"	d	language:C++
initRuntime	build/a.out.js	/^function initRuntime() {$/;"	f	language:JavaScript
input_line	D:/work/git/moom/code/moe_console.h	/^  sb8_t input_line;$/;"	m	language:C++	struct:console_t	typeref:typename:sb8_t
inspector	D:/work/git/moom/code/moe.h	/^  inspector_t inspector;$/;"	m	language:C++	struct:moe_t	typeref:typename:inspector_t
inspector_add_f32	D:/work/git/moom/code/moe_inspector.h	/^inspector_add_f32(inspector_t* in, str8_t name, f32_t* item) {$/;"	f	language:C++	typeref:typename:void
inspector_add_u32	D:/work/git/moom/code/moe_inspector.h	/^inspector_add_u32(inspector_t* in, str8_t name, u32_t* item) {$/;"	f	language:C++	typeref:typename:void
inspector_clear	D:/work/git/moom/code/moe_inspector.h	/^inspector_clear(inspector_t* in) {$/;"	f	language:C++	typeref:typename:void
inspector_entry_t	D:/work/git/moom/code/moe_inspector.h	/^} inspector_entry_t;$/;"	t	language:C++	typeref:struct:__anona16973e90208
INSPECTOR_ENTRY_TYPE_F32	D:/work/git/moom/code/moe_inspector.h	/^  INSPECTOR_ENTRY_TYPE_F32,$/;"	e	language:C++	enum:__anona16973e90103
inspector_entry_type_t	D:/work/git/moom/code/moe_inspector.h	/^} inspector_entry_type_t;$/;"	t	language:C++	typeref:enum:__anona16973e90103
INSPECTOR_ENTRY_TYPE_U32	D:/work/git/moom/code/moe_inspector.h	/^  INSPECTOR_ENTRY_TYPE_U32,$/;"	e	language:C++	enum:__anona16973e90103
inspector_t	D:/work/git/moom/code/moe_inspector.h	/^} inspector_t;$/;"	t	language:C++	typeref:struct:__anona16973e90308
inspector_update_and_render	D:/work/git/moom/code/moe_inspector_rendering.h	/^inspector_update_and_render(moe_t* moe) $/;"	f	language:C++	typeref:typename:void
instances_to_draw	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLsizei
instances_to_draw	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLsizei
instantiateArrayBuffer	build/a.out.js	/^  function instantiateArrayBuffer(receiver) {$/;"	f	language:JavaScript	function:createWasm
instantiateAsync	build/a.out.js	/^  function instantiateAsync() {$/;"	f	language:JavaScript	function:createWasm
interlace_method	D:/work/git/moom/code/momo_png.h	/^  u8_t interlace_method;$/;"	m	language:C++	struct:png_t	typeref:typename:u8_t
interlace_method	D:/work/git/moom/code/momo_png.h	/^  u8_t interlace_method;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u8_t
INTERNAL	D:/work/git/moom/code/momo_types.h	/^# define INTERNAL /;"	d	language:C++
intersections	D:/work/git/moom/code/scene_lit_world.h	/^  lit_light_intersection_t intersections[256];$/;"	m	language:C++	struct:lit_light_t	typeref:typename:lit_light_intersection_t[256]
intersection_count	D:/work/git/moom/code/scene_lit_world.h	/^  u32_t intersection_count;$/;"	m	language:C++	struct:lit_light_t	typeref:typename:u32_t
int_to_ptr	D:/work/git/moom/code/momo_types.h	/^int_to_ptr(umi_t u) { $/;"	f	language:C++	typeref:typename:u8_t *
isDataURI	build/a.out.js	/^function isDataURI(filename) {$/;"	f	language:JavaScript
isExportedByForceFilesystem	build/a.out.js	/^function isExportedByForceFilesystem(name) {$/;"	f	language:JavaScript
isFileURI	build/a.out.js	/^function isFileURI(filename) {$/;"	f	language:JavaScript
is_alpha	D:/work/git/moom/code/momo_types.h	/^is_alpha(c8_t c) {$/;"	f	language:C++	typeref:typename:b32_t
is_close_f32	D:/work/git/moom/code/momo_types.h	/^is_close_f32(f32_t lhs, f32_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
is_close_f64	D:/work/git/moom/code/momo_types.h	/^is_close_f64(f64_t lhs, f64_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
is_device_changed	D:/work/git/moom/code/w32_audio_wasapi.h	/^	b32_t is_device_changed;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:b32_t
is_device_ready	D:/work/git/moom/code/w32_audio_wasapi.h	/^	b32_t is_device_ready;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:b32_t
is_digit	D:/work/git/moom/code/momo_types.h	/^is_digit(c8_t c) {$/;"	f	language:C++	typeref:typename:b32_t
is_disabled	D:/work/git/moom/code/scene_lit_world.h	/^  b32_t is_disabled;$/;"	m	language:C++	struct:lit_edge_t	typeref:typename:b32_t
is_done	D:/work/git/moom/code/moe.h	/^  b32_t is_done;$/;"	m	language:C++	struct:moe_t	typeref:typename:b32_t
is_holding_light	D:/work/git/moom/code/scene_lit_entity.h	/^  b32_t is_holding_light;$/;"	m	language:C++	struct:lit_player_t	typeref:typename:b32_t
is_inverted	D:/work/git/moom/code/momo_ttf.h	/^  b32_t is_inverted;$/;"	m	language:C++	struct:_ttf_edge_t	typeref:typename:b32_t
is_memory_same	D:/work/git/moom/code/momo_types.h	/^is_memory_same(const void* lhs, const void* rhs, umi_t size) {$/;"	f	language:C++	typeref:typename:b32_t
is_memory_same	D:/work/git/moom/code/momo_types.h	/^is_memory_same(const void* lhs, const void* rhs, umi_t size) {$/;"	f	language:C++	typeref:typename:b32_t
is_nan_f32	D:/work/git/moom/code/momo_types.h	/^is_nan_f32(f32_t f) {$/;"	f	language:C++	typeref:typename:b32_t
is_nan_f64	D:/work/git/moom/code/momo_types.h	/^is_nan_f64(f64_t f) {$/;"	f	language:C++	typeref:typename:b32_t
is_pow2	D:/work/git/moom/code/momo_types.h	/^#define is_pow2(/;"	d	language:C++
is_running	D:/work/git/moom/code/w32_moe.h	/^  b32_t is_running;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:b32_t
is_shell	D:/work/git/moom/code/scene_lit_world.h	/^  b32_t is_shell;$/;"	m	language:C++	struct:lit_light_intersection_t	typeref:typename:b32_t
is_valid	D:/work/git/moom/code/w32_moe.h	/^  b32_t is_valid;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:b32_t
is_whitespace	D:/work/git/moom/code/momo_types.h	/^is_whitespace(c8_t c) {$/;"	f	language:C++	typeref:typename:b32_t
is_win_reached	D:/work/git/moom/code/scene_lit.h	/^  b32_t is_win_reached;$/;"	m	language:C++	struct:lit_t	typeref:typename:b32_t
item	D:/work/git/moom/code/moe_inspector.h	/^  void* item;$/;"	m	language:C++	struct:__anona16973e90208	typeref:typename:void *
item1	build/test_json.json	/^      "item1":null,$/;"	z	language:JSON	object:obj.more_obj
item1	build/test_json.json	/^    "item1":null,$/;"	z	language:JSON	object:next_obj
item1	build/test_json.json	/^    "item1":null,$/;"	z	language:JSON	object:obj
item2	build/test_json.json	/^      "item2":"hello",$/;"	s	language:JSON	object:obj.more_obj
item2	build/test_json.json	/^    "item2":"hello",$/;"	s	language:JSON	object:next_obj
item2	build/test_json.json	/^    "item2":"hello",$/;"	s	language:JSON	object:obj
item3	build/test_json.json	/^      "item3":123$/;"	n	language:JSON	object:obj.more_obj
item3	build/test_json.json	/^    "item3":123,$/;"	n	language:JSON	object:obj
Journal	journal.md	/^# Journal$/;"	c	language:Markdown
json_array_t	D:/work/git/moom/code/momo_json.h	/^struct json_array_t{$/;"	s	language:C++
JSON_DEBUG	D:/work/git/moom/code/json_test.cpp	/^#define JSON_DEBUG /;"	d	language:C++	file:
json_get_array	D:/work/git/moom/code/momo_json.h	/^json_get_array(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:json_array_t *
json_get_array	D:/work/git/moom/code/momo_json.h	/^static json_array_t* json_get_array(json_object_t* j, str8_t key);$/;"	p	language:C++	typeref:typename:json_array_t *
json_get_b32	D:/work/git/moom/code/momo_json.h	/^json_get_b32(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:b32_t *
json_get_b32	D:/work/git/moom/code/momo_json.h	/^static b32_t* json_get_b32(json_object_t* j, str8_t key);$/;"	p	language:C++	typeref:typename:b32_t *
json_get_f32	D:/work/git/moom/code/momo_json.h	/^json_get_f32(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:f32_t *
json_get_f32	D:/work/git/moom/code/momo_json.h	/^static f32_t* json_get_f32(json_object_t* j, str8_t key);$/;"	p	language:C++	typeref:typename:f32_t *
json_get_object	D:/work/git/moom/code/momo_json.h	/^json_get_object(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:json_object_t *
json_get_object	D:/work/git/moom/code/momo_json.h	/^static json_object_t* json_get_object(json_object_t* j, str8_t key);$/;"	p	language:C++	typeref:typename:json_object_t *
json_get_s32	D:/work/git/moom/code/momo_json.h	/^json_get_s32(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:s32_t *
json_get_s32	D:/work/git/moom/code/momo_json.h	/^static s32_t* json_get_s32(json_object_t* j, str8_t key); $/;"	p	language:C++	typeref:typename:s32_t *
json_get_str8	D:/work/git/moom/code/momo_json.h	/^json_get_str8(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:str8_t *
json_get_str8	D:/work/git/moom/code/momo_json.h	/^static str8_t* json_get_str8(json_object_t* j, str8_t key);$/;"	p	language:C++	typeref:typename:str8_t *
json_get_u32	D:/work/git/moom/code/momo_json.h	/^json_get_u32(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:u32_t *
json_get_u32	D:/work/git/moom/code/momo_json.h	/^static u32_t* json_get_u32(json_object_t* j, str8_t key); $/;"	p	language:C++	typeref:typename:u32_t *
json_object_t	D:/work/git/moom/code/momo_json.h	/^struct json_object_t{$/;"	s	language:C++
json_read	D:/work/git/moom/code/momo_json.h	/^json_read(json_object_t* j, void* memory, umi_t size, arena_t* ba) $/;"	f	language:C++	typeref:typename:b32_t
json_read	D:/work/git/moom/code/momo_json.h	/^static b32_t json_read(json_object_t* j, void* memory, umi_t size) ;$/;"	p	language:C++	typeref:typename:b32_t
karu_asset_t	D:/work/git/moom/code/karu.h	/^struct karu_asset_t {$/;"	s	language:C++
karu_bitmap_t	D:/work/git/moom/code/karu.h	/^struct karu_bitmap_t {$/;"	s	language:C++
KARU_CODE	D:/work/git/moom/code/karu.h	/^#define KARU_CODE(/;"	d	language:C++
Karu_Font	D:/work/git/moom/code/karu.h	/^struct Karu_Font {$/;"	s	language:C++
karu_font_glyph_t	D:/work/git/moom/code/karu.h	/^struct karu_font_glyph_t {$/;"	s	language:C++
karu_group_t	D:/work/git/moom/code/karu.h	/^struct karu_group_t {$/;"	s	language:C++
KARU_H	D:/work/git/moom/code/karu.h	/^#define KARU_H$/;"	d	language:C++
karu_header_t	D:/work/git/moom/code/karu.h	/^struct karu_header_t {$/;"	s	language:C++
KARU_SIGNATURE	D:/work/git/moom/code/karu.h	/^#define KARU_SIGNATURE /;"	d	language:C++
karu_sprite_t	D:/work/git/moom/code/karu.h	/^struct karu_sprite_t {$/;"	s	language:C++
karu_tag_t	D:/work/git/moom/code/karu.h	/^struct karu_tag_t {$/;"	s	language:C++
keepRuntimeAlive	build/a.out.js	/^function keepRuntimeAlive() {$/;"	f	language:JavaScript
kern	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
kernings	D:/work/git/moom/code/moe_assets.h	/^  f32_t* kernings;$/;"	m	language:C++	struct:asset_font_t	typeref:typename:f32_t *
key	D:/work/git/moom/code/moe_console.h	/^  str8_t key;$/;"	m	language:C++	struct:console_command_t	typeref:typename:str8_t
key	D:/work/git/moom/code/momo_json.h	/^  str8_t key;$/;"	m	language:C++	struct:_json_object_node_t	typeref:typename:str8_t
key	D:/work/git/moom/code/momo_sort.h	/^  f32_t key;$/;"	m	language:C++	struct:sort_entry_t	typeref:typename:f32_t
kilobytes	D:/work/git/moom/code/momo_types.h	/^#define kilobytes(/;"	d	language:C++
l	D:/work/git/moom/code/momo_colors.h	/^  f32_t h, s, l;  $/;"	m	language:C++	struct:hsl_t	typeref:typename:f32_t
last_drawn_instance_index	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLsizei
last_drawn_instance_index	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLsizei
latency_sample_count	D:/work/git/moom/code/w32_audio_wasapi.h	/^  u32_t latency_sample_count;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:u32_t
Layer_1	build/web.html	/^   id="Layer_1"$/;"	I	language:HTML
left	D:/work/git/moom/code/momo_json.h	/^  struct _json_object_node_t* left;$/;"	m	language:C++	struct:_json_object_node_t	typeref:struct:_json_object_node_t *
legacyModuleProp	build/a.out.js	/^function legacyModuleProp(prop, newName) {$/;"	f	language:JavaScript
length	D:/work/git/moom/code/momo_png.h	/^  u32_t length;$/;"	m	language:C++	struct:_png_chunk_header_t	typeref:typename:u32_t
lengthBytesUTF8	build/a.out.js	/^function lengthBytesUTF8(str) {$/;"	f	language:JavaScript
lengths	D:/work/git/moom/code/momo_png.h	/^  u16_t* lengths;$/;"	m	language:C++	struct:_png_huffman_t	typeref:typename:u16_t *
length_count	D:/work/git/moom/code/momo_png.h	/^  u32_t length_count;$/;"	m	language:C++	struct:_png_huffman_t	typeref:typename:u32_t
lerp_f32	D:/work/git/moom/code/momo_types.h	/^lerp_f32(f32_t s, f32_t e, f32_t f) { $/;"	f	language:C++	typeref:typename:f32_t
lerp_f64	D:/work/git/moom/code/momo_types.h	/^lerp_f64(f64_t s, f64_t e, f64_t f) { $/;"	f	language:C++	typeref:typename:f64_t
lifespan	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t lifespan;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:f32_t
lifespan_now	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t lifespan_now;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:f32_t
lights	D:/work/git/moom/code/scene_lit.h	/^  lit_light_t lights[32];$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_light_t[32]
light_count	D:/work/git/moom/code/scene_lit.h	/^  u32_t light_count;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
light_retrival_time	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t light_retrival_time;$/;"	m	language:C++	struct:lit_player_t	typeref:typename:f32_t
line	D:/work/git/moom/code/moe_profiler.h	/^  u32_t line;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:u32_t
linearGradient4167	build/web.html	/^   id="linearGradient4167"><stop$/;"	I	language:HTML
linearGradient4175	build/web.html	/^   id="linearGradient4175"><stop$/;"	I	language:HTML
linearGradient4183	build/web.html	/^   id="linearGradient4183"><stop$/;"	I	language:HTML
linearGradient4191	build/web.html	/^   id="linearGradient4191"><stop$/;"	I	language:HTML
linearGradient4199	build/web.html	/^   id="linearGradient4199"><stop$/;"	I	language:HTML
linearGradient4207	build/web.html	/^   id="linearGradient4207"><stop$/;"	I	language:HTML
linearGradient4215	build/web.html	/^   id="linearGradient4215"><stop$/;"	I	language:HTML
linearGradient4223	build/web.html	/^   id="linearGradient4223"><stop$/;"	I	language:HTML
linearGradient4231	build/web.html	/^   id="linearGradient4231"><stop$/;"	I	language:HTML
linearGradient4239	build/web.html	/^   id="linearGradient4239"><stop$/;"	I	language:HTML
linearGradient5104	build/web.html	/^     id="linearGradient5104"><stop$/;"	I	language:HTML
linearGradient5120	build/web.html	/^     id="linearGradient5120"$/;"	I	language:HTML
linearGradient5134	build/web.html	/^     id="linearGradient5134"$/;"	I	language:HTML
lit_are_all_sensors_activated	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_are_all_sensors_activated(lit_t* lit) {$/;"	f	language:C++	typeref:typename:b32_t	file:
lit_calc_ghost_edge_line	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_calc_ghost_edge_line(lit_edge_t* e, v2f_t* min, v2f_t* max) {$/;"	f	language:C++	typeref:typename:void	file:
LIT_DEBUG_COORDINATES	D:/work/git/moom/code/scene_lit.h	/^#define LIT_DEBUG_COORDINATES /;"	d	language:C++
LIT_DEBUG_LIGHT	D:/work/git/moom/code/scene_lit.h	/^#define LIT_DEBUG_LIGHT /;"	d	language:C++
lit_draw_edges	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_draw_edges(moe_t* moe, lit_t* lit) {$/;"	f	language:C++	typeref:typename:void	file:
lit_draw_lights	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_draw_lights(moe_t* moe, lit_t* lit) {$/;"	f	language:C++	typeref:typename:void	file:
lit_draw_player	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_draw_player(moe_t* moe, lit_t* lit)$/;"	f	language:C++	typeref:typename:void	file:
lit_edge_t	D:/work/git/moom/code/scene_lit_world.h	/^struct lit_edge_t {$/;"	s	language:C++
LIT_ENTER_DURATION	D:/work/git/moom/code/scene_lit.h	/^#define LIT_ENTER_DURATION /;"	d	language:C++
lit_exit	D:/work/git/moom/code/scene_lit.h	/^lit_exit(moe_t* moe) {$/;"	f	language:C++	typeref:typename:void
LIT_EXIT_FLASH_BRIGHTNESS	D:/work/git/moom/code/scene_lit.h	/^#define LIT_EXIT_FLASH_BRIGHTNESS /;"	d	language:C++
LIT_EXIT_FLASH_DURATION	D:/work/git/moom/code/scene_lit.h	/^#define LIT_EXIT_FLASH_DURATION /;"	d	language:C++
lit_gen_lights	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_gen_lights(lit_light_t* lights, $/;"	f	language:C++	typeref:typename:void	file:
lit_gen_light_intersections	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_gen_light_intersections(lit_light_t* l,$/;"	f	language:C++	typeref:typename:void	file:
lit_get_ray_intersection_time_wrt_edges	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_get_ray_intersection_time_wrt_edges(v2f_t ray_origin, $/;"	f	language:C++	typeref:typename:f32_t	file:
LIT_HEIGHT	D:/work/git/moom/code/scene_lit.h	/^#define LIT_HEIGHT /;"	d	language:C++
lit_init	D:/work/git/moom/code/scene_lit.h	/^lit_init(moe_t* moe) {$/;"	f	language:C++	typeref:typename:void
lit_init_player	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_init_player(lit_t* lit, f32_t x, f32_t y) {$/;"	f	language:C++	typeref:typename:void	file:
lit_is_state_exiting	D:/work/git/moom/code/scene_lit.h	/^lit_is_state_exiting(lit_t* lit) {$/;"	f	language:C++	typeref:typename:b32_t
Lit_Level	D:/work/git/moom/code/scene_lit_levels.h	/^typedef void (*Lit_Level)(lit_t* mode); $/;"	t	language:C++	typeref:typename:void (*)(lit_t * mode)
lit_levels	D:/work/git/moom/code/scene_lit_levels.h	/^static Lit_Level lit_levels[] = {$/;"	v	language:C++	typeref:typename:Lit_Level[]
lit_level_0_0	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_0(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_1	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_1(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_2	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_2(lit_t* m) { $/;"	f	language:C++	typeref:typename:void
lit_level_0_3	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_3(lit_t* m) { $/;"	f	language:C++	typeref:typename:void
lit_level_0_4	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_4(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_5	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_5(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_6	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_6(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_7	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_7(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0_8	D:/work/git/moom/code/scene_lit_levels.h	/^lit_level_0_8(lit_t* m) {$/;"	f	language:C++	typeref:typename:void
lit_light_intersection_t	D:/work/git/moom/code/scene_lit_world.h	/^struct lit_light_intersection_t {$/;"	s	language:C++
lit_light_t	D:/work/git/moom/code/scene_lit_world.h	/^struct lit_light_t {$/;"	s	language:C++
lit_light_triangle_t	D:/work/git/moom/code/scene_lit_world.h	/^struct lit_light_triangle_t {$/;"	s	language:C++
Lit_LIGHT_TYPE_DIRECTIONAL	D:/work/git/moom/code/scene_lit_world.h	/^  Lit_LIGHT_TYPE_DIRECTIONAL,$/;"	e	language:C++	enum:lit_light_type_t
Lit_LIGHT_TYPE_POINT	D:/work/git/moom/code/scene_lit_world.h	/^  Lit_LIGHT_TYPE_POINT,$/;"	e	language:C++	enum:lit_light_type_t
lit_light_type_t	D:/work/git/moom/code/scene_lit_world.h	/^enum lit_light_type_t {$/;"	g	language:C++
Lit_LIGHT_TYPE_WEIRD	D:/work/git/moom/code/scene_lit_world.h	/^  Lit_LIGHT_TYPE_WEIRD$/;"	e	language:C++	enum:lit_light_type_t
lit_load_level	D:/work/git/moom/code/scene_lit_levels.h	/^lit_load_level(lit_t* m, u32_t level_id) {$/;"	f	language:C++	typeref:typename:void
lit_load_next_level	D:/work/git/moom/code/scene_lit_levels.h	/^lit_load_next_level(lit_t* m){$/;"	f	language:C++	typeref:typename:void
lit_particle_pool_t	D:/work/git/moom/code/scene_lit_entity.h	/^struct lit_particle_pool_t {$/;"	s	language:C++
lit_particle_t	D:/work/git/moom/code/scene_lit_entity.h	/^struct lit_particle_t {$/;"	s	language:C++
LIT_PLAYER_BREATH_DURATION	D:/work/git/moom/code/scene_lit.h	/^#define LIT_PLAYER_BREATH_DURATION /;"	d	language:C++
LIT_PLAYER_LIGHT_RETRIEVE_DURATION	D:/work/git/moom/code/scene_lit.h	/^#define LIT_PLAYER_LIGHT_RETRIEVE_DURATION /;"	d	language:C++
LIT_PLAYER_PICKUP_DIST	D:/work/git/moom/code/scene_lit.h	/^#define LIT_PLAYER_PICKUP_DIST /;"	d	language:C++
LIT_PLAYER_RADIUS	D:/work/git/moom/code/scene_lit.h	/^#define LIT_PLAYER_RADIUS /;"	d	language:C++
LIT_PLAYER_ROTATE_SPEED	D:/work/git/moom/code/scene_lit.h	/^#define LIT_PLAYER_ROTATE_SPEED /;"	d	language:C++
lit_player_t	D:/work/git/moom/code/scene_lit_entity.h	/^struct lit_player_t {$/;"	s	language:C++
lit_push_double_edge	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_push_double_edge(lit_t* m, f32_t min_x, f32_t min_y, f32_t max_x, f32_t max_y) {$/;"	f	language:C++	typeref:typename:void	file:
lit_push_edge	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_push_edge(lit_t* m, f32_t min_x, f32_t min_y, f32_t max_x, f32_t max_y) {$/;"	f	language:C++	typeref:typename:lit_edge_t *	file:
lit_push_light	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_push_light(lit_t* m, f32_t pos_x, f32_t pos_y, u32_t color, f32_t angle, f32_t turn) {$/;"	f	language:C++	typeref:typename:lit_light_t *	file:
lit_push_sensor	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_push_sensor(lit_t* lit, f32_t pos_x, f32_t pos_y, u32_t target_color) $/;"	f	language:C++	typeref:typename:void	file:
lit_push_triangle	D:/work/git/moom/code/scene_lit_world.cpp	/^lit_push_triangle(lit_light_t* l, v2f_t p0, v2f_t p1, v2f_t p2, u32_t color) {$/;"	f	language:C++	typeref:typename:void	file:
lit_render_game	D:/work/git/moom/code/scene_lit.h	/^lit_render_game(moe_t* moe, lit_t* lit, platform_t* platform) {$/;"	f	language:C++	typeref:typename:void
lit_render_particles	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_render_particles(moe_t* moe, lit_t* lit) {$/;"	f	language:C++	typeref:typename:void	file:
lit_render_sensors	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_render_sensors(moe_t* moe, lit_t* lit) {$/;"	f	language:C++	typeref:typename:void	file:
LIT_SENSOR_COLOR_MASK	D:/work/git/moom/code/scene_lit.h	/^#define LIT_SENSOR_COLOR_MASK /;"	d	language:C++
LIT_SENSOR_PARTICLE_CD	D:/work/git/moom/code/scene_lit.h	/^#define LIT_SENSOR_PARTICLE_CD /;"	d	language:C++
LIT_SENSOR_PARTICLE_SIZE	D:/work/git/moom/code/scene_lit.h	/^#define LIT_SENSOR_PARTICLE_SIZE /;"	d	language:C++
LIT_SENSOR_PARTICLE_SPEED	D:/work/git/moom/code/scene_lit.h	/^#define LIT_SENSOR_PARTICLE_SPEED /;"	d	language:C++
LIT_SENSOR_RADIUS	D:/work/git/moom/code/scene_lit.h	/^#define LIT_SENSOR_RADIUS /;"	d	language:C++
lit_sensor_t	D:/work/git/moom/code/scene_lit_entity.h	/^struct lit_sensor_t {$/;"	s	language:C++
lit_set_title	D:/work/git/moom/code/scene_lit.h	/^lit_set_title(lit_t* lit, str8_t str) {$/;"	f	language:C++	typeref:typename:void
lit_spawn_particle	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_spawn_particle(lit_t* lit,$/;"	f	language:C++	typeref:typename:void	file:
LIT_STATE_TYPE_NORMAL	D:/work/git/moom/code/scene_lit.h	/^  LIT_STATE_TYPE_NORMAL,$/;"	e	language:C++	enum:lit_state_type_t
LIT_STATE_TYPE_SOLVED_IN	D:/work/git/moom/code/scene_lit.h	/^  LIT_STATE_TYPE_SOLVED_IN,$/;"	e	language:C++	enum:lit_state_type_t
LIT_STATE_TYPE_SOLVED_OUT	D:/work/git/moom/code/scene_lit.h	/^  LIT_STATE_TYPE_SOLVED_OUT,$/;"	e	language:C++	enum:lit_state_type_t
lit_state_type_t	D:/work/git/moom/code/scene_lit.h	/^enum lit_state_type_t {$/;"	g	language:C++
LIT_STATE_TYPE_TRANSITION_IN	D:/work/git/moom/code/scene_lit.h	/^  LIT_STATE_TYPE_TRANSITION_IN,$/;"	e	language:C++	enum:lit_state_type_t
LIT_STATE_TYPE_TRANSITION_OUT	D:/work/git/moom/code/scene_lit.h	/^  LIT_STATE_TYPE_TRANSITION_OUT,$/;"	e	language:C++	enum:lit_state_type_t
lit_t	D:/work/git/moom/code/scene_lit.h	/^struct lit_t {$/;"	s	language:C++
lit_tick	D:/work/git/moom/code/scene_lit.h	/^lit_tick(moe_t* moe) $/;"	f	language:C++	typeref:typename:void
lit_title_waypoint_t	D:/work/git/moom/code/scene_lit.h	/^struct lit_title_waypoint_t {$/;"	s	language:C++
lit_title_wps	D:/work/git/moom/code/scene_lit.h	/^static lit_title_waypoint_t lit_title_wps[] = {$/;"	v	language:C++	typeref:typename:lit_title_waypoint_t[]
lit_update_game	D:/work/git/moom/code/scene_lit.h	/^lit_update_game(moe_t* moe, lit_t* lit, platform_t* platform) $/;"	f	language:C++	typeref:typename:void
lit_update_particles	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_update_particles(lit_t* lit, f32_t dt) {$/;"	f	language:C++	typeref:typename:void	file:
lit_update_player	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_update_player(moe_t* moe, lit_t* lit, f32_t dt) $/;"	f	language:C++	typeref:typename:void	file:
lit_update_sensors	D:/work/git/moom/code/scene_lit_entity.cpp	/^lit_update_sensors(lit_t* lit,$/;"	f	language:C++	typeref:typename:void	file:
LIT_WIDTH	D:/work/git/moom/code/scene_lit.h	/^#define LIT_WIDTH /;"	d	language:C++
loadFilesFromDB	build/a.out.js	/^  loadFilesFromDB: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
loca	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
locateFile	build/a.out.js	/^function locateFile(path) {$/;"	f	language:JavaScript
loca_format	D:/work/git/moom/code/momo_ttf.h	/^  u16_t loca_format;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u16_t
logExceptionOnExit	build/a.out.js	/^function logExceptionOnExit(e) {$/;"	f	language:JavaScript
m44f_concat	D:/work/git/moom/code/momo_matrix.h	/^m44f_concat(m44f_t lhs, m44f_t rhs) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_concat	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_concat(m44f_t lhs, m44f_t rhs);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_frustum	D:/work/git/moom/code/momo_matrix.h	/^m44f_frustum(f32_t left, f32_t right, f32_t bottom, f32_t top, f32_t near, f32_t far) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_frustum	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_frustum(f32_t left, f32_t right, f32_t bottom, f32_t top, f32_t near, f32_t f/;"	p	language:C++	typeref:typename:m44f_t
m44f_identity	D:/work/git/moom/code/momo_matrix.h	/^m44f_identity() {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_identity	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_identity();$/;"	p	language:C++	typeref:typename:m44f_t
m44f_orthographic	D:/work/git/moom/code/momo_matrix.h	/^m44f_orthographic(f32_t left, f32_t right, f32_t bottom, f32_t top, f32_t near, f32_t far) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_orthographic	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_orthographic(f32_t left, f32_t right, f32_t bottom, f32_t top, f32_t near, f3/;"	p	language:C++	typeref:typename:m44f_t
m44f_perspective	D:/work/git/moom/code/momo_matrix.h	/^m44f_perspective(f32_t fov, f32_t aspect, f32_t near, f32_t far){$/;"	f	language:C++	typeref:typename:m44f_t
m44f_perspective	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_perspective(f32_t fov, f32_t aspect, f32_t near, f32_t far);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_rotation_x	D:/work/git/moom/code/momo_matrix.h	/^m44f_rotation_x(f32_t rad) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_rotation_x	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_rotation_x(f32_t radians);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_rotation_y	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_rotation_y(f32_t rad) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_rotation_y	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_rotation_y(f32_t radians);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_rotation_z	D:/work/git/moom/code/momo_matrix.h	/^m44f_rotation_z(f32_t rad) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_rotation_z	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_rotation_z(f32_t radians);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_scale	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_scale(f32_t x, f32_t y, f32_t z) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_scale	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_scale(f32_t x, f32_t y, f32_t z);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_t	D:/work/git/moom/code/momo_matrix.h	/^struct m44f_t {$/;"	s	language:C++
m44f_translation	D:/work/git/moom/code/momo_matrix.h	/^m44f_translation(f32_t x, f32_t y, f32_t z = 0.f) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_translation	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_translation(f32_t x, f32_t y, f32_t z);$/;"	p	language:C++	typeref:typename:m44f_t
m44f_transpose	D:/work/git/moom/code/momo_matrix.h	/^m44f_transpose(m44f_t m) {$/;"	f	language:C++	typeref:typename:m44f_t
m44f_transpose	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t m44f_transpose(m44f_t m);$/;"	p	language:C++	typeref:typename:m44f_t
main	D:/work/git/moom/code/gist_linked_list.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/gist_ring_buffer.cpp	/^int main() $/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/json_test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/meta.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/sui.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	D:/work/git/moom/code/web.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main_arena	D:/work/git/moom/code/moe.h	/^  arena_t main_arena;$/;"	m	language:C++	struct:moe_t	typeref:typename:arena_t
make	D:/work/git/moom/code/momo_types.h	/^#define make(/;"	d	language:C++
max	D:/work/git/moom/code/moe_profiler_rendering.h	/^  f64_t max;$/;"	m	language:C++	struct:profiler_stat_t	typeref:typename:f64_t
max	D:/work/git/moom/code/momo_bonk.h	/^  v2f_t min, max;$/;"	m	language:C++	struct:Rect2	typeref:typename:v2f_t
maxp	D:/work/git/moom/code/momo_ttf.h	/^  u32_t loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:ttf_t	typeref:typename:u32_t
max_of	D:/work/git/moom/code/momo_types.h	/^#define max_of(/;"	d	language:C++
max_x	D:/work/git/moom/code/moe_gfx.h	/^  f32_t min_x, max_x;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
max_y	D:/work/git/moom/code/moe_gfx.h	/^  f32_t min_y, max_y;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
megabytes	D:/work/git/moom/code/momo_types.h	/^#define megabytes(/;"	d	language:C++
memory	D:/work/git/moom/code/moe_gfx.h	/^	u8_t* memory;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:u8_t *
memory	D:/work/git/moom/code/momo_arena.h	/^	u8_t* memory;$/;"	m	language:C++	struct:arena_t	typeref:typename:u8_t *
memory_sentinel	D:/work/git/moom/code/w32_moe.h	/^  w32_memory_block_t memory_sentinel;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:w32_memory_block_t
memory_size	D:/work/git/moom/code/moe_gfx.h	/^  umi_t memory_size;$/;"	m	language:C++	struct:gfx_command_queue_t	typeref:typename:umi_t
metadata345	build/web.html	/^   id="metadata345"><rdf:RDF><cc:Work$/;"	I	language:HTML
meta_compare_token_with_string	D:/work/git/moom/code/meta.cpp	/^meta_compare_token_with_string(Meta_Tokenizer* t, Meta_Token token, String str) {$/;"	f	language:C++	typeref:typename:b32_t	file:
meta_eat_ignorables	D:/work/git/moom/code/meta.cpp	/^meta_eat_ignorables(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_next_token	D:/work/git/moom/code/meta.cpp	/^meta_next_token(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:Meta_Token	file:
meta_print_token	D:/work/git/moom/code/meta.cpp	/^meta_print_token(Meta_Tokenizer* t, Meta_Token token)  {$/;"	f	language:C++	typeref:typename:void	file:
Meta_Token	D:/work/git/moom/code/meta.cpp	/^struct Meta_Token {$/;"	s	language:C++	file:
Meta_Tokenizer	D:/work/git/moom/code/meta.cpp	/^struct Meta_Tokenizer {$/;"	s	language:C++	file:
meta_tokenizer_free	D:/work/git/moom/code/meta.cpp	/^meta_tokenizer_free(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_tokenizer_init	D:/work/git/moom/code/meta.cpp	/^meta_tokenizer_init(Meta_Tokenizer* t, const char* filename) {$/;"	f	language:C++	typeref:typename:b32_t	file:
Meta_Token_Type	D:/work/git/moom/code/meta.cpp	/^enum Meta_Token_Type {$/;"	g	language:C++	file:
META_TOKEN_TYPE_CLOSE_BRACE	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_BRACKET	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_PAREN	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_COLON	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_EOF	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_IDENTIFIER	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_MACRO	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_MACRO,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_NUMBER	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_NUMBER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACE	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACKET	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_PAREN	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_SEMICOLON	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_SEMICOLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_STRING	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_UNKNOWN	D:/work/git/moom/code/meta.cpp	/^  META_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
meta_update_profiler_codegen	D:/work/git/moom/code/meta.cpp	/^meta_update_profiler_codegen(Profiler_Codegen* p, Meta_Tokenizer* t, Meta_Token token) {$/;"	f	language:C++	typeref:typename:void	file:
min	D:/work/git/moom/code/moe_profiler_rendering.h	/^  f64_t min;$/;"	m	language:C++	struct:profiler_stat_t	typeref:typename:f64_t
min	D:/work/git/moom/code/momo_bonk.h	/^  v2f_t min, max;$/;"	m	language:C++	struct:Rect2	typeref:typename:v2f_t
min_of	D:/work/git/moom/code/momo_types.h	/^#define min_of(/;"	d	language:C++
min_x	D:/work/git/moom/code/moe_gfx.h	/^  f32_t min_x, max_x;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
min_y	D:/work/git/moom/code/moe_gfx.h	/^  f32_t min_y, max_y;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
missingLibrarySymbol	build/a.out.js	/^function missingLibrarySymbol(sym) {$/;"	f	language:JavaScript
missingLibrarySymbols	build/a.out.js	/^var missingLibrarySymbols = [$/;"	v	language:JavaScript
mkdev	build/a.out.js	/^  mkdev: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
mm_device_enum	D:/work/git/moom/code/w32_audio_wasapi.h	/^  IMMDeviceEnumerator * mm_device_enum;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:IMMDeviceEnumerator *
model	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint model; $/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLuint
model	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint model;$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLuint
mode_type	code/scene_computer.h	/^  Moe_Mode_Type mode_type;$/;"	m	language:C++	struct:Computer_Selection	typeref:typename:Moe_Mode_Type
Module	build/a.out.js	/^  Module['inspect'] = function () { return '[Emscripten Module object]'; };$/;"	f	language:JavaScript
Module	build/a.out.js	/^var Module = typeof Module != 'undefined' ? Module : {};$/;"	v	language:JavaScript
module_path	D:/work/git/moom/code/w32_moe.h	/^  const char* module_path;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:const char *
module_write_time	D:/work/git/moom/code/w32_moe.h	/^  LARGE_INTEGER module_write_time;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:LARGE_INTEGER
moe	D:/work/git/moom/code/moe_platform.h	/^  void* moe;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:void *
moe_allocate_scene	D:/work/git/moom/code/moe.h	/^#define moe_allocate_scene(/;"	d	language:C++
MOE_CONSOLE_H	D:/work/git/moom/code/moe_console.h	/^#define MOE_CONSOLE_H$/;"	d	language:C++
moe_functions_t	D:/work/git/moom/code/moe_platform.h	/^typedef struct moe_functions_t {$/;"	s	language:C++
moe_functions_t	D:/work/git/moom/code/moe_platform.h	/^} moe_functions_t;$/;"	t	language:C++	typeref:struct:moe_functions_t
moe_function_names	D:/work/git/moom/code/moe_platform.h	/^static const char* moe_function_names[] {$/;"	v	language:C++	typeref:typename:const char * []
MOE_GFX_H	D:/work/git/moom/code/moe_gfx.h	/^#define MOE_GFX_H$/;"	d	language:C++
MOE_H	D:/work/git/moom/code/moe.h	/^#define MOE_H$/;"	d	language:C++
MOE_HEIGHT	D:/work/git/moom/code/moe.h	/^#define MOE_HEIGHT /;"	d	language:C++
moe_height	D:/work/git/moom/code/w32_moe.h	/^  f32_t moe_height;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:f32_t
moe_init_assets	D:/work/git/moom/code/moe_assets.cpp	/^moe_init_assets(moe_t* moe, const char* filename) $/;"	f	language:C++	typeref:typename:b32_t	file:
MOE_INSPECTOR_H	D:/work/git/moom/code/moe_inspector.h	/^#define MOE_INSPECTOR_H$/;"	d	language:C++
MOE_INSPECTOR_RENDERING_H	D:/work/git/moom/code/moe_inspector_rendering.h	/^#define MOE_INSPECTOR_RENDERING_H$/;"	d	language:C++
moe_log	D:/work/git/moom/code/moe.h	/^#define moe_log(/;"	d	language:C++
moe_log	D:/work/git/moom/code/moe.h	/^#define moe_log(/;"	d	language:C++
MOE_MODE_COMPUTER	code/scene_computer.h	/^#define MOE_MODE_COMPUTER$/;"	d	language:C++
MOE_MODE_LIT_H	D:/work/git/moom/code/scene_lit.h	/^#define MOE_MODE_LIT_H$/;"	d	language:C++
MOE_MODE_SPLASH_H	D:/work/git/moom/code/scene_splash.h	/^#define MOE_MODE_SPLASH_H$/;"	d	language:C++
MOE_PAINTER_H	D:/work/git/moom/code/moe_asset_rendering.h	/^#define MOE_PAINTER_H$/;"	d	language:C++
MOE_PLATFORM_H	D:/work/git/moom/code/moe_platform.h	/^#define MOE_PLATFORM_H$/;"	d	language:C++
moe_profiler_block	D:/work/git/moom/code/moe.h	/^#define moe_profiler_block(/;"	d	language:C++
MOE_PROFILER_H	D:/work/git/moom/code/moe_profiler.h	/^#define MOE_PROFILER_H$/;"	d	language:C++
MOE_PROFILER_RENDERING_H	D:/work/git/moom/code/moe_profiler_rendering.h	/^#define MOE_PROFILER_RENDERING_H$/;"	d	language:C++
moe_profile_begin	D:/work/git/moom/code/moe.h	/^#define moe_profile_begin(/;"	d	language:C++
moe_profile_begin	D:/work/git/moom/code/moe.h	/^#define moe_profile_begin(/;"	d	language:C++
moe_profile_block	D:/work/git/moom/code/moe.h	/^#define moe_profile_block(/;"	d	language:C++
moe_profile_end	D:/work/git/moom/code/moe.h	/^#define moe_profile_end(/;"	d	language:C++
moe_profile_end	D:/work/git/moom/code/moe.h	/^#define moe_profile_end(/;"	d	language:C++
MOE_SHOW_DEBUG_CONSOLE	D:/work/git/moom/code/moe.h	/^  MOE_SHOW_DEBUG_CONSOLE,$/;"	e	language:C++	enum:moe_show_debug_type_t
MOE_SHOW_DEBUG_INSPECTOR	D:/work/git/moom/code/moe.h	/^  MOE_SHOW_DEBUG_INSPECTOR,$/;"	e	language:C++	enum:moe_show_debug_type_t
MOE_SHOW_DEBUG_MAX	D:/work/git/moom/code/moe.h	/^  MOE_SHOW_DEBUG_MAX$/;"	e	language:C++	enum:moe_show_debug_type_t
MOE_SHOW_DEBUG_NONE	D:/work/git/moom/code/moe.h	/^  MOE_SHOW_DEBUG_NONE,$/;"	e	language:C++	enum:moe_show_debug_type_t
MOE_SHOW_DEBUG_PROFILER	D:/work/git/moom/code/moe.h	/^  MOE_SHOW_DEBUG_PROFILER,$/;"	e	language:C++	enum:moe_show_debug_type_t
moe_show_debug_type_t	D:/work/git/moom/code/moe.h	/^enum moe_show_debug_type_t {$/;"	g	language:C++
moe_t	D:/work/git/moom/code/moe.h	/^typedef struct moe_t {$/;"	s	language:C++
moe_t	D:/work/git/moom/code/moe.h	/^} moe_t;$/;"	t	language:C++	typeref:struct:moe_t
moe_update_and_render	D:/work/git/moom/code/moe.cpp	/^moe_update_and_render(platform_t* pf)$/;"	f	language:C++	typeref:typename:exported b32_t
moe_update_and_render_f	D:/work/git/moom/code/moe_platform.h	/^typedef void moe_update_and_render_f(platform_t* pf);$/;"	t	language:C++	typeref:typename:void ()(platform_t * pf)
MOE_WIDTH	D:/work/git/moom/code/moe.h	/^#define MOE_WIDTH /;"	d	language:C++
moe_width	D:/work/git/moom/code/w32_moe.h	/^  f32_t moe_width;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:f32_t
MOMO_ARENA_H	D:/work/git/moom/code/momo_arena.h	/^#define MOMO_ARENA_H$/;"	d	language:C++
MOMO_COLORS_H	D:/work/git/moom/code/momo_colors.h	/^#define MOMO_COLORS_H$/;"	d	language:C++
MOMO_CRC_H	D:/work/git/moom/code/momo_crc.h	/^#define MOMO_CRC_H$/;"	d	language:C++
MOMO_DS_H	D:/work/git/moom/code/momo_ds.h	/^#define MOMO_DS_H$/;"	d	language:C++
MOMO_EASING_H	D:/work/git/moom/code/momo_easing.h	/^#define MOMO_EASING_H$/;"	d	language:C++
MOMO_H	D:/work/git/moom/code/momo.h	/^#define MOMO_H$/;"	d	language:C++
MOMO_INTRINSICS_H	D:/work/git/moom/code/momo_intrinsics.h	/^#define MOMO_INTRINSICS_H$/;"	d	language:C++
MOMO_JSON	D:/work/git/moom/code/momo_json.h	/^#define MOMO_JSON$/;"	d	language:C++
MOMO_MATRIX_H	D:/work/git/moom/code/momo_matrix.h	/^#define MOMO_MATRIX_H$/;"	d	language:C++
MOMO_PNG	D:/work/git/moom/code/momo_png.h	/^#define MOMO_PNG$/;"	d	language:C++
MOMO_RANDOM_H	D:/work/git/moom/code/momo_rng.h	/^#define MOMO_RANDOM_H$/;"	d	language:C++
MOMO_RECT_PACK_H	D:/work/git/moom/code/momo_rect_pack.h	/^#define MOMO_RECT_PACK_H$/;"	d	language:C++
MOMO_SHAPES_H	D:/work/git/moom/code/momo_bonk.h	/^#define MOMO_SHAPES_H$/;"	d	language:C++
MOMO_SORT_H	D:/work/git/moom/code/momo_sort.h	/^#define MOMO_SORT_H$/;"	d	language:C++
MOMO_STREAM_H	D:/work/git/moom/code/momo_streams.h	/^#define MOMO_STREAM_H$/;"	d	language:C++
MOMO_STRING_H	D:/work/git/moom/code/momo_strings.h	/^#define MOMO_STRING_H$/;"	d	language:C++
MOMO_TTF_H	D:/work/git/moom/code/momo_ttf.h	/^#define MOMO_TTF_H$/;"	d	language:C++
MOMO_TYPES_H	D:/work/git/moom/code/momo_types.h	/^#define MOMO_TYPES_H$/;"	d	language:C++
MOMO_VECTOR_H	D:/work/git/moom/code/momo_vectors.h	/^#define MOMO_VECTOR_H$/;"	d	language:C++
MOMO_WAV_H	D:/work/git/moom/code/momo_wav.h	/^#define MOMO_WAV_H$/;"	d	language:C++
more_obj	build/test_json.json	/^    "more_obj": {$/;"	o	language:JSON	object:obj
mouse_pos	D:/work/git/moom/code/moe_platform.h	/^  v2f_t mouse_pos;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:v2f_t
name	build/test_json.json	/^  "name":"John", $/;"	s	language:JSON
name	D:/work/git/moom/code/moe_inspector.h	/^  str8_t name;$/;"	m	language:C++	struct:__anona16973e90208	typeref:typename:str8_t
namedview341	build/web.html	/^   id="namedview341"$/;"	I	language:HTML
next	D:/work/git/moom/code/gist_linked_list.cpp	/^  gist_cdl_node* next;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:gist_cdl_node *	file:
next	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^  gist_cdl_node* next;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:gist_cdl_node *	file:
next	D:/work/git/moom/code/momo_json.h	/^  struct _json_array_node_t* next;$/;"	m	language:C++	struct:_json_array_node_t	typeref:struct:_json_array_node_t *
next	D:/work/git/moom/code/w32_moe.h	/^  w32_memory_block_t* next;$/;"	m	language:C++	struct:w32_memory_block_t	typeref:typename:w32_memory_block_t *
next_entry_to_read	D:/work/git/moom/code/w32_moe.h	/^  u32_t volatile next_entry_to_read;$/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:u32_t volatile
next_entry_to_write	D:/work/git/moom/code/w32_moe.h	/^  u32_t volatile next_entry_to_write;$/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:u32_t volatile
next_obj	build/test_json.json	/^  "next_obj": {$/;"	o	language:JSON
node	D:/work/git/moom/code/momo_json.h	/^  struct _json_object_node_t* node;$/;"	m	language:C++	struct:json_object_t	typeref:struct:_json_object_node_t *
NODEFS	build/a.out.js	/^var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';$/;"	v	language:JavaScript
nodePath	build/a.out.js	/^var fs, nodePath;$/;"	v	language:JavaScript
nodes	D:/work/git/moom/code/gist_linked_list.cpp	/^static gist_cdl_node nodes[128];$/;"	v	language:C++	typeref:typename:gist_cdl_node[128]	file:
node_count	D:/work/git/moom/code/gist_linked_list.cpp	/^static u32_t node_count = 0;$/;"	v	language:C++	typeref:typename:u32_t	file:
NOMINMAX	D:/work/git/moom/code/w32_moe.h	/^#define NOMINMAX$/;"	d	language:C++
notifs	D:/work/git/moom/code/w32_audio_wasapi.h	/^  w32_wasapi_notif_client_t notifs;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:w32_wasapi_notif_client_t
now	D:/work/git/moom/code/moe_platform.h	/^  b32_t now; $/;"	m	language:C++	struct:__anona41ebd570608	typeref:typename:b32_t
ns_begin	D:/work/git/moom/code/momo_types.h	/^# define ns_begin(/;"	d	language:C++
ns_end	D:/work/git/moom/code/momo_types.h	/^# define ns_end(/;"	d	language:C++
num_channels	D:/work/git/moom/code/momo_wav.h	/^  u16_t num_channels;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u16_t
obj	build/test_json.json	/^  "obj": { $/;"	o	language:JSON
obj	D:/work/git/moom/code/momo_json.h	/^    json_object_t obj;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:json_object_t
offset_of	D:/work/git/moom/code/momo_types.h	/^#define offset_of(/;"	d	language:C++
offset_to_assets	D:/work/git/moom/code/karu.h	/^  u32_t offset_to_assets;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
offset_to_data	D:/work/git/moom/code/karu.h	/^  u32_t offset_to_data;$/;"	m	language:C++	struct:karu_asset_t	typeref:typename:u32_t
offset_to_data	D:/work/git/moom/code/karu.h	/^  u32_t offset_to_data;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:u32_t
offset_to_data	D:/work/git/moom/code/moe_assets.h	/^  u32_t offset_to_data;$/;"	m	language:C++	struct:asset_slot_t	typeref:typename:u32_t
offset_to_groups	D:/work/git/moom/code/karu.h	/^  u32_t offset_to_groups;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
offset_to_tags	D:/work/git/moom/code/karu.h	/^  u32_t offset_to_tags;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
ogl_begin_frame	D:/work/git/moom/code/moe_gfx_opengl.h	/^ogl_begin_frame(Opengl* ogl, v2u_t render_wh,$/;"	f	language:C++	typeref:typename:void
ogl_begin_frame	D:/work/git/moom/code/moe_gfx_opengl.h	/^static void ogl_begin_frame(Opengl* ogl, v2u_t render_wh, u32_t region_x0, u32_t region_y0, u32_/;"	p	language:C++	typeref:typename:void
ogl_end_frame	D:/work/git/moom/code/moe_gfx_opengl.h	/^ogl_end_frame(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
ogl_end_frame	D:/work/git/moom/code/moe_gfx_opengl.h	/^static void ogl_end_frame(Opengl* ogl);$/;"	p	language:C++	typeref:typename:void
OGL_glAttachShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glAttachShader(GLuint program, GLuint shader);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLuint shader)
OGL_glBindTexture	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glBindTexture(GLenum target, GLuint texture);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLuint texture)
OGL_glBindVertexArray	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glBindVertexArray(GLuint array);$/;"	t	language:C++	typeref:typename:void ()(GLuint array)
OGL_glBlendFunc	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glBlendFunc(GLenum sfactor, GLenum dfactor);$/;"	t	language:C++	typeref:typename:void ()(GLenum sfactor,GLenum dfactor)
OGL_glBlendFuncSeparate	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glBlendFuncSeparate(GLenum srcRGB, GLenum destRGB, GLenum srcAlpha, GLenum d/;"	t	language:C++	typeref:typename:void ()(GLenum srcRGB,GLenum destRGB,GLenum srcAlpha,GLenum destAlpha)
OGL_glClear	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glClear(GLbitfield mask);$/;"	t	language:C++	typeref:typename:void ()(GLbitfield mask)
OGL_glClearColor	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glClearColor(GLclampf r, GLclampf g, GLclampf b, GLclampf a);$/;"	t	language:C++	typeref:typename:void ()(GLclampf r,GLclampf g,GLclampf b,GLclampf a)
OGL_glCompileShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glCompileShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glCreateBuffers	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glCreateBuffers(GLsizei n, GLuint* buffers);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * buffers)
OGL_glCreateProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef GLuint  OGL_glCreateProgram();$/;"	t	language:C++	typeref:typename:GLuint ()()
OGL_glCreateShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef GLuint  OGL_glCreateShader(GLenum type);$/;"	t	language:C++	typeref:typename:GLuint ()(GLenum type)
OGL_glCreateTextures	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glCreateTextures(GLenum target, GLsizei n, GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLsizei n,GLuint * textures)
OGL_glCreateVertexArrays	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glCreateVertexArrays(GLsizei n, GLuint* arrays);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * arrays)
OGL_glDebugMessageCallbackARB	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDebugMessageCallbackARB(GLDEBUGPROC *callback, const void* userParams);$/;"	t	language:C++	typeref:typename:void ()(GLDEBUGPROC * callback,const void * userParams)
OGL_glDeleteShader	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDeleteShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glDeleteTextures	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDeleteTextures(GLsizei n, const GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,const GLuint * textures)
OGL_glDisable	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDisable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glDrawArrays	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDrawArrays(GLenum mode, GLint first, GLsizei count);$/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLint first,GLsizei count)
OGL_glDrawElementsInstancedBaseInstance	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type,/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
OGL_glEnable	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glEnable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glEnableVertexArrayAttrib	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint index)
OGL_glGetProgramInfoLog	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glGetProgramInfoLog(GLuint program, GLsizei maxLength, GLsizei* length,GLcha/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLsizei maxLength,GLsizei * length,GLchar * infoLog)
OGL_glGetProgramiv	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glGetProgramiv(GLuint program, GLenum pname, GLint* params);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLenum pname,GLint * params)
OGL_glGetUniformLocation	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef GLint   OGL_glGetUniformLocation(GLuint program, const GLchar* name);$/;"	t	language:C++	typeref:typename:GLint ()(GLuint program,const GLchar * name)
OGL_glLinkProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glLinkProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glNamedBufferStorage	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void* data, GLbit/;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
OGL_glNamedBufferSubData	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const /;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
OGL_glProgramUniform4fv	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLf/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,const GLfloat * value)
OGL_glProgramUniformMatrix4fv	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLb/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
OGL_glScissor	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glScissor(GLint x, GLint y, GLsizei width, GLsizei height); $/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
OGL_glShaderSource	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glShaderSource(GLuint shader, GLsizei count, GLchar** string, GLint* length)/;"	t	language:C++	typeref:typename:void ()(GLuint shader,GLsizei count,GLchar ** string,GLint * length)
OGL_glTexParameteri	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glTexParameteri(GLenum target, GLenum pname, GLint param);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLenum pname,GLint param)
OGL_glTextureStorage2D	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat,GLs/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
OGL_glTextureSubImage2D	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,G/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
OGL_glUseProgram	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glUseProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glVertexArrayAttribBinding	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribBinding(GLuint vaobj,GLuint attribindex,GLuint bindingind/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
OGL_glVertexArrayAttribFormat	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLen/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
OGL_glVertexArrayBindingDivisor	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint diviso/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint divisor)
OGL_glVertexArrayElementBuffer	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint buffer)
OGL_glVertexArrayVertexBuffer	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, /;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
OGL_glViewport	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef void    OGL_glViewport(GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
ogl_init	D:/work/git/moom/code/moe_gfx_opengl.h	/^ogl_init(Opengl* ogl,$/;"	f	language:C++	typeref:typename:b32_t
ogl_init	D:/work/git/moom/code/moe_gfx_opengl.h	/^static b32_t ogl_init(Opengl* ogl, $/;"	p	language:C++	typeref:typename:b32_t
OGL_MAX_SPRITES	D:/work/git/moom/code/moe_gfx_opengl.h	/^# define OGL_MAX_SPRITES /;"	d	language:C++
OGL_MAX_TRIANGLES	D:/work/git/moom/code/moe_gfx_opengl.h	/^# define OGL_MAX_TRIANGLES /;"	d	language:C++
OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon99efc5fb0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon99efc5fb0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE,$/;"	e	language:C++	enum:__anon99efc5fb0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon99efc5fb0203
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1, \/\/ 2$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2, \/\/ 3$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3, \/\/ 4$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4, \/\/ 5$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon99efc5fb0103
OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE,$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon99efc5fb0303
OGL_Texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^} OGL_Texture;$/;"	t	language:C++	typeref:struct:__anon99efc5fb0708
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon99efc5fb0503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon99efc5fb0503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon99efc5fb0503
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon99efc5fb0403
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon99efc5fb0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon99efc5fb0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon99efc5fb0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon99efc5fb0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon99efc5fb0603
old_light_pos	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t old_light_pos;$/;"	m	language:C++	struct:lit_player_t	typeref:typename:v2f_t
old_pos	D:/work/git/moom/code/momo_arena.h	/^  umi_t old_pos;$/;"	m	language:C++	struct:arena_marker_t	typeref:typename:umi_t
one_past_last_asset_index	D:/work/git/moom/code/karu.h	/^  u32_t one_past_last_asset_index;$/;"	m	language:C++	struct:karu_group_t	typeref:typename:u32_t
one_past_last_asset_index	D:/work/git/moom/code/moe_assets.h	/^  u32_t one_past_last_asset_index;$/;"	m	language:C++	struct:asset_group_t	typeref:typename:u32_t
one_past_last_tag_index	D:/work/git/moom/code/karu.h	/^  u32_t one_past_last_tag_index;$/;"	m	language:C++	struct:karu_asset_t	typeref:typename:u32_t
one_past_last_tag_index	D:/work/git/moom/code/moe_assets.h	/^  u32_t one_past_last_tag_index;$/;"	m	language:C++	struct:asset_slot_t	typeref:typename:u32_t
ope	D:/work/git/moom/code/meta.cpp	/^  u32_t ope;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:u32_t	file:
ope	D:/work/git/moom/code/momo_json.h	/^  u32_t ope;$/;"	m	language:C++	struct:_json_token_t	typeref:typename:u32_t
open	build/a.out.js	/^  open: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
Opengl	D:/work/git/moom/code/moe_gfx_opengl.h	/^struct Opengl {$/;"	s	language:C++
open_file	D:/work/git/moom/code/moe_platform.h	/^  platform_open_file_f* open_file;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_open_file_f *
operator !=	D:/work/git/moom/code/momo_strings.h	/^static b32_t operator!=(str8_t lhs, str8_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
operator !=	D:/work/git/moom/code/momo_strings.h	/^static b32_t operator!=(str8_t lhs, str8_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
operator !=	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator!=(v2f_t lhs, v2f_t rhs) { return !v2f_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:b32_t
operator !=	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator!=(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
operator !=	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator!=(v3f_t lhs, v3f_t rhs) { return !v3f_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:b32_t
operator !=	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator!=(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
operator *	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t operator*(m44f_t lhs, m44f_t rhs) {$/;"	f	language:C++	typeref:typename:m44f_t
operator *	D:/work/git/moom/code/momo_matrix.h	/^static m44f_t operator*(m44f_t lhs, m44f_t rhs);$/;"	p	language:C++	typeref:typename:m44f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator*(f32_t lhs, v2f_t rhs) { return v2f_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:v2f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator*(f32_t lhs, v2f_t rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:v2f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator*(v2f_t lhs, f32_t rhs) { return v2f_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator*(v2f_t lhs, f32_t rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:v2f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator*(f32_t lhs, v3f_t rhs) { return v3f_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:v3f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator*(f32_t lhs, v3f_t rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:v3f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator*(v3f_t lhs, f32_t rhs) { return v3f_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v3f_t
operator *	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator*(v3f_t lhs, f32_t rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:v3f_t
operator *=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator*=(v2f_t& lhs, f32_t rhs) { return lhs = v2f_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2f_t &
operator *=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator*=(v2f_t& lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t &
operator *=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator*=(v3f_t& lhs, f32_t rhs) { return lhs = v3f_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v3f_t &
operator *=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator*=(v3f_t& lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t &
operator +	D:/work/git/moom/code/momo_types.h	/^template<typename F> _defer_scope_guard<F> operator+(_defer_dummy, F f) {$/;"	f	language:C++	typeref:typename:_defer_scope_guard<F>
operator +	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator+(v2f_t lhs, v2f_t rhs) { return v2f_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2f_t
operator +	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator+(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
operator +	D:/work/git/moom/code/momo_vectors.h	/^static v2u_t operator+(v2u_t lhs, v2u_t rhs) { return v2u_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2u_t
operator +	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator+(v3f_t lhs, v3f_t rhs) { return v3f_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v3f_t
operator +	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator+(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
operator +=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator+=(v2f_t& lhs, v2f_t rhs) { return lhs = v2f_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:v2f_t &
operator +=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator+=(v2f_t& lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t &
operator +=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator+=(v3f_t& lhs, v3f_t rhs) { return lhs = v3f_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:v3f_t &
operator +=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator+=(v3f_t& lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t &
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator-(v2f_t lhs, v2f_t rhs) { return v2f_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator-(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator-(v2f_t v) { return v2f_negate(v); }$/;"	f	language:C++	typeref:typename:v2f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t  operator-(v2f_t v);$/;"	p	language:C++	typeref:typename:v2f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v2u_t operator-(v2u_t lhs, v2u_t rhs) { return v2u_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v2u_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator-(v3f_t lhs, v3f_t rhs) { return v3f_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:v3f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator-(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator-(v3f_t v) { return v3f_negate(v); }$/;"	f	language:C++	typeref:typename:v3f_t
operator -	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t  operator-(v3f_t v);$/;"	p	language:C++	typeref:typename:v3f_t
operator -=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator-=(v2f_t& lhs, v2f_t rhs) { return lhs = v2f_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:v2f_t &
operator -=	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t& operator-=(v2f_t& lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t &
operator -=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator-=(v3f_t& lhs, v3f_t rhs) { return lhs = v3f_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:v3f_t &
operator -=	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t& operator-=(v3f_t& lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t &
operator ==	D:/work/git/moom/code/momo_strings.h	/^static b32_t operator==(str8_t lhs, str8_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
operator ==	D:/work/git/moom/code/momo_strings.h	/^static b32_t operator==(str8_t lhs, str8_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
operator ==	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator==(v2f_t lhs, v2f_t rhs) { return v2f_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:b32_t
operator ==	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator==(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
operator ==	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator==(v3f_t lhs, v3f_t rhs) { return v3f_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:b32_t
operator ==	D:/work/git/moom/code/momo_vectors.h	/^static b32_t operator==(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
OS_LINUX	D:/work/git/moom/code/momo_types.h	/^# define OS_LINUX /;"	d	language:C++
OS_LINUX	D:/work/git/moom/code/momo_types.h	/^# define OS_LINUX /;"	d	language:C++
OS_MAC	D:/work/git/moom/code/momo_types.h	/^# define OS_MAC /;"	d	language:C++
OS_MAC	D:/work/git/moom/code/momo_types.h	/^# define OS_MAC /;"	d	language:C++
OS_WINDOWS	D:/work/git/moom/code/momo_types.h	/^# define OS_WINDOWS /;"	d	language:C++
OS_WINDOWS	D:/work/git/moom/code/momo_types.h	/^# define OS_WINDOWS /;"	d	language:C++
out	D:/work/git/moom/code/test_png.h	/^    const char* out;$/;"	m	language:C++	struct:test_png::__anon599362d60108	typeref:typename:const char *
output	build/web.html	/^    <textarea id="output" rows="8"><\/textarea>$/;"	I	language:HTML
p0	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:gfx_command_triangle_t	typeref:typename:v2f_t
p0	D:/work/git/moom/code/momo_ttf.h	/^  v2f_t p0, p1;$/;"	m	language:C++	struct:_ttf_edge_t	typeref:typename:v2f_t
p0	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:lit_light_triangle_t	typeref:typename:v2f_t
p1	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:gfx_command_triangle_t	typeref:typename:v2f_t
p1	D:/work/git/moom/code/momo_ttf.h	/^  v2f_t p0, p1;$/;"	m	language:C++	struct:_ttf_edge_t	typeref:typename:v2f_t
p1	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:lit_light_triangle_t	typeref:typename:v2f_t
p2	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:gfx_command_triangle_t	typeref:typename:v2f_t
p2	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t p0, p1, p2;$/;"	m	language:C++	struct:lit_light_triangle_t	typeref:typename:v2f_t
paint_sprite	D:/work/git/moom/code/moe_asset_rendering.h	/^paint_sprite(moe_t* moe,$/;"	f	language:C++	typeref:typename:void
paint_text	D:/work/git/moom/code/moe_asset_rendering.h	/^paint_text(moe_t* moe,$/;"	f	language:C++	typeref:typename:void
paint_text_center_aligned	D:/work/git/moom/code/moe_asset_rendering.h	/^paint_text_center_aligned(moe_t* moe,$/;"	f	language:C++	typeref:typename:void
particles	D:/work/git/moom/code/scene_lit.h	/^  lit_particle_pool_t particles;$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_particle_pool_t
particles	D:/work/git/moom/code/scene_lit_entity.h	/^  lit_particle_t particles[256];$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:lit_particle_t[256]
particle_cd	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t particle_cd;$/;"	m	language:C++	struct:lit_sensor_t	typeref:typename:f32_t
particle_color_end	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t particle_color_end;$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:f32_t
particle_color_start	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t particle_color_start;$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:f32_t
particle_count	D:/work/git/moom/code/scene_lit_entity.h	/^  u32_t particle_count;$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:u32_t
particle_lifespan_max	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t particle_lifespan_max;$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:f32_t
particle_lifespan_min	D:/work/git/moom/code/scene_lit_entity.h	/^  f32_t particle_lifespan_min;$/;"	m	language:C++	struct:lit_particle_pool_t	typeref:typename:f32_t
path119	build/web.html	/^   id="path119" \/><\/g><g$/;"	I	language:HTML
path13	build/web.html	/^   id="path13" \/><path$/;"	I	language:HTML
path15	build/web.html	/^   id="path15" \/><\/g><defs$/;"	I	language:HTML
path243	build/web.html	/^   id="path243"$/;"	I	language:HTML
path249	build/web.html	/^   id="path249"$/;"	I	language:HTML
path251	build/web.html	/^   id="path251"$/;"	I	language:HTML
path253	build/web.html	/^   id="path253"$/;"	I	language:HTML
path255	build/web.html	/^   id="path255"$/;"	I	language:HTML
path257	build/web.html	/^   id="path257"$/;"	I	language:HTML
path259	build/web.html	/^   id="path259"$/;"	I	language:HTML
path261	build/web.html	/^   id="path261"$/;"	I	language:HTML
path263	build/web.html	/^   id="path263"$/;"	I	language:HTML
path265	build/web.html	/^   id="path265"$/;"	I	language:HTML
path267	build/web.html	/^   id="path267"$/;"	I	language:HTML
path276	build/web.html	/^   id="path276"$/;"	I	language:HTML
path283	build/web.html	/^   id="path283"$/;"	I	language:HTML
path29	build/web.html	/^   id="path29" \/><path$/;"	I	language:HTML
path290	build/web.html	/^   id="path290"$/;"	I	language:HTML
path297	build/web.html	/^   id="path297"$/;"	I	language:HTML
path3	build/web.html	/^   id="path3" \/><path$/;"	I	language:HTML
path304	build/web.html	/^   id="path304"$/;"	I	language:HTML
path31	build/web.html	/^   id="path31" \/><\/g><\/g><g$/;"	I	language:HTML
path311	build/web.html	/^   id="path311"$/;"	I	language:HTML
path318	build/web.html	/^   id="path318"$/;"	I	language:HTML
path325	build/web.html	/^   id="path325"$/;"	I	language:HTML
path332	build/web.html	/^   id="path332"$/;"	I	language:HTML
path339	build/web.html	/^   id="path339"$/;"	I	language:HTML
path46	build/web.html	/^   id="path46"$/;"	I	language:HTML
path5	build/web.html	/^   id="path5"$/;"	I	language:HTML
path5080	build/web.html	/^     id="path5080" \/><\/g><path$/;"	I	language:HTML
path5122	build/web.html	/^     id="path5122"$/;"	I	language:HTML
path60	build/web.html	/^   id="path60"$/;"	I	language:HTML
path7	build/web.html	/^   id="path7" \/><g$/;"	I	language:HTML
path92	build/web.html	/^   id="path92" \/><path$/;"	I	language:HTML
path94	build/web.html	/^   id="path94" \/><\/g><\/g><path$/;"	I	language:HTML
path96	build/web.html	/^   id="path96" \/><linearGradient$/;"	I	language:HTML
path_count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t path_count;$/;"	m	language:C++	struct:_ttf_glyph_paths_t	typeref:typename:u32_t
path_lengths	D:/work/git/moom/code/momo_ttf.h	/^  u32_t* path_lengths;$/;"	m	language:C++	struct:_ttf_glyph_paths_t	typeref:typename:u32_t *
payloads	D:/work/git/moom/code/moe_gfx.h	/^  gfx_texture_payload_t payloads[GFX_MAX_TEXTURES];$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:gfx_texture_payload_t[]
payload_count	D:/work/git/moom/code/moe_gfx.h	/^  umi_t payload_count;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:umi_t
percent_f32	D:/work/git/moom/code/momo_types.h	/^percent_f32(f32_t v, f32_t min, f32_t max) { $/;"	f	language:C++	typeref:typename:f32_t
percent_f64	D:/work/git/moom/code/momo_types.h	/^percent_f64(f64_t v, f64_t min, f64_t max) { $/;"	f	language:C++	typeref:typename:f64_t
pixels	D:/work/git/moom/code/sui_atlas.h	/^  u32_t* pixels;$/;"	m	language:C++	struct:sui_atlas_bitmap_t	typeref:typename:u32_t *
pixels	D:/work/git/moom/code/sui_pack.h	/^  u32_t* pixels;$/;"	m	language:C++	struct:sui_packer_source_bitmap_t	typeref:typename:u32_t *
PI_32	D:/work/git/moom/code/momo_types.h	/^#define PI_32 /;"	d	language:C++
PI_64	D:/work/git/moom/code/momo_types.h	/^#define PI_64 /;"	d	language:C++
platform	D:/work/git/moom/code/moe.h	/^  platform_t* platform;$/;"	m	language:C++	struct:moe_t	typeref:typename:platform_t *
platform_add_task_f	D:/work/git/moom/code/moe_platform.h	/^typedef void platform_add_task_f(platform_task_callback_f callback, void* data);$/;"	t	language:C++	typeref:typename:void ()(platform_task_callback_f callback,void * data)
platform_allocate_memory_f	D:/work/git/moom/code/moe_platform.h	/^typedef platform_memory_block_t* platform_allocate_memory_f(umi_t size);$/;"	t	language:C++	typeref:typename:platform_memory_block_t * ()(umi_t size)
platform_audio	D:/work/git/moom/code/w32_audio_wasapi.h	/^  platform_audio_t platform_audio; \/\/ Must be first member$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:platform_audio_t
platform_audio_t	D:/work/git/moom/code/moe_platform.h	/^} platform_audio_t;$/;"	t	language:C++	typeref:struct:__anona41ebd570508
platform_block	D:/work/git/moom/code/w32_moe.h	/^  platform_memory_block_t platform_block;$/;"	m	language:C++	struct:w32_memory_block_t	typeref:typename:platform_memory_block_t
platform_button_t	D:/work/git/moom/code/moe_platform.h	/^} platform_button_t;$/;"	t	language:C++	typeref:struct:__anona41ebd570608
platform_close_file_f	D:/work/git/moom/code/moe_platform.h	/^typedef void  platform_close_file_f(platform_file_t* file);$/;"	t	language:C++	typeref:typename:void ()(platform_file_t * file)
platform_complete_all_tasks_f	D:/work/git/moom/code/moe_platform.h	/^typedef void platform_complete_all_tasks_f();$/;"	t	language:C++	typeref:typename:void ()()
platform_data	D:/work/git/moom/code/moe_platform.h	/^  void* platform_data; \/\/ pointer for platform's usage$/;"	m	language:C++	struct:__anona41ebd570408	typeref:typename:void *
platform_debug_log_f	D:/work/git/moom/code/moe_platform.h	/^typedef void  platform_debug_log_f(const char* fmt, ...);$/;"	t	language:C++	typeref:typename:void ()(const char * fmt,...)
PLATFORM_FILE_ACCESS_OVERWRITE	D:/work/git/moom/code/moe_platform.h	/^  PLATFORM_FILE_ACCESS_OVERWRITE,$/;"	e	language:C++	enum:__anona41ebd570303
PLATFORM_FILE_ACCESS_READ	D:/work/git/moom/code/moe_platform.h	/^  PLATFORM_FILE_ACCESS_READ,$/;"	e	language:C++	enum:__anona41ebd570303
platform_file_access_t	D:/work/git/moom/code/moe_platform.h	/^} platform_file_access_t;$/;"	t	language:C++	typeref:enum:__anona41ebd570303
PLATFORM_FILE_PATH_CACHE	D:/work/git/moom/code/moe_platform.h	/^  PLATFORM_FILE_PATH_CACHE,$/;"	e	language:C++	enum:__anona41ebd570203
PLATFORM_FILE_PATH_EXE	D:/work/git/moom/code/moe_platform.h	/^  PLATFORM_FILE_PATH_EXE,$/;"	e	language:C++	enum:__anona41ebd570203
platform_file_path_t	D:/work/git/moom/code/moe_platform.h	/^} platform_file_path_t;$/;"	t	language:C++	typeref:enum:__anona41ebd570203
PLATFORM_FILE_PATH_USER	D:/work/git/moom/code/moe_platform.h	/^  PLATFORM_FILE_PATH_USER,$/;"	e	language:C++	enum:__anona41ebd570203
platform_file_t	D:/work/git/moom/code/moe_platform.h	/^} platform_file_t;$/;"	t	language:C++	typeref:struct:__anona41ebd570408
platform_free_memory_f	D:/work/git/moom/code/moe_platform.h	/^typedef void  platform_free_memory_f(platform_memory_block_t* ptr);$/;"	t	language:C++	typeref:typename:void ()(platform_memory_block_t * ptr)
platform_get_perforance_counter_f	D:/work/git/moom/code/moe_platform.h	/^typedef u64_t platform_get_perforance_counter_f();$/;"	t	language:C++	typeref:typename:u64_t ()()
platform_is_button_down	D:/work/git/moom/code/moe_platform.h	/^platform_is_button_down(platform_button_t btn){$/;"	f	language:C++	typeref:typename:b32_t
platform_is_button_down	D:/work/git/moom/code/moe_platform.h	/^static b32_t platform_is_button_down(platform_button_t);$/;"	p	language:C++	typeref:typename:b32_t
platform_is_button_held	D:/work/git/moom/code/moe_platform.h	/^platform_is_button_held(platform_button_t btn) {$/;"	f	language:C++	typeref:typename:b32_t
platform_is_button_held	D:/work/git/moom/code/moe_platform.h	/^static b32_t platform_is_button_held(platform_button_t);$/;"	p	language:C++	typeref:typename:b32_t
platform_is_button_poked	D:/work/git/moom/code/moe_platform.h	/^platform_is_button_poked(platform_button_t btn) {$/;"	f	language:C++	typeref:typename:b32_t
platform_is_button_poked	D:/work/git/moom/code/moe_platform.h	/^static b32_t platform_is_button_poked(platform_button_t) ;$/;"	p	language:C++	typeref:typename:b32_t
platform_is_button_released	D:/work/git/moom/code/moe_platform.h	/^platform_is_button_released(platform_button_t btn) {$/;"	f	language:C++	typeref:typename:b32_t
platform_is_button_released	D:/work/git/moom/code/moe_platform.h	/^static b32_t platform_is_button_released(platform_button_t);$/;"	p	language:C++	typeref:typename:b32_t
platform_memory_block_t	D:/work/git/moom/code/moe_platform.h	/^} platform_memory_block_t;$/;"	t	language:C++	typeref:struct:__anona41ebd570108
platform_open_file_f	D:/work/git/moom/code/moe_platform.h	/^platform_open_file_f(platform_file_t* file,$/;"	t	language:C++	typeref:typename:b32_t ()(platform_file_t * file,const char * filename,platform_file_access_t file_access,platform_file_path_t file_path)
platform_read_file_f	D:/work/git/moom/code/moe_platform.h	/^typedef b32_t platform_read_file_f(platform_file_t* file, umi_t size, umi_t offset, void* dest);$/;"	t	language:C++	typeref:typename:b32_t ()(platform_file_t * file,umi_t size,umi_t offset,void * dest)
platform_set_moe_dims_f	D:/work/git/moom/code/moe_platform.h	/^typedef void  platform_set_moe_dims_f(f32_t width, f32_t height);$/;"	t	language:C++	typeref:typename:void ()(f32_t width,f32_t height)
platform_t	D:/work/git/moom/code/moe_platform.h	/^} platform_t;$/;"	t	language:C++	typeref:struct:__anona41ebd570708
platform_task_callback_f	D:/work/git/moom/code/moe_platform.h	/^typedef void platform_task_callback_f(void* data);$/;"	t	language:C++	typeref:typename:void ()(void * data)
platform_update_input	D:/work/git/moom/code/moe_platform.h	/^platform_update_input(platform_t* pf) {$/;"	f	language:C++	typeref:typename:void
platform_update_input	D:/work/git/moom/code/moe_platform.h	/^static void  platform_update_input(platform_button_t);$/;"	p	language:C++	typeref:typename:void
platform_write_file_f	D:/work/git/moom/code/moe_platform.h	/^typedef b32_t platform_write_file_f(platform_file_t* file, umi_t size, umi_t offset, void* src);$/;"	t	language:C++	typeref:typename:b32_t ()(platform_file_t * file,umi_t size,umi_t offset,void * src)
player	D:/work/git/moom/code/scene_lit.h	/^  lit_player_t player;$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_player_t
png_rasterize	D:/work/git/moom/code/momo_png.h	/^png_rasterize(png_t* png, u32_t* out_w, u32_t* out_h, arena_t* arena) $/;"	f	language:C++	typeref:typename:u32_t *
png_rasterize	D:/work/git/moom/code/momo_png.h	/^static u32_t*    png_rasterize(png_t* png, u32_t* out_w, u32_t* out_h, arena_t* arena); $/;"	p	language:C++	typeref:typename:u32_t *
png_read	D:/work/git/moom/code/momo_png.h	/^png_read(png_t* p, void* png_memory, umi_t png_size) {$/;"	f	language:C++	typeref:typename:b32_t
png_read	D:/work/git/moom/code/momo_png.h	/^static b32_t     png_read(png_t* png, void* png_memory, umi_t png_size);$/;"	p	language:C++	typeref:typename:b32_t
png_t	D:/work/git/moom/code/momo_png.h	/^struct png_t {$/;"	s	language:C++
png_write	D:/work/git/moom/code/momo_png.h	/^png_write(u32_t* pixels, u32_t width, u32_t height, umi_t* out_size, arena_t* arena) {$/;"	f	language:C++	typeref:typename:void *
png_write	D:/work/git/moom/code/momo_png.h	/^static void*   png_write(png_t* png, umi_t* out_size, arena_t* arena);$/;"	p	language:C++	typeref:typename:void *
pointerLock	build/web.html	/^  <span><input type="checkbox" id="pointerLock" checked>Lock\/hide mouse pointer &nbsp;&nbsp;&nb/;"	I	language:HTML
POINTER_SIZE	build/a.out.js	/^var POINTER_SIZE = 4;$/;"	v	language:JavaScript
points	D:/work/git/moom/code/momo_ttf.h	/^  _ttf_glyph_point_t* points;$/;"	m	language:C++	struct:_ttf_glyph_outline_t	typeref:typename:_ttf_glyph_point_t *
point_count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t point_count;$/;"	m	language:C++	struct:_ttf_glyph_outline_t	typeref:typename:u32_t
polygon69	build/web.html	/^   id="polygon69" \/><g$/;"	I	language:HTML
pos	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t pos;$/;"	m	language:C++	struct:gfx_command_rect_t	typeref:typename:v2f_t
pos	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t pos;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:v2f_t
pos	D:/work/git/moom/code/momo_arena.h	/^	umi_t pos;$/;"	m	language:C++	struct:arena_t	typeref:typename:umi_t
pos	D:/work/git/moom/code/momo_streams.h	/^  umi_t pos;$/;"	m	language:C++	struct:stream_t	typeref:typename:umi_t
pos	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t pos, vel;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:v2f_t
pos	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t pos;$/;"	m	language:C++	struct:lit_player_t	typeref:typename:v2f_t
pos	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t pos;$/;"	m	language:C++	struct:lit_sensor_t	typeref:typename:v2f_t
pos	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t pos;  $/;"	m	language:C++	struct:lit_light_t	typeref:typename:v2f_t
positive_float	build/test_json.json	/^  "positive_float": 123.321,$/;"	n	language:JSON
postRun	build/a.out.js	/^function postRun() {$/;"	f	language:JavaScript
pos_x	D:/work/git/moom/code/moe_gfx.h	/^  f32_t pos_x, pos_y;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
pos_y	D:/work/git/moom/code/moe_gfx.h	/^  f32_t pos_x, pos_y;$/;"	m	language:C++	struct:gfx_command_view_t	typeref:typename:f32_t
pow_f32	D:/work/git/moom/code/momo_intrinsics.h	/^pow_f32(f32_t b, f32_t e){$/;"	f	language:C++	typeref:typename:f32_t
pow_F32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t pow_F32(f32_t v, f32_t e);$/;"	p	language:C++	typeref:typename:f32_t
pow_f64	D:/work/git/moom/code/momo_intrinsics.h	/^pow_f64(f64_t b, f64_t e){$/;"	f	language:C++	typeref:typename:f64_t
pow_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t pow_f64(f64_t , f64_t e);$/;"	p	language:C++	typeref:typename:f64_t
preMain	build/a.out.js	/^function preMain() {$/;"	f	language:JavaScript
preRun	build/a.out.js	/^function preRun() {$/;"	f	language:JavaScript
prev	D:/work/git/moom/code/gist_linked_list.cpp	/^  gist_cdl_node* prev;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:gist_cdl_node *	file:
prev	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^  gist cdl_node* prev;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:gist cdl_node *	file:
prev	D:/work/git/moom/code/w32_moe.h	/^  w32_memory_block_t* prev;$/;"	m	language:C++	struct:w32_memory_block_t	typeref:typename:w32_memory_block_t *
printChar	build/a.out.js	/^  function printChar(stream, curr) {$/;"	f	language:JavaScript
printCharBuffers	build/a.out.js	/^  var printCharBuffers = [null,[],[]];$/;"	v	language:JavaScript
profiler	D:/work/git/moom/code/moe_platform.h	/^  profiler_t* profiler; $/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:profiler_t *
profiler	D:/work/git/moom/code/w32_moe.h	/^profiler_t* profiler = &_profiler;$/;"	v	language:C++	typeref:typename:profiler_t *
profiler_accumulate_stat	D:/work/git/moom/code/moe_profiler_rendering.h	/^profiler_accumulate_stat(profiler_stat_t* stat, f64_t value) {$/;"	f	language:C++	typeref:typename:void
profiler_begin_block	D:/work/git/moom/code/moe_profiler.h	/^#define profiler_begin_block(/;"	d	language:C++
profiler_begin_stat	D:/work/git/moom/code/moe_profiler_rendering.h	/^profiler_begin_stat(profiler_stat_t* stat) {$/;"	f	language:C++	typeref:typename:void
profiler_block	D:/work/git/moom/code/moe_profiler.h	/^#define profiler_block(/;"	d	language:C++
Profiler_Codegen	D:/work/git/moom/code/meta.cpp	/^struct Profiler_Codegen {$/;"	s	language:C++	file:
profiler_end_block	D:/work/git/moom/code/moe_profiler.h	/^#define profiler_end_block(/;"	d	language:C++
profiler_end_stat	D:/work/git/moom/code/moe_profiler_rendering.h	/^profiler_end_stat(profiler_stat_t* stat) {$/;"	f	language:C++	typeref:typename:void
profiler_entry_t	D:/work/git/moom/code/moe_profiler.h	/^typedef struct profiler_entry_t {$/;"	s	language:C++
profiler_entry_t	D:/work/git/moom/code/moe_profiler.h	/^} profiler_entry_t;$/;"	t	language:C++	typeref:struct:profiler_entry_t
profiler_get_performance_counter_t	D:/work/git/moom/code/moe_profiler.h	/^typedef u64_t profiler_get_performance_counter_t(void);$/;"	t	language:C++	typeref:typename:u64_t ()(void)
profiler_init	D:/work/git/moom/code/moe_profiler.h	/^profiler_init(profiler_t* p, profiler_get_performance_counter_t get_performance_counter_fp) {$/;"	f	language:C++	typeref:typename:void
profiler_init	D:/work/git/moom/code/moe_profiler.h	/^static void profiler_init(profiler_t* p, profiler_get_performance_counter_t get_performance_coun/;"	p	language:C++	typeref:typename:void
PROFILER_MAX_ENTRIES	D:/work/git/moom/code/moe_profiler.h	/^#define PROFILER_MAX_ENTRIES /;"	d	language:C++
PROFILER_MAX_SNAPSHOTS	D:/work/git/moom/code/moe_profiler.h	/^#define PROFILER_MAX_SNAPSHOTS /;"	d	language:C++
profiler_reset	D:/work/git/moom/code/moe_profiler.h	/^profiler_reset(profiler_t* p) {$/;"	f	language:C++	typeref:typename:void
profiler_reset	D:/work/git/moom/code/moe_profiler.h	/^static void profiler_reset(profiler_t* p);$/;"	p	language:C++	typeref:typename:void
profiler_snapshot_t	D:/work/git/moom/code/moe_profiler.h	/^typedef struct profiler_snapshot_t {$/;"	s	language:C++
profiler_snapshot_t	D:/work/git/moom/code/moe_profiler.h	/^} profiler_snapshot_t;$/;"	t	language:C++	typeref:struct:profiler_snapshot_t
profiler_stat_t	D:/work/git/moom/code/moe_profiler_rendering.h	/^struct profiler_stat_t {$/;"	s	language:C++
profiler_t	D:/work/git/moom/code/moe_profiler.h	/^typedef struct profiler_t {$/;"	s	language:C++
profiler_t	D:/work/git/moom/code/moe_profiler.h	/^} profiler_t;$/;"	t	language:C++	typeref:struct:profiler_t
profiler_update_entries	D:/work/git/moom/code/moe_profiler.h	/^profiler_update_entries(profiler_t* p) {$/;"	f	language:C++	typeref:typename:void
profiler_update_entries	D:/work/git/moom/code/moe_profiler.h	/^static void profiler_update_entries(profiler_t* p);$/;"	p	language:C++	typeref:typename:void
progress	build/web.html	/^      <progress value="0" max="100" id="progress" hidden=1><\/progress>$/;"	I	language:HTML
Project MOOM	README.md	/^# Project MOOM $/;"	c	language:Markdown
PROXYFS	build/a.out.js	/^var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';$/;"	v	language:JavaScript
pt	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t pt;$/;"	m	language:C++	struct:lit_light_intersection_t	typeref:typename:v2f_t
ptr_to_int	D:/work/git/moom/code/momo_types.h	/^ptr_to_int(void* p) { $/;"	f	language:C++	typeref:typename:umi_t
quicksort	D:/work/git/moom/code/momo_sort.h	/^quicksort(sort_entry_t* entries, u32_t entry_count) {$/;"	f	language:C++	typeref:typename:void
quit_	build/a.out.js	/^var quit_ = (status, toThrow) => {$/;"	v	language:JavaScript
r	D:/work/git/moom/code/momo_colors.h	/^    struct { f32_t r, g, b; };  $/;"	m	language:C++	struct:rgba_t::__anon7258a5bb010a::__anon7258a5bb0208	typeref:typename:f32_t
r	D:/work/git/moom/code/momo_colors.h	/^  f32_t r, g, b;   $/;"	m	language:C++	struct:rgb_t	typeref:typename:f32_t
rad_to_deg_f32	D:/work/git/moom/code/momo_types.h	/^rad_to_deg_f32(f32_t radians) {$/;"	f	language:C++	typeref:typename:f32_t
rad_to_deg_f64	D:/work/git/moom/code/momo_types.h	/^rad_to_deg_f64(f64_t radians) {$/;"	f	language:C++	typeref:typename:f64_t
raster_font_height	D:/work/git/moom/code/sui_atlas.h	/^  f32_t raster_font_height;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:f32_t
rbg_to_hsl	D:/work/git/moom/code/momo_colors.h	/^rbg_to_hsl(rgb_t c) {$/;"	f	language:C++	typeref:typename:hsl_t
rbg_to_hsl	D:/work/git/moom/code/momo_colors.h	/^static hsl_t  rbg_to_hsl(rgb_t c);$/;"	p	language:C++	typeref:typename:hsl_t
readAsync	build/a.out.js	/^    readAsync,$/;"	v	language:JavaScript
readAsync	build/a.out.js	/^  readAsync = function readAsync(f, onload, onerror) {$/;"	f	language:JavaScript
readBinary	build/a.out.js	/^    readBinary,$/;"	v	language:JavaScript
readBinary	build/a.out.js	/^  readBinary = function readBinary(f) {$/;"	f	language:JavaScript
read_	build/a.out.js	/^    read_ = function shell_read(f) {$/;"	f	language:JavaScript
read_	build/a.out.js	/^var read_,$/;"	v	language:JavaScript
read_file	D:/work/git/moom/code/moe_platform.h	/^  platform_read_file_f* read_file;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_read_file_f *
rear	D:/work/git/moom/code/gist_ring_buffer.cpp	/^  u32_t rear;$/;"	m	language:C++	struct:gist_rb	typeref:typename:u32_t	file:
receiveInstance	build/a.out.js	/^  function receiveInstance(instance, module) {$/;"	f	language:JavaScript	function:createWasm
receiveInstantiationResult	build/a.out.js	/^  function receiveInstantiationResult(result) {$/;"	f	language:JavaScript	function:createWasm
rect	D:/work/git/moom/code/sui_atlas.h	/^  rp_rect_t* rect;$/;"	m	language:C++	struct:sui_atlas_sprite_t	typeref:typename:rp_rect_t *
Rect2	D:/work/git/moom/code/momo_bonk.h	/^struct Rect2 {$/;"	s	language:C++
rect_context	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_context_t* rect_context;$/;"	m	language:C++	struct:sui_atlas_sprite_t	typeref:typename:sui_atlas_context_t *
rect_count	D:/work/git/moom/code/sui_atlas.h	/^  u32_t rect_count;$/;"	m	language:C++	struct:sui_atlas_font_t	typeref:typename:u32_t
ref	D:/work/git/moom/code/w32_audio_wasapi.h	/^  LONG ref;$/;"	m	language:C++	struct:w32_wasapi_notif_client_t	typeref:typename:LONG
region_x0	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t region_x0; $/;"	m	language:C++	struct:Opengl	typeref:typename:u32_t
region_x1	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t region_x1;$/;"	m	language:C++	struct:Opengl	typeref:typename:u32_t
region_y0	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t region_y0; $/;"	m	language:C++	struct:Opengl	typeref:typename:u32_t
region_y1	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t region_y1;$/;"	m	language:C++	struct:Opengl	typeref:typename:u32_t
registerDevice	build/a.out.js	/^  registerDevice: function() { FS.error() },$/;"	m	language:JavaScript	class:FS
reloaded	D:/work/git/moom/code/moe_platform.h	/^  b32_t reloaded;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:b32_t
remainders	D:/work/git/moom/code/momo_crc.h	/^  u16_t remainders[256];$/;"	m	language:C++	struct:crc16_table_t	typeref:typename:u16_t[256]
remainders	D:/work/git/moom/code/momo_crc.h	/^  u32_t remainders[256];$/;"	m	language:C++	struct:crc32_table_t	typeref:typename:u32_t[256]
remainders	D:/work/git/moom/code/momo_crc.h	/^  u8_t remainders[256];$/;"	m	language:C++	struct:crc8_table_t	typeref:typename:u8_t[256]
removeRunDependency	build/a.out.js	/^function removeRunDependency(id) {$/;"	f	language:JavaScript
renderer_texture_handle	D:/work/git/moom/code/moe_assets.h	/^  u32_t renderer_texture_handle;$/;"	m	language:C++	struct:asset_bitmap_t	typeref:typename:u32_t
render_wh	D:/work/git/moom/code/moe_gfx_opengl.h	/^  v2u_t render_wh;$/;"	m	language:C++	struct:Opengl	typeref:typename:v2u_t
resize	build/web.html	/^  <span><input type="checkbox" id="resize">Resize canvas<\/span>$/;"	I	language:HTML
ret	build/a.out.js	/^        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];$/;"	v	language:JavaScript	class:SYSCALLS
ret	build/a.out.js	/^        var ret = UTF8ToString(ptr);$/;"	v	language:JavaScript	class:SYSCALLS
ret	build/a.out.js	/^    ret = new Uint8Array(ret);$/;"	v	language:JavaScript
ret	build/a.out.js	/^  var ret = read_(filename, true);$/;"	v	language:JavaScript
rgb	D:/work/git/moom/code/momo_colors.h	/^    rgb_t rgb;$/;"	m	language:C++	union:rgba_t::__anon7258a5bb010a	typeref:typename:rgb_t
rgba_hex	D:/work/git/moom/code/momo_colors.h	/^rgba_hex(u32_t hex) {$/;"	f	language:C++	typeref:typename:rgba_t
rgba_hex	D:/work/git/moom/code/momo_colors.h	/^static rgba_t rgba_hex(u32_t hex);  $/;"	p	language:C++	typeref:typename:rgba_t
rgba_set	D:/work/git/moom/code/momo_colors.h	/^rgba_set(f32_t r, f32_t g, f32_t b, f32_t a){$/;"	f	language:C++	typeref:typename:rgba_t
rgba_set	D:/work/git/moom/code/momo_colors.h	/^static rgba_t rgba_set(f32_t r, f32_t g, f32_t b, f32_t a);$/;"	p	language:C++	typeref:typename:rgba_t
rgba_t	D:/work/git/moom/code/momo_colors.h	/^typedef struct rgba_t {$/;"	s	language:C++
rgba_t	D:/work/git/moom/code/momo_colors.h	/^} rgba_t;$/;"	t	language:C++	typeref:struct:rgba_t
RGBA_WHITE	D:/work/git/moom/code/momo_colors.h	/^#define RGBA_WHITE /;"	d	language:C++
rgb_t	D:/work/git/moom/code/momo_colors.h	/^typedef struct rgb_t {$/;"	s	language:C++
rgb_t	D:/work/git/moom/code/momo_colors.h	/^} rgb_t;$/;"	t	language:C++	typeref:struct:rgb_t
riff_chunk	D:/work/git/moom/code/momo_wav.h	/^  wav_riff_chunk_t riff_chunk;$/;"	m	language:C++	struct:wav_t	typeref:typename:wav_riff_chunk_t
right	D:/work/git/moom/code/momo_json.h	/^  struct _json_object_node_t* right;$/;"	m	language:C++	struct:_json_object_node_t	typeref:struct:_json_object_node_t *
rng	D:/work/git/moom/code/scene_lit.h	/^  rng_t rng;$/;"	m	language:C++	struct:lit_t	typeref:typename:rng_t
rng_bilateral	D:/work/git/moom/code/momo_rng.h	/^rng_bilateral(rng_t* r)$/;"	f	language:C++	typeref:typename:f32_t
rng_choice	D:/work/git/moom/code/momo_rng.h	/^rng_choice(rng_t* r, u32_t choice_count) {$/;"	f	language:C++	typeref:typename:u32_t
rng_init	D:/work/git/moom/code/momo_rng.h	/^rng_init(rng_t* r, u32_t seed)$/;"	f	language:C++	typeref:typename:void
rng_next	D:/work/git/moom/code/momo_rng.h	/^rng_next(rng_t* r)$/;"	f	language:C++	typeref:typename:u32_t
rng_range_F32	D:/work/git/moom/code/momo_rng.h	/^rng_range_F32(rng_t* r, f32_t min, f32_t max)$/;"	f	language:C++	typeref:typename:f32_t
rng_range_S32	D:/work/git/moom/code/momo_rng.h	/^rng_range_S32(rng_t* r, s32_t min, s32_t max)$/;"	f	language:C++	typeref:typename:s32_t
rng_range_U32	D:/work/git/moom/code/momo_rng.h	/^rng_range_U32(rng_t* r, u32_t min, u32_t max)$/;"	f	language:C++	typeref:typename:u32_t
rng_t	D:/work/git/moom/code/momo_rng.h	/^struct rng_t {$/;"	s	language:C++
rng_unilateral	D:/work/git/moom/code/momo_rng.h	/^rng_unilateral(rng_t* r)$/;"	f	language:C++	typeref:typename:f32_t
rng_unit_circle	D:/work/git/moom/code/momo_rng.h	/^rng_unit_circle(rng_t* r) {$/;"	f	language:C++	typeref:typename:v2f_t
rot	D:/work/git/moom/code/moe_gfx.h	/^  f32_t rot;$/;"	m	language:C++	struct:gfx_command_rect_t	typeref:typename:f32_t
round_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t round_f32(f32_t value) {$/;"	f	language:C++	typeref:typename:f32_t
round_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t round_f32(f32_t value);$/;"	p	language:C++	typeref:typename:f32_t
round_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t round_f64(f64_t value) {$/;"	f	language:C++	typeref:typename:f64_t
round_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t round_f64(f64_t value);$/;"	p	language:C++	typeref:typename:f64_t
rp_pack	D:/work/git/moom/code/momo_rect_pack.h	/^rp_pack(rp_rect_t* rects, $/;"	f	language:C++	typeref:typename:b32_t
rp_pack	D:/work/git/moom/code/momo_rect_pack.h	/^rp_pack(rp_rect_t* rects, $/;"	p	language:C++	typeref:typename:b32_t
rp_rect_t	D:/work/git/moom/code/momo_rect_pack.h	/^struct rp_rect_t{$/;"	s	language:C++
RP_SORT_TYPE_AREA	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_AREA,$/;"	e	language:C++	enum:rp_sort_type_t
RP_SORT_TYPE_BIGGER_SIDE	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_BIGGER_SIDE,$/;"	e	language:C++	enum:rp_sort_type_t
RP_SORT_TYPE_HEIGHT	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_HEIGHT,$/;"	e	language:C++	enum:rp_sort_type_t
RP_SORT_TYPE_PATHOLOGICAL	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_PATHOLOGICAL,$/;"	e	language:C++	enum:rp_sort_type_t
RP_SORT_TYPE_PERIMETER	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_PERIMETER,$/;"	e	language:C++	enum:rp_sort_type_t
rp_sort_type_t	D:/work/git/moom/code/momo_rect_pack.h	/^enum rp_sort_type_t{$/;"	g	language:C++
RP_SORT_TYPE_WIDTH	D:/work/git/moom/code/momo_rect_pack.h	/^  RP_SORT_TYPE_WIDTH,$/;"	e	language:C++	enum:rp_sort_type_t
run	build/a.out.js	/^function run(args) {$/;"	f	language:JavaScript
runCaller	build/a.out.js	/^dependenciesFulfilled = function runCaller() {$/;"	f	language:JavaScript
runDependencies	build/a.out.js	/^var runDependencies = 0;$/;"	v	language:JavaScript
runDependencyTracking	build/a.out.js	/^var runDependencyTracking = {};$/;"	v	language:JavaScript
runDependencyWatcher	build/a.out.js	/^var runDependencyWatcher = null;$/;"	v	language:JavaScript
runtimeInitialized	build/a.out.js	/^var runtimeInitialized = false;$/;"	v	language:JavaScript
s	D:/work/git/moom/code/momo_colors.h	/^  f32_t h, s, l;  $/;"	m	language:C++	struct:hsl_t	typeref:typename:f32_t
S16_MAX	D:/work/git/moom/code/momo_types.h	/^#define S16_MAX /;"	d	language:C++
S16_MIN	D:/work/git/moom/code/momo_types.h	/^#define S16_MIN /;"	d	language:C++
s16_t	D:/work/git/moom/code/momo_types.h	/^typedef int16_t  s16_t;$/;"	t	language:C++	typeref:typename:int16_t
S32_MAX	D:/work/git/moom/code/momo_types.h	/^#define S32_MAX /;"	d	language:C++
S32_MIN	D:/work/git/moom/code/momo_types.h	/^#define S32_MIN /;"	d	language:C++
s32_t	D:/work/git/moom/code/momo_json.h	/^    s32_t s32_t;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:s32_t
s32_t	D:/work/git/moom/code/momo_types.h	/^typedef int32_t  s32_t;$/;"	t	language:C++	typeref:typename:int32_t
S64_MAX	D:/work/git/moom/code/momo_types.h	/^#define S64_MAX /;"	d	language:C++
S64_MIN	D:/work/git/moom/code/momo_types.h	/^#define S64_MIN /;"	d	language:C++
s64_t	D:/work/git/moom/code/momo_types.h	/^typedef int64_t  s64_t;$/;"	t	language:C++	typeref:typename:int64_t
S8_MAX	D:/work/git/moom/code/momo_types.h	/^#define S8_MAX /;"	d	language:C++
S8_MIN	D:/work/git/moom/code/momo_types.h	/^#define S8_MIN /;"	d	language:C++
s8_t	D:/work/git/moom/code/momo_types.h	/^typedef int8_t   s8_t;$/;"	t	language:C++	typeref:typename:int8_t
samples_per_second	D:/work/git/moom/code/w32_audio_wasapi.h	/^  u32_t samples_per_second;$/;"	m	language:C++	struct:w32_wasapi_t	typeref:typename:u32_t
sample_buffer	D:/work/git/moom/code/moe_platform.h	/^  s16_t* sample_buffer;$/;"	m	language:C++	struct:__anona41ebd570508	typeref:typename:s16_t *
sample_count	D:/work/git/moom/code/moe_platform.h	/^  u32_t sample_count;$/;"	m	language:C++	struct:__anona41ebd570508	typeref:typename:u32_t
sample_rate	D:/work/git/moom/code/momo_wav.h	/^  u32_t sample_rate;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u32_t
sandbox_tick	D:/work/git/moom/code/scene_sandbox.h	/^sandbox_tick(moe_t* moe) $/;"	f	language:C++	typeref:typename:void
sb8_clear	D:/work/git/moom/code/momo_strings.h	/^sb8_clear(sb8_t* b) {$/;"	f	language:C++	typeref:typename:void
sb8_clear	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_clear(sb8_t* b);$/;"	p	language:C++	typeref:typename:void
sb8_init	D:/work/git/moom/code/momo_strings.h	/^sb8_init(sb8_t* b, u8_t* data, umi_t cap) {$/;"	f	language:C++	typeref:typename:void
sb8_init	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_init(sb8_t* b, u8_t* data, umi_t cap);$/;"	p	language:C++	typeref:typename:void
sb8_make	D:/work/git/moom/code/momo_strings.h	/^#define sb8_make(/;"	d	language:C++
sb8_pop	D:/work/git/moom/code/momo_strings.h	/^sb8_pop(sb8_t* b) {$/;"	f	language:C++	typeref:typename:void
sb8_pop	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_pop(sb8_t* b);$/;"	p	language:C++	typeref:typename:void
sb8_push_c8	D:/work/git/moom/code/momo_strings.h	/^sb8_push_c8(sb8_t* b, c8_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_c8	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_c8(sb8_t* b, c8_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_f32	D:/work/git/moom/code/momo_strings.h	/^sb8_push_f32(sb8_t* b, f32_t value, u32_t precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_f32	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_f32(sb8_t* b, f32_t value, u32_t precision);$/;"	p	language:C++	typeref:typename:void
sb8_push_f64	D:/work/git/moom/code/momo_strings.h	/^sb8_push_f64(sb8_t* b, f64_t value, u32_t precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_fmt	D:/work/git/moom/code/momo_strings.h	/^sb8_push_fmt(sb8_t* b, str8_t fmt, ...) {$/;"	f	language:C++	typeref:typename:void
sb8_push_fmt	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_fmt(sb8_t* b, str8_t fmt, ...);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u32	D:/work/git/moom/code/momo_strings.h	/^sb8_push_hex_u32(sb8_t* b, u32_t value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u32	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_hex_u32(sb8_t* b, u32_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u8	D:/work/git/moom/code/momo_strings.h	/^sb8_push_hex_u8(sb8_t* b, u8_t value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u8	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_hex_u8(sb8_t* b, u8_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s32	D:/work/git/moom/code/momo_strings.h	/^sb8_push_s32(sb8_t* b, s32_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s32	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_s32(sb8_t* b, s32_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s64	D:/work/git/moom/code/momo_strings.h	/^sb8_push_s64(sb8_t* b, s64_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s64	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_s64(sb8_t* b, s64_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_str8	D:/work/git/moom/code/momo_strings.h	/^sb8_push_str8(sb8_t* b, str8_t src) {$/;"	f	language:C++	typeref:typename:void
sb8_push_str8	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_str8(sb8_t* b, str8_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u32	D:/work/git/moom/code/momo_strings.h	/^sb8_push_u32(sb8_t* b, u32_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u32	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_u32(sb8_t* b, u32_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u64	D:/work/git/moom/code/momo_strings.h	/^sb8_push_u64(sb8_t* b, u64_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u64	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_u64(sb8_t* b, u64_t num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u8	D:/work/git/moom/code/momo_strings.h	/^sb8_push_u8(sb8_t* b, u8_t num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u8	D:/work/git/moom/code/momo_strings.h	/^static void     sb8_push_u8(sb8_t* b, u8_t num);$/;"	p	language:C++	typeref:typename:void
sb8_remaining	D:/work/git/moom/code/momo_strings.h	/^sb8_remaining(sb8_t* b) {$/;"	f	language:C++	typeref:typename:umi_t
sb8_remaining	D:/work/git/moom/code/momo_strings.h	/^static umi_t    sb8_remaining(sb8_t* b);$/;"	p	language:C++	typeref:typename:umi_t
sb8_t	D:/work/git/moom/code/momo_strings.h	/^struct sb8_t{$/;"	s	language:C++
scene_arena	D:/work/git/moom/code/moe.h	/^  arena_t scene_arena;$/;"	m	language:C++	struct:moe_t	typeref:typename:arena_t
scene_context	D:/work/git/moom/code/moe.h	/^  void* scene_context;$/;"	m	language:C++	struct:moe_t	typeref:typename:void *
game_exit_f	D:/work/git/moom/code/moe.h	/^typedef void (*game_exit_f)(struct moe_t*);$/;"	t	language:C++	typeref:typename:void (*)(struct moe_t *)
SCENE_H	D:/work/git/moom/code/scene.h	/^#define SCENE_H$/;"	d	language:C++
game_init_f	D:/work/git/moom/code/moe.h	/^typedef void (*game_init_f)(struct moe_t*);$/;"	t	language:C++	typeref:typename:void (*)(struct moe_t *)
game_tick_f	D:/work/git/moom/code/moe.h	/^typedef void (*game_tick_f)(struct moe_t*);$/;"	t	language:C++	typeref:typename:void (*)(struct moe_t *)
scope	D:/work/git/moom/code/momo_json.h	/^static u32_t scope = 0;$/;"	v	language:C++	typeref:typename:u32_t
scriptDirectory	build/a.out.js	/^var scriptDirectory = '';$/;"	v	language:JavaScript
seconds_since_last_frame	D:/work/git/moom/code/moe_platform.h	/^  f32_t seconds_since_last_frame; \/\/aka dt$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:f32_t
seed	D:/work/git/moom/code/momo_rng.h	/^  u32_t seed;$/;"	m	language:C++	struct:rng_t	typeref:typename:u32_t
selected_id	code/scene_computer.h	/^  u32_t selected_id;$/;"	m	language:C++	struct:Computer	typeref:typename:u32_t
selection_list	code/scene_computer.h	/^  Computer_Selection_List selection_list;$/;"	m	language:C++	struct:Computer	typeref:typename:Computer_Selection_List
semaphore	D:/work/git/moom/code/w32_moe.h	/^  HANDLE semaphore; $/;"	m	language:C++	struct:w32_work_queue_t	typeref:typename:HANDLE
sensors	D:/work/git/moom/code/scene_lit.h	/^  lit_sensor_t sensors[32];$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_sensor_t[32]
sensors_activated	D:/work/git/moom/code/scene_lit.h	/^  u32_t sensors_activated;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
sensor_count	D:/work/git/moom/code/scene_lit.h	/^  u32_t sensor_count;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
setValue	build/a.out.js	/^  function setValue(ptr, value, type = 'i8') {$/;"	f	language:JavaScript
setWindowTitle	build/a.out.js	/^    setWindowTitle;$/;"	v	language:JavaScript
set_match_entry	D:/work/git/moom/code/moe_assets.cpp	/^set_match_entry(asset_match_t* vec, $/;"	f	language:C++	typeref:typename:void	file:
set_moe_dims	D:/work/git/moom/code/moe_platform.h	/^  platform_set_moe_dims_f* set_moe_dims;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_set_moe_dims_f *
shader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon99efc5fb0808	typeref:typename:GLuint
shader	D:/work/git/moom/code/moe_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon99efc5fb0908	typeref:typename:GLuint
shell_read	build/a.out.js	/^    read_ = function shell_read(f) {$/;"	f	language:JavaScript
shouldRunNow	build/a.out.js	/^var shouldRunNow = true;$/;"	v	language:JavaScript
show_debug_type	D:/work/git/moom/code/moe.h	/^  moe_show_debug_type_t show_debug_type;$/;"	m	language:C++	struct:moe_t	typeref:typename:moe_show_debug_type_t
signature	D:/work/git/moom/code/karu.h	/^  u32_t signature;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
signature	D:/work/git/moom/code/momo_png.h	/^  u8_t signature[8];$/;"	m	language:C++	struct:_png_chunk_t	typeref:typename:u8_t[8]
signed_item3	build/test_json.json	/^    "signed_item3":-123$/;"	n	language:JSON	object:next_obj
sin_f32	D:/work/git/moom/code/momo_intrinsics.h	/^sin_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
sin_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t sin_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
sin_f64	D:/work/git/moom/code/momo_intrinsics.h	/^sin_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
sin_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t sin_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
size	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t size;$/;"	m	language:C++	struct:gfx_command_rect_t	typeref:typename:v2f_t
size	D:/work/git/moom/code/moe_gfx.h	/^  v2f_t size;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:v2f_t
size	D:/work/git/moom/code/moe_platform.h	/^  umi_t size;$/;"	m	language:C++	struct:__anona41ebd570108	typeref:typename:umi_t
size	D:/work/git/moom/code/momo_streams.h	/^  umi_t size;$/;"	m	language:C++	struct:stream_t	typeref:typename:umi_t
size	D:/work/git/moom/code/momo_wav.h	/^  u32_t size;$/;"	m	language:C++	struct:wav_data_chunk_t	typeref:typename:u32_t
size	D:/work/git/moom/code/momo_wav.h	/^  u32_t size;$/;"	m	language:C++	struct:wav_fmt_chunk_t	typeref:typename:u32_t
size	D:/work/git/moom/code/momo_wav.h	/^  u32_t size;$/;"	m	language:C++	struct:wav_riff_chunk_t	typeref:typename:u32_t
size_end	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t size_start, size_end;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:v2f_t
size_start	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t size_start, size_end;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:v2f_t
sll_append	D:/work/git/moom/code/momo_ds.h	/^#define sll_append(/;"	d	language:C++
sll_prepend	D:/work/git/moom/code/momo_ds.h	/^#define sll_prepend(/;"	d	language:C++
smi_t	D:/work/git/moom/code/momo_types.h	/^typedef intptr_t  smi_t; \/\/ aka 'signed memory index'$/;"	t	language:C++	typeref:typename:intptr_t
snapshots	D:/work/git/moom/code/moe_profiler.h	/^  profiler_snapshot_t snapshots[PROFILER_MAX_SNAPSHOTS];$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:profiler_snapshot_t[]
snapshot_index	D:/work/git/moom/code/moe_profiler.h	/^  u32_t snapshot_index;$/;"	m	language:C++	struct:profiler_t	typeref:typename:u32_t
sort_entry_t	D:/work/git/moom/code/momo_sort.h	/^struct sort_entry_t {$/;"	s	language:C++
sources	D:/work/git/moom/code/sui_pack.h	/^  sui_packer_source_t sources[1024]; \/\/ additional data for assets$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:sui_packer_source_t[1024]
spinner	build/web.html	/^    <div class="spinner" id='spinner'><\/div>$/;"	I	language:HTML
Splash	D:/work/git/moom/code/scene_splash.h	/^struct Splash {$/;"	s	language:C++
splash_tick	D:/work/git/moom/code/scene_splash.cpp	/^splash_tick(moe_t* moe)$/;"	f	language:C++	typeref:typename:void	file:
splash_tick	D:/work/git/moom/code/scene_splash.h	/^static void splash_tick(moe_t* moe);$/;"	p	language:C++	typeref:typename:void
sprite	D:/work/git/moom/code/karu.h	/^    karu_sprite_t sprite;$/;"	m	language:C++	union:karu_asset_t::__anon06005905010a	typeref:typename:karu_sprite_t
sprite	D:/work/git/moom/code/moe_assets.h	/^    asset_sprite_t sprite;$/;"	m	language:C++	union:asset_slot_t::__anonef445425020a	typeref:typename:asset_sprite_t
sprite	D:/work/git/moom/code/sui_atlas.h	/^    sui_atlas_sprite_context_t sprite;$/;"	m	language:C++	union:sui_atlas_context_t::__anonfc2bf917010a	typeref:typename:sui_atlas_sprite_context_t
sprite	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_sprite_t* sprite;$/;"	m	language:C++	struct:sui_atlas_sprite_context_t	typeref:typename:sui_atlas_sprite_t *
sprite	D:/work/git/moom/code/sui_pack.h	/^    sui_packer_source_sprite_t sprite; $/;"	m	language:C++	union:sui_packer_source_t::__anon38c8e121010a	typeref:typename:sui_packer_source_sprite_t
sprites	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_sprite_t sprites[128];$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:sui_atlas_sprite_t[128]
sprite_batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^  Sprite_Batch sprite_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Sprite_Batch
Sprite_Batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^} Sprite_Batch;$/;"	t	language:C++	typeref:struct:__anon99efc5fb0808
sprite_count	D:/work/git/moom/code/sui_atlas.h	/^  u32_t sprite_count;$/;"	m	language:C++	struct:sui_atlas_t	typeref:typename:u32_t
sprite_id	D:/work/git/moom/code/scene_lit_entity.h	/^  asset_sprite_id_t sprite_id;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:asset_sprite_id_t
sqrt_f32	D:/work/git/moom/code/momo_intrinsics.h	/^sqrt_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
sqrt_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t sqrt_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
sqrt_f64	D:/work/git/moom/code/momo_intrinsics.h	/^sqrt_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
sqrt_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t sqrt_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
src	D:/work/git/moom/code/moe_gfx.h	/^  gfx_blend_type_t src;$/;"	m	language:C++	struct:gfx_command_blend_t	typeref:typename:gfx_blend_type_t
stackCheckInit	build/a.out.js	/^function stackCheckInit() {$/;"	f	language:JavaScript
STACK_ALIGN	build/a.out.js	/^var STACK_ALIGN = 16;$/;"	v	language:JavaScript
stage_fade_timer	D:/work/git/moom/code/scene_lit.h	/^  f32_t stage_fade_timer;$/;"	m	language:C++	struct:lit_t	typeref:typename:f32_t
stage_flash_timer	D:/work/git/moom/code/scene_lit.h	/^  f32_t stage_flash_timer;$/;"	m	language:C++	struct:lit_t	typeref:typename:f32_t
start_cycles	D:/work/git/moom/code/moe_profiler.h	/^  u32_t start_cycles;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:u32_t
start_hits	D:/work/git/moom/code/moe_profiler.h	/^  u32_t start_hits;$/;"	m	language:C++	struct:profiler_entry_t	typeref:typename:u32_t
start_pt	D:/work/git/moom/code/scene_lit_world.h	/^  v2f_t start_pt;$/;"	m	language:C++	struct:lit_edge_t	typeref:typename:v2f_t
state	D:/work/git/moom/code/meta.cpp	/^  u32_t state; \/\/ $/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:u32_t	file:
state	D:/work/git/moom/code/moe_assets.h	/^  asset_state_t state;$/;"	m	language:C++	struct:asset_slot_t	typeref:typename:asset_state_t
state	D:/work/git/moom/code/moe_gfx.h	/^  volatile gfx_texture_payload_state_t state;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:volatile gfx_texture_payload_state_t
state	D:/work/git/moom/code/scene_lit.h	/^  lit_state_type_t state;$/;"	m	language:C++	struct:lit_t	typeref:typename:lit_state_type_t
status	build/web.html	/^    <div class="emscripten" id="status">Downloading...<\/div>$/;"	I	language:HTML
stmt	D:/work/git/moom/code/momo_types.h	/^#define stmt(/;"	d	language:C++
stop101	build/web.html	/^   id="stop101" \/><stop$/;"	I	language:HTML
stop103	build/web.html	/^   id="stop103" \/><stop$/;"	I	language:HTML
stop105	build/web.html	/^   id="stop105" \/><stop$/;"	I	language:HTML
stop107	build/web.html	/^   id="stop107" \/><stop$/;"	I	language:HTML
stop109	build/web.html	/^   id="stop109" \/><stop$/;"	I	language:HTML
stop111	build/web.html	/^   id="stop111" \/><stop$/;"	I	language:HTML
stop113	build/web.html	/^   id="stop113" \/><stop$/;"	I	language:HTML
stop115	build/web.html	/^   id="stop115" \/><stop$/;"	I	language:HTML
stop117	build/web.html	/^   id="stop117" \/><a:midPointStop$/;"	I	language:HTML
stop130	build/web.html	/^   id="stop130" \/><stop$/;"	I	language:HTML
stop132	build/web.html	/^   id="stop132" \/><stop$/;"	I	language:HTML
stop134	build/web.html	/^   id="stop134" \/><a:midPointStop$/;"	I	language:HTML
stop145	build/web.html	/^   id="stop145" \/><stop$/;"	I	language:HTML
stop147	build/web.html	/^   id="stop147" \/><stop$/;"	I	language:HTML
stop149	build/web.html	/^   id="stop149" \/><a:midPointStop$/;"	I	language:HTML
stop160	build/web.html	/^   id="stop160" \/><stop$/;"	I	language:HTML
stop162	build/web.html	/^   id="stop162" \/><stop$/;"	I	language:HTML
stop164	build/web.html	/^   id="stop164" \/><a:midPointStop$/;"	I	language:HTML
stop175	build/web.html	/^   id="stop175" \/><stop$/;"	I	language:HTML
stop177	build/web.html	/^   id="stop177" \/><stop$/;"	I	language:HTML
stop179	build/web.html	/^   id="stop179" \/><a:midPointStop$/;"	I	language:HTML
stop190	build/web.html	/^   id="stop190" \/><stop$/;"	I	language:HTML
stop192	build/web.html	/^   id="stop192" \/><stop$/;"	I	language:HTML
stop194	build/web.html	/^   id="stop194" \/><a:midPointStop$/;"	I	language:HTML
stop205	build/web.html	/^   id="stop205" \/><stop$/;"	I	language:HTML
stop207	build/web.html	/^   id="stop207" \/><stop$/;"	I	language:HTML
stop209	build/web.html	/^   id="stop209" \/><a:midPointStop$/;"	I	language:HTML
stop220	build/web.html	/^   id="stop220" \/><stop$/;"	I	language:HTML
stop222	build/web.html	/^   id="stop222" \/><stop$/;"	I	language:HTML
stop224	build/web.html	/^   id="stop224" \/><a:midPointStop$/;"	I	language:HTML
stop235	build/web.html	/^   id="stop235" \/><stop$/;"	I	language:HTML
stop237	build/web.html	/^   id="stop237" \/><stop$/;"	I	language:HTML
stop239	build/web.html	/^   id="stop239" \/><a:midPointStop$/;"	I	language:HTML
stop272	build/web.html	/^   id="stop272" \/><stop$/;"	I	language:HTML
stop274	build/web.html	/^   id="stop274" \/><a:midPointStop$/;"	I	language:HTML
stop279	build/web.html	/^   id="stop279" \/><stop$/;"	I	language:HTML
stop281	build/web.html	/^   id="stop281" \/><a:midPointStop$/;"	I	language:HTML
stop286	build/web.html	/^   id="stop286" \/><stop$/;"	I	language:HTML
stop288	build/web.html	/^   id="stop288" \/><a:midPointStop$/;"	I	language:HTML
stop293	build/web.html	/^   id="stop293" \/><stop$/;"	I	language:HTML
stop295	build/web.html	/^   id="stop295" \/><a:midPointStop$/;"	I	language:HTML
stop300	build/web.html	/^   id="stop300" \/><stop$/;"	I	language:HTML
stop302	build/web.html	/^   id="stop302" \/><a:midPointStop$/;"	I	language:HTML
stop307	build/web.html	/^   id="stop307" \/><stop$/;"	I	language:HTML
stop309	build/web.html	/^   id="stop309" \/><a:midPointStop$/;"	I	language:HTML
stop314	build/web.html	/^   id="stop314" \/><stop$/;"	I	language:HTML
stop316	build/web.html	/^   id="stop316" \/><a:midPointStop$/;"	I	language:HTML
stop321	build/web.html	/^   id="stop321" \/><stop$/;"	I	language:HTML
stop323	build/web.html	/^   id="stop323" \/><a:midPointStop$/;"	I	language:HTML
stop328	build/web.html	/^   id="stop328" \/><stop$/;"	I	language:HTML
stop330	build/web.html	/^   id="stop330" \/><a:midPointStop$/;"	I	language:HTML
stop335	build/web.html	/^   id="stop335" \/><stop$/;"	I	language:HTML
stop337	build/web.html	/^   id="stop337" \/><a:midPointStop$/;"	I	language:HTML
stop38	build/web.html	/^   id="stop38" \/><stop$/;"	I	language:HTML
stop40	build/web.html	/^   id="stop40" \/><stop$/;"	I	language:HTML
stop4169	build/web.html	/^   id="stop4169"$/;"	I	language:HTML
stop4171	build/web.html	/^   id="stop4171"$/;"	I	language:HTML
stop4177	build/web.html	/^   id="stop4177"$/;"	I	language:HTML
stop4179	build/web.html	/^   id="stop4179"$/;"	I	language:HTML
stop4185	build/web.html	/^   id="stop4185"$/;"	I	language:HTML
stop4187	build/web.html	/^   id="stop4187"$/;"	I	language:HTML
stop4193	build/web.html	/^   id="stop4193"$/;"	I	language:HTML
stop4195	build/web.html	/^   id="stop4195"$/;"	I	language:HTML
stop42	build/web.html	/^   id="stop42" \/><stop$/;"	I	language:HTML
stop4201	build/web.html	/^   id="stop4201"$/;"	I	language:HTML
stop4203	build/web.html	/^   id="stop4203"$/;"	I	language:HTML
stop4209	build/web.html	/^   id="stop4209"$/;"	I	language:HTML
stop4211	build/web.html	/^   id="stop4211"$/;"	I	language:HTML
stop4217	build/web.html	/^   id="stop4217"$/;"	I	language:HTML
stop4219	build/web.html	/^   id="stop4219"$/;"	I	language:HTML
stop4225	build/web.html	/^   id="stop4225"$/;"	I	language:HTML
stop4227	build/web.html	/^   id="stop4227"$/;"	I	language:HTML
stop4233	build/web.html	/^   id="stop4233"$/;"	I	language:HTML
stop4235	build/web.html	/^   id="stop4235"$/;"	I	language:HTML
stop4241	build/web.html	/^   id="stop4241"$/;"	I	language:HTML
stop4243	build/web.html	/^   id="stop4243"$/;"	I	language:HTML
stop44	build/web.html	/^   id="stop44" \/><a:midPointStop$/;"	I	language:HTML
stop5106	build/web.html	/^   id="stop5106"$/;"	I	language:HTML
stop5108	build/web.html	/^   id="stop5108"$/;"	I	language:HTML
stop5110	build/web.html	/^   id="stop5110"$/;"	I	language:HTML
stop5112	build/web.html	/^   id="stop5112"$/;"	I	language:HTML
stop63	build/web.html	/^   id="stop63" \/><stop$/;"	I	language:HTML
stop65	build/web.html	/^   id="stop65" \/><stop$/;"	I	language:HTML
stop67	build/web.html	/^   id="stop67" \/><a:midPointStop$/;"	I	language:HTML
stop82	build/web.html	/^   id="stop82" \/><stop$/;"	I	language:HTML
stop84	build/web.html	/^   id="stop84" \/><stop$/;"	I	language:HTML
stop86	build/web.html	/^   id="stop86" \/><stop$/;"	I	language:HTML
stop88	build/web.html	/^   id="stop88" \/><stop$/;"	I	language:HTML
stop90	build/web.html	/^   id="stop90" \/><a:midPointStop$/;"	I	language:HTML
stop99	build/web.html	/^   id="stop99" \/><stop$/;"	I	language:HTML
str	D:/work/git/moom/code/moe_console.h	/^  str8_t str;$/;"	m	language:C++	struct:console_line_t	typeref:typename:str8_t
str	D:/work/git/moom/code/momo_strings.h	/^		str8_t str;$/;"	m	language:C++	union:sb8_t::__anon620e3633010a	typeref:typename:str8_t
str8	D:/work/git/moom/code/momo_strings.h	/^static str8_t str8(u8_t* str, umi_t size);$/;"	p	language:C++	typeref:typename:str8_t
str8	D:/work/git/moom/code/momo_strings.h	/^str8(u8_t* str, umi_t size) {$/;"	f	language:C++	typeref:typename:str8_t
str8_compare_lexographically	D:/work/git/moom/code/momo_strings.h	/^str8_compare_lexographically(str8_t lhs, str8_t rhs) {$/;"	f	language:C++	typeref:typename:smi_t
str8_from_cstr	D:/work/git/moom/code/momo_strings.h	/^static str8_t str8_from_cstr(const char* cstr);$/;"	p	language:C++	typeref:typename:str8_t
str8_from_cstr	D:/work/git/moom/code/momo_strings.h	/^str8_from_cstr(const c8_t* cstr) {$/;"	f	language:C++	typeref:typename:str8_t
str8_from_lit	D:/work/git/moom/code/momo_strings.h	/^#define str8_from_lit(/;"	d	language:C++
str8_match	D:/work/git/moom/code/momo_strings.h	/^static b32_t str8_match(str8_t lhs, str8_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
str8_match	D:/work/git/moom/code/momo_strings.h	/^str8_match(str8_t lhs, str8_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
str8_range_to	D:/work/git/moom/code/momo_strings.h	/^b32_t str8_range_to(u32_t* out);$/;"	p	language:C++	typeref:typename:b32_t
str8_substr	D:/work/git/moom/code/momo_strings.h	/^static str8_t str8_substr(str8_t str, umi_t start, umi_t ope);$/;"	p	language:C++	typeref:typename:str8_t
str8_substr	D:/work/git/moom/code/momo_strings.h	/^str8_substr(str8_t str, umi_t start, umi_t count) {$/;"	f	language:C++	typeref:typename:str8_t
str8_t	D:/work/git/moom/code/momo_strings.h	/^struct str8_t{$/;"	s	language:C++
str8_to_f32	D:/work/git/moom/code/momo_strings.h	/^str8_to_f32(str8_t s, f32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
str8_to_f32_range	D:/work/git/moom/code/momo_strings.h	/^str8_to_f32_range(str8_t s, umi_t begin, umi_t ope, f32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
str8_to_s32	D:/work/git/moom/code/momo_strings.h	/^str8_to_s32(str8_t s, s32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
str8_to_s32_range	D:/work/git/moom/code/momo_strings.h	/^str8_to_s32_range(str8_t s, umi_t begin, umi_t ope, s32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
str8_to_u32	D:/work/git/moom/code/momo_strings.h	/^b32_t str8_to_u32(u32_t* out);$/;"	p	language:C++	typeref:typename:b32_t
str8_to_u32	D:/work/git/moom/code/momo_strings.h	/^str8_to_u32(str8_t s, u32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
str8_to_u32_range	D:/work/git/moom/code/momo_strings.h	/^str8_to_u32_range(str8_t s, umi_t begin, umi_t ope, u32_t* out) {$/;"	f	language:C++	typeref:typename:b32_t
stream	D:/work/git/moom/code/momo_png.h	/^  stream_t stream;$/;"	m	language:C++	struct:_png_context_t	typeref:typename:stream_t
stream_consume	D:/work/git/moom/code/momo_streams.h	/^#define stream_consume(/;"	d	language:C++
stream_consume_bits	D:/work/git/moom/code/momo_streams.h	/^static u32_t		stream_consume_bits(stream_t* s, u32_t amount);$/;"	p	language:C++	typeref:typename:u32_t
stream_consume_bits	D:/work/git/moom/code/momo_streams.h	/^stream_consume_bits(stream_t* s, u32_t amount){$/;"	f	language:C++	typeref:typename:u32_t
stream_consume_block	D:/work/git/moom/code/momo_streams.h	/^static u8_t*    stream_consume_block(stream_t* s, umi_t amount);$/;"	p	language:C++	typeref:typename:u8_t *
stream_consume_block	D:/work/git/moom/code/momo_streams.h	/^stream_consume_block(stream_t* s, umi_t amount) {$/;"	f	language:C++	typeref:typename:u8_t *
stream_flush_bits	D:/work/git/moom/code/momo_streams.h	/^static void   stream_flush_bits(stream_t* s);$/;"	p	language:C++	typeref:typename:void
stream_flush_bits	D:/work/git/moom/code/momo_streams.h	/^stream_flush_bits(stream_t* s){$/;"	f	language:C++	typeref:typename:void
stream_init	D:/work/git/moom/code/momo_streams.h	/^static void   stream_init(stream_t* s, void* memory, umi_t memory_size);$/;"	p	language:C++	typeref:typename:void
stream_init	D:/work/git/moom/code/momo_streams.h	/^stream_init(stream_t* s, void* memory, umi_t memory_size) {$/;"	f	language:C++	typeref:typename:void
stream_is_eos	D:/work/git/moom/code/momo_streams.h	/^static b32_t    stream_is_eos(stream_t* s);$/;"	p	language:C++	typeref:typename:b32_t
stream_is_eos	D:/work/git/moom/code/momo_streams.h	/^stream_is_eos(stream_t* s) {$/;"	f	language:C++	typeref:typename:b32_t
stream_reset	D:/work/git/moom/code/momo_streams.h	/^static void   stream_reset(stream_t* s);$/;"	p	language:C++	typeref:typename:void
stream_reset	D:/work/git/moom/code/momo_streams.h	/^stream_reset(stream_t* s) {$/;"	f	language:C++	typeref:typename:void
stream_t	D:/work/git/moom/code/momo_streams.h	/^struct stream_t {$/;"	s	language:C++
stream_write	D:/work/git/moom/code/momo_streams.h	/^#define stream_write(/;"	d	language:C++
stream_write_block	D:/work/git/moom/code/momo_streams.h	/^static void   stream_write_block(stream_t* s, void* src, umi_t size);$/;"	p	language:C++	typeref:typename:void
stream_write_block	D:/work/git/moom/code/momo_streams.h	/^stream_write_block(stream_t* s, void* src, umi_t src_size) {$/;"	f	language:C++	typeref:typename:void
string	D:/work/git/moom/code/momo_json.h	/^    str8_t string;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:str8_t
stringify	D:/work/git/moom/code/momo_types.h	/^#define stringify(/;"	d	language:C++
stringify_	D:/work/git/moom/code/momo_types.h	/^#define stringify_(/;"	d	language:C++
stringToUTF8	build/a.out.js	/^function stringToUTF8(str, outPtr, maxBytesToWrite) {$/;"	f	language:JavaScript
stringToUTF8Array	build/a.out.js	/^function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {$/;"	f	language:JavaScript
sui_asset_dir	D:/work/git/moom/code/sui.h	/^#define sui_asset_dir(/;"	d	language:C++
sui_atlas_begin	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_begin(sui_atlas_t* a,$/;"	f	language:C++	typeref:typename:void
sui_atlas_begin_font	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_begin_font(sui_atlas_t* a, const char* font_filename, f32_t font_height) {$/;"	f	language:C++	typeref:typename:void
sui_atlas_bitmap_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_bitmap_t {$/;"	s	language:C++
sui_atlas_context_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_context_t {$/;"	s	language:C++
SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH	D:/work/git/moom/code/sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH,$/;"	e	language:C++	enum:sui_atlas_context_type_t
SUI_ATLAS_CONTEXT_TYPE_SPRITE	D:/work/git/moom/code/sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_SPRITE,$/;"	e	language:C++	enum:sui_atlas_context_type_t
sui_atlas_context_type_t	D:/work/git/moom/code/sui_atlas.h	/^enum sui_atlas_context_type_t {$/;"	g	language:C++
sui_atlas_end	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_end(sui_atlas_t* a, arena_t* arena) {$/;"	f	language:C++	typeref:typename:void
sui_atlas_end_font	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_end_font(sui_atlas_t* a) {$/;"	f	language:C++	typeref:typename:sui_atlas_font_t *
sui_atlas_font_glyph_context_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_font_glyph_context_t {$/;"	s	language:C++
sui_atlas_font_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_font_t {$/;"	s	language:C++
SUI_ATLAS_H	D:/work/git/moom/code/sui_atlas.h	/^#define SUI_ATLAS_H$/;"	d	language:C++
sui_atlas_push_font_codepoint	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_push_font_codepoint(sui_atlas_t* a, u32_t codepoint) {$/;"	f	language:C++	typeref:typename:void
sui_atlas_push_sprite	D:/work/git/moom/code/sui_atlas.h	/^sui_atlas_push_sprite(sui_atlas_t* a, const char* filename) $/;"	f	language:C++	typeref:typename:sui_atlas_sprite_t *
sui_atlas_sprite_context_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_sprite_context_t {$/;"	s	language:C++
sui_atlas_sprite_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_sprite_t {$/;"	s	language:C++
sui_atlas_t	D:/work/git/moom/code/sui_atlas.h	/^struct sui_atlas_t {  $/;"	s	language:C++
sui_code_dir	D:/work/git/moom/code/sui.h	/^#define sui_code_dir(/;"	d	language:C++
sui_create_log_section_until_scope	D:/work/git/moom/code/sui.h	/^#define sui_create_log_section_until_scope /;"	d	language:C++
SUI_H	D:/work/git/moom/code/sui.h	/^#define SUI_H$/;"	d	language:C++
sui_log	D:/work/git/moom/code/sui.h	/^#define sui_log(/;"	d	language:C++
sui_log_paces	D:/work/git/moom/code/sui.h	/^static u32_t sui_log_paces = 0;$/;"	v	language:C++	typeref:typename:u32_t
sui_packer_source_bitmap_t	D:/work/git/moom/code/sui_pack.h	/^struct sui_packer_source_bitmap_t {$/;"	s	language:C++
sui_packer_source_font_t	D:/work/git/moom/code/sui_pack.h	/^struct sui_packer_source_font_t {$/;"	s	language:C++
sui_packer_source_sprite_t	D:/work/git/moom/code/sui_pack.h	/^struct sui_packer_source_sprite_t {$/;"	s	language:C++
sui_packer_source_t	D:/work/git/moom/code/sui_pack.h	/^struct sui_packer_source_t {$/;"	s	language:C++
SUI_PACKER_SOURCE_TYPE_BITMAP	D:/work/git/moom/code/sui_pack.h	/^  SUI_PACKER_SOURCE_TYPE_BITMAP,$/;"	e	language:C++	enum:sui_packer_source_type_t
SUI_PACKER_SOURCE_TYPE_FONT	D:/work/git/moom/code/sui_pack.h	/^  SUI_PACKER_SOURCE_TYPE_FONT,$/;"	e	language:C++	enum:sui_packer_source_type_t
SUI_PACKER_SOURCE_TYPE_SPRITE	D:/work/git/moom/code/sui_pack.h	/^  SUI_PACKER_SOURCE_TYPE_SPRITE,$/;"	e	language:C++	enum:sui_packer_source_type_t
sui_packer_source_type_t	D:/work/git/moom/code/sui_pack.h	/^enum sui_packer_source_type_t {$/;"	g	language:C++
sui_packer_t	D:/work/git/moom/code/sui_pack.h	/^struct sui_packer_t {$/;"	s	language:C++
sui_pack_begin	D:/work/git/moom/code/sui_pack.h	/^sui_pack_begin(sui_packer_t* p) {$/;"	f	language:C++	typeref:typename:void
sui_pack_begin_group	D:/work/git/moom/code/sui_pack.h	/^sui_pack_begin_group(sui_packer_t* p, Asset_Group_Type group) $/;"	f	language:C++	typeref:typename:void
sui_pack_end	D:/work/git/moom/code/sui_pack.h	/^sui_pack_end(sui_packer_t* p, const char* filename, arena_t* arena) $/;"	f	language:C++	typeref:typename:void
sui_pack_end_group	D:/work/git/moom/code/sui_pack.h	/^sui_pack_end_group(sui_packer_t* p) $/;"	f	language:C++	typeref:typename:void
sui_pack_push_bitmap	D:/work/git/moom/code/sui_pack.h	/^sui_pack_push_bitmap(sui_packer_t* p, sui_atlas_t* atlas) {$/;"	f	language:C++	typeref:typename:u32_t
sui_pack_push_font	D:/work/git/moom/code/sui_pack.h	/^sui_pack_push_font(sui_packer_t* p, sui_atlas_font_t* font, u32_t bitmap_asset_id) {$/;"	f	language:C++	typeref:typename:u32_t
sui_pack_push_sprite	D:/work/git/moom/code/sui_pack.h	/^sui_pack_push_sprite(sui_packer_t* p, sui_atlas_sprite_t* sprite, u32_t bitmap_asset_id) {$/;"	f	language:C++	typeref:typename:void
sui_pack_push_tag	D:/work/git/moom/code/sui_pack.h	/^sui_pack_push_tag(sui_packer_t* p, Asset_Tag_Type tag_type, f32_t value) {$/;"	f	language:C++	typeref:typename:void
sui_read_file	D:/work/git/moom/code/sui.h	/^sui_read_file(const char* filename, umi_t* out_size, arena_t* allocator) {$/;"	f	language:C++	typeref:typename:void *
sui_read_font_from_file	D:/work/git/moom/code/sui.h	/^sui_read_font_from_file(ttf_t* ttf, const char* filename, arena_t* allocator) {$/;"	f	language:C++	typeref:typename:b32_t
sui_read_wav_from_file	D:/work/git/moom/code/sui.h	/^sui_read_wav_from_file(wav_t* wav, const char* filename, arena_t* allocator) {$/;"	f	language:C++	typeref:typename:b32_t
sui_write_file	D:/work/git/moom/code/sui.h	/^sui_write_file(const char* filename, void* memory, umi_t memory_size) {$/;"	f	language:C++	typeref:typename:b32_t
SVGID_10_	build/web.html	/^   id="SVGID_10_"$/;"	I	language:HTML
SVGID_11_	build/web.html	/^   id="SVGID_11_"$/;"	I	language:HTML
SVGID_12_	build/web.html	/^   id="SVGID_12_"$/;"	I	language:HTML
SVGID_13_	build/web.html	/^   id="SVGID_13_"$/;"	I	language:HTML
SVGID_14_	build/web.html	/^   id="SVGID_14_"$/;"	I	language:HTML
SVGID_15_	build/web.html	/^   id="SVGID_15_"$/;"	I	language:HTML
SVGID_16_	build/web.html	/^   id="SVGID_16_"$/;"	I	language:HTML
SVGID_17_	build/web.html	/^   id="SVGID_17_"$/;"	I	language:HTML
SVGID_18_	build/web.html	/^   id="SVGID_18_"$/;"	I	language:HTML
SVGID_19_	build/web.html	/^   id="SVGID_19_"$/;"	I	language:HTML
SVGID_1_	build/web.html	/^   id="SVGID_1_"><g$/;"	I	language:HTML
SVGID_20_	build/web.html	/^   id="SVGID_20_"$/;"	I	language:HTML
SVGID_21_	build/web.html	/^   id="SVGID_21_"$/;"	I	language:HTML
SVGID_22_	build/web.html	/^   id="SVGID_22_"$/;"	I	language:HTML
SVGID_23_	build/web.html	/^   id="SVGID_23_"$/;"	I	language:HTML
SVGID_24_	build/web.html	/^   id="SVGID_24_"$/;"	I	language:HTML
SVGID_2_	build/web.html	/^   id="SVGID_2_"$/;"	I	language:HTML
SVGID_3_	build/web.html	/^   id="SVGID_3_"><g$/;"	I	language:HTML
SVGID_4_	build/web.html	/^   id="SVGID_4_"$/;"	I	language:HTML
SVGID_5_	build/web.html	/^   id="SVGID_5_"$/;"	I	language:HTML
SVGID_6_	build/web.html	/^   id="SVGID_6_"$/;"	I	language:HTML
SVGID_7_	build/web.html	/^   id="SVGID_7_"$/;"	I	language:HTML
SVGID_8_	build/web.html	/^   id="SVGID_8_"$/;"	I	language:HTML
SVGID_9_	build/web.html	/^   id="SVGID_9_"$/;"	I	language:HTML
swap	D:/work/git/moom/code/momo_types.h	/^#define swap(/;"	d	language:C++
swap_memory	D:/work/git/moom/code/momo_types.h	/^swap_memory(void* lhs, void* rhs, umi_t size) {$/;"	f	language:C++	typeref:typename:void
symbols	D:/work/git/moom/code/momo_png.h	/^  u16_t* symbols; $/;"	m	language:C++	struct:_png_huffman_t	typeref:typename:u16_t *
symbol_count	D:/work/git/moom/code/momo_png.h	/^  u32_t symbol_count;$/;"	m	language:C++	struct:_png_huffman_t	typeref:typename:u32_t
SYSCALLS	build/a.out.js	/^  var SYSCALLS = {varargs:undefined,get:function() {$/;"	c	language:JavaScript
tags	D:/work/git/moom/code/moe_assets.h	/^  asset_tag_t* tags;$/;"	m	language:C++	struct:assets_t	typeref:typename:asset_tag_t *
tags	D:/work/git/moom/code/sui_pack.h	/^  karu_tag_t tags[1024]; \/\/ to be written to file$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:karu_tag_t[1024]
tag_count	D:/work/git/moom/code/karu.h	/^  u32_t tag_count;$/;"	m	language:C++	struct:karu_header_t	typeref:typename:u32_t
tag_count	D:/work/git/moom/code/moe_assets.h	/^  u32_t tag_count;$/;"	m	language:C++	struct:assets_t	typeref:typename:u32_t
tag_count	D:/work/git/moom/code/sui_pack.h	/^  u32_t tag_count;$/;"	m	language:C++	struct:sui_packer_t	typeref:typename:u32_t
tag_value_to_match	D:/work/git/moom/code/moe_assets.h	/^    f32_t tag_value_to_match;$/;"	m	language:C++	struct:asset_match_t::__anonef4454250108	typeref:typename:f32_t
tag_weight	D:/work/git/moom/code/moe_assets.h	/^    f32_t tag_weight;$/;"	m	language:C++	struct:asset_match_t::__anonef4454250108	typeref:typename:f32_t
tail	D:/work/git/moom/code/momo_json.h	/^  struct _json_array_node_t* tail;$/;"	m	language:C++	struct:json_array_t	typeref:struct:_json_array_node_t *
tan_f32	D:/work/git/moom/code/momo_intrinsics.h	/^static f32_t tan_f32(f32_t x);$/;"	p	language:C++	typeref:typename:f32_t
tan_f32	D:/work/git/moom/code/momo_intrinsics.h	/^tan_f32(f32_t x) {$/;"	f	language:C++	typeref:typename:f32_t
tan_f64	D:/work/git/moom/code/momo_intrinsics.h	/^static f64_t tan_f64(f64_t x);$/;"	p	language:C++	typeref:typename:f64_t
tan_f64	D:/work/git/moom/code/momo_intrinsics.h	/^tan_f64(f64_t x) {$/;"	f	language:C++	typeref:typename:f64_t
target_color	D:/work/git/moom/code/scene_lit_entity.h	/^  u32_t target_color;$/;"	m	language:C++	struct:lit_sensor_t	typeref:typename:u32_t
TAU_32	D:/work/git/moom/code/momo_types.h	/^#define TAU_32 /;"	d	language:C++
TAU_64	D:/work/git/moom/code/momo_types.h	/^#define TAU_64 /;"	d	language:C++
tempDouble	build/a.out.js	/^var tempDouble;$/;"	v	language:JavaScript
tempI64	build/a.out.js	/^var tempI64;$/;"	v	language:JavaScript
test_assets_dir	D:/work/git/moom/code/test.h	/^#define test_assets_dir(/;"	d	language:C++
test_create_log_section_until_scope	D:/work/git/moom/code/test.h	/^#define test_create_log_section_until_scope /;"	d	language:C++
test_essentials	D:/work/git/moom/code/test_essentials.h	/^void test_essentials() { $/;"	f	language:C++	typeref:typename:void
TEST_ESSENTIALS_H	D:/work/git/moom/code/test_essentials.h	/^#define TEST_ESSENTIALS_H$/;"	d	language:C++
test_eval_d	D:/work/git/moom/code/test.h	/^#define test_eval_d(/;"	d	language:C++
test_eval_f	D:/work/git/moom/code/test.h	/^#define test_eval_f(/;"	d	language:C++
test_eval_lld	D:/work/git/moom/code/test.h	/^#define test_eval_lld(/;"	d	language:C++
TEST_H	D:/work/git/moom/code/test.h	/^#define TEST_H$/;"	d	language:C++
test_list	D:/work/git/moom/code/test_list.h	/^test_list() {$/;"	f	language:C++	typeref:typename:void
TEST_LIST_H	D:/work/git/moom/code/test_list.h	/^#define TEST_LIST_H$/;"	d	language:C++
test_log	D:/work/git/moom/code/test.h	/^#define test_log(/;"	d	language:C++
test_log_spaces	D:/work/git/moom/code/test.h	/^static unsigned test_log_spaces = 0;$/;"	v	language:C++	typeref:typename:unsigned
test_png	D:/work/git/moom/code/test_png.h	/^void test_png() {$/;"	f	language:C++	typeref:typename:void
TEST_PNG_H	D:/work/git/moom/code/test_png.h	/^#define TEST_PNG_H$/;"	d	language:C++
test_read_file_to_memory	D:/work/git/moom/code/test.h	/^test_read_file_to_memory(arena_t* allocator, const char* filename) {$/;"	f	language:C++	typeref:typename:Block
test_sort	D:/work/git/moom/code/test_sort.h	/^void test_sort() {$/;"	f	language:C++	typeref:typename:void
TEST_SORT_H	D:/work/git/moom/code/test_sort.h	/^#define TEST_SORT_H$/;"	d	language:C++
test_ttf	D:/work/git/moom/code/test_ttf.h	/^void test_ttf() {$/;"	f	language:C++	typeref:typename:void
TEST_TTF_H	D:/work/git/moom/code/test_ttf.h	/^#define TEST_TTF_H$/;"	d	language:C++
test_unit	D:/work/git/moom/code/test.h	/^#define test_unit(/;"	d	language:C++
test_write_memory_to_file	D:/work/git/moom/code/test.h	/^test_write_memory_to_file(Block block, const char* filename) {$/;"	f	language:C++	typeref:typename:b32_t
texel_x0	D:/work/git/moom/code/karu.h	/^  u32_t texel_x0;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
texel_x0	D:/work/git/moom/code/karu.h	/^  u32_t texel_x0;$/;"	m	language:C++	struct:karu_sprite_t	typeref:typename:u32_t
texel_x0	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x0, texel_y0;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:u32_t
texel_x0	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x0;$/;"	m	language:C++	struct:asset_sprite_t	typeref:typename:u32_t
texel_x0	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texel_x0, texel_y0;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:u32_t
texel_x0	D:/work/git/moom/code/sui_pack.h	/^  u32_t texel_x0;$/;"	m	language:C++	struct:sui_packer_source_sprite_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/karu.h	/^  u32_t texel_x1;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/karu.h	/^  u32_t texel_x1;$/;"	m	language:C++	struct:karu_sprite_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x1, texel_y1;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x1;$/;"	m	language:C++	struct:asset_sprite_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texel_x1, texel_y1;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:u32_t
texel_x1	D:/work/git/moom/code/sui_pack.h	/^  u32_t texel_x1;$/;"	m	language:C++	struct:sui_packer_source_sprite_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/karu.h	/^  u32_t texel_y0;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/karu.h	/^  u32_t texel_y0;$/;"	m	language:C++	struct:karu_sprite_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x0, texel_y0;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_y0;$/;"	m	language:C++	struct:asset_sprite_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texel_x0, texel_y0;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:u32_t
texel_y0	D:/work/git/moom/code/sui_pack.h	/^  u32_t texel_y0;$/;"	m	language:C++	struct:sui_packer_source_sprite_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/karu.h	/^  u32_t texel_y1;$/;"	m	language:C++	struct:karu_font_glyph_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/karu.h	/^  u32_t texel_y1;$/;"	m	language:C++	struct:karu_sprite_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_x1, texel_y1;$/;"	m	language:C++	struct:asset_font_glyph_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/moe_assets.h	/^  u32_t texel_y1;$/;"	m	language:C++	struct:asset_sprite_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texel_x1, texel_y1;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:u32_t
texel_y1	D:/work/git/moom/code/sui_pack.h	/^  u32_t texel_y1;$/;"	m	language:C++	struct:sui_packer_source_sprite_t	typeref:typename:u32_t
text	code/scene_computer.h	/^  str8_t text;$/;"	m	language:C++	struct:Computer_Selection	typeref:typename:str8_t
text	D:/work/git/moom/code/meta.cpp	/^  c8_t* text;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:c8_t *	file:
text	D:/work/git/moom/code/momo_json.h	/^  str8_t text;$/;"	m	language:C++	struct:_json_tokenizer_t	typeref:typename:str8_t
textures	D:/work/git/moom/code/moe_gfx_opengl.h	/^  OGL_Texture textures[GFX_MAX_TEXTURES];$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture[]
texture_data	D:/work/git/moom/code/moe_gfx.h	/^  void* texture_data;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:void *
texture_height	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texture_height;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:u32_t
texture_index	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texture_index;$/;"	m	language:C++	struct:gfx_command_delete_texture_t	typeref:typename:u32_t
texture_index	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texture_index;$/;"	m	language:C++	struct:gfx_command_sprite_t	typeref:typename:u32_t
texture_index	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texture_index;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:u32_t
texture_queue	D:/work/git/moom/code/moe_assets.h	/^  gfx_texture_queue_t* texture_queue;$/;"	m	language:C++	struct:assets_t	typeref:typename:gfx_texture_queue_t *
texture_queue	D:/work/git/moom/code/moe_gfx.h	/^  gfx_texture_queue_t texture_queue;$/;"	m	language:C++	struct:gfx_t	typeref:typename:gfx_texture_queue_t
texture_width	D:/work/git/moom/code/moe_gfx.h	/^  u32_t texture_width;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:u32_t
text_length	D:/work/git/moom/code/meta.cpp	/^  u32_t text_length;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:u32_t	file:
thisProgram	build/a.out.js	/^var thisProgram = '.\/this.program';$/;"	v	language:JavaScript
thousands	D:/work/git/moom/code/momo_types.h	/^#define thousands(/;"	d	language:C++
timer	D:/work/git/moom/code/scene_splash.h	/^  f32_t timer;$/;"	m	language:C++	struct:Splash	typeref:typename:f32_t
title	D:/work/git/moom/code/scene_lit.h	/^  str8_t title;$/;"	m	language:C++	struct:lit_t	typeref:typename:str8_t
title_timer	D:/work/git/moom/code/scene_lit.h	/^  f32_t title_timer;$/;"	m	language:C++	struct:lit_t	typeref:typename:f32_t
title_wp_index	D:/work/git/moom/code/scene_lit.h	/^  u32_t title_wp_index;$/;"	m	language:C++	struct:lit_t	typeref:typename:u32_t
tmp_path	D:/work/git/moom/code/w32_moe.h	/^  const char* tmp_path;$/;"	m	language:C++	struct:w32_loaded_code_t	typeref:typename:const char *
TOTAL_STACK	build/a.out.js	/^var TOTAL_STACK = 5242880;$/;"	v	language:JavaScript
transfer_memory	D:/work/git/moom/code/moe_gfx.h	/^  u8_t* transfer_memory;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:u8_t *
transfer_memory_end	D:/work/git/moom/code/moe_gfx.h	/^  umi_t transfer_memory_end;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:umi_t
transfer_memory_end	D:/work/git/moom/code/moe_gfx.h	/^  umi_t transfer_memory_end;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:umi_t
transfer_memory_size	D:/work/git/moom/code/moe_gfx.h	/^  umi_t transfer_memory_size;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:umi_t
transfer_memory_start	D:/work/git/moom/code/moe_gfx.h	/^  umi_t transfer_memory_start;$/;"	m	language:C++	struct:gfx_texture_payload_t	typeref:typename:umi_t
transfer_memory_start	D:/work/git/moom/code/moe_gfx.h	/^  umi_t transfer_memory_start;$/;"	m	language:C++	struct:gfx_texture_queue_t	typeref:typename:umi_t
triangles	D:/work/git/moom/code/scene_lit_world.h	/^  lit_light_triangle_t triangles[256];$/;"	m	language:C++	struct:lit_light_t	typeref:typename:lit_light_triangle_t[256]
triangle_batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^  Triangle_Batch triangle_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Triangle_Batch
Triangle_Batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^} Triangle_Batch;$/;"	t	language:C++	typeref:struct:__anon99efc5fb0908
triangle_count	D:/work/git/moom/code/scene_lit_world.h	/^  u32_t triangle_count;$/;"	m	language:C++	struct:lit_light_t	typeref:typename:u32_t
ttf_get_glyph_bitmap_box	D:/work/git/moom/code/momo_ttf.h	/^static void ttf_get_glyph_bitmap_box(const ttf_t* ttf, u32_t glyph_index, f32_t scale, s32_t* x0/;"	p	language:C++	typeref:typename:void
ttf_get_glyph_bitmap_box	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_glyph_bitmap_box(const ttf_t* ttf, u32_t glyph_index, f32_t scale, s32_t* x0, s32_t* y0,/;"	f	language:C++	typeref:typename:void
ttf_get_glyph_box	D:/work/git/moom/code/momo_ttf.h	/^static b32_t ttf_get_glyph_box(const ttf_t* ttf, u32_t glyph_index, s32_t* x0, s32_t* y0, s32_t*/;"	p	language:C++	typeref:typename:b32_t
ttf_get_glyph_box	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_glyph_box(const ttf_t* ttf, u32_t glyph_index, s32_t* x0, s32_t* y0, s32_t* x1, s32_t* y/;"	f	language:C++	typeref:typename:b32_t
ttf_get_glyph_horizontal_metrics	D:/work/git/moom/code/momo_ttf.h	/^static void ttf_get_glyph_horizontal_metrics(const ttf_t* ttf, u32_t glyph_index, s16_t* advance/;"	p	language:C++	typeref:typename:void
ttf_get_glyph_horizontal_metrics	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_glyph_horizontal_metrics(const ttf_t* ttf, $/;"	f	language:C++	typeref:typename:void
ttf_get_glyph_index	D:/work/git/moom/code/momo_ttf.h	/^static u32_t ttf_get_glyph_index(const ttf_t* ttf, u32_t codepoint);$/;"	p	language:C++	typeref:typename:u32_t
ttf_get_glyph_index	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_glyph_index(const ttf_t* ttf, u32_t codepoint) {$/;"	f	language:C++	typeref:typename:u32_t
ttf_get_glyph_kerning	D:/work/git/moom/code/momo_ttf.h	/^static s32_t ttf_get_glyph_kerning(const ttf_t* ttf, u32_t glyph_index_1, u32_t glyph_index_2);$/;"	p	language:C++	typeref:typename:s32_t
ttf_get_glyph_kerning	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_glyph_kerning(const ttf_t* ttf, u32_t glyph_index_1, u32_t glyph_index_2) {$/;"	f	language:C++	typeref:typename:s32_t
ttf_get_scale_for_pixel_height	D:/work/git/moom/code/momo_ttf.h	/^static f32_t ttf_get_scale_for_pixel_height(const ttf_t* ttf, f32_t pixel_height);$/;"	p	language:C++	typeref:typename:f32_t
ttf_get_scale_for_pixel_height	D:/work/git/moom/code/momo_ttf.h	/^ttf_get_scale_for_pixel_height(const ttf_t* ttf, f32_t pixel_height) {$/;"	f	language:C++	typeref:typename:f32_t
ttf_log	D:/work/git/moom/code/momo_ttf.h	/^# define ttf_log(/;"	d	language:C++
ttf_rasterize_glyph	D:/work/git/moom/code/momo_ttf.h	/^static u32_t* ttf_rasterize_glyph(const ttf_t* ttf, u32_t glyph_index, f32_t scale, u32_t* out_w/;"	p	language:C++	typeref:typename:u32_t *
ttf_rasterize_glyph	D:/work/git/moom/code/momo_ttf.h	/^ttf_rasterize_glyph(const ttf_t* ttf, u32_t glyph_index, f32_t scale, u32_t* out_w, u32_t* out_h/;"	f	language:C++	typeref:typename:u32_t *
ttf_read	D:/work/git/moom/code/momo_ttf.h	/^static b32_t ttf_read(ttf_t* ttf, void* memory, umi_t memory_size);$/;"	p	language:C++	typeref:typename:b32_t
ttf_read	D:/work/git/moom/code/momo_ttf.h	/^ttf_read(ttf_t* ttf, void* memory, umi_t memory_size) {$/;"	f	language:C++	typeref:typename:b32_t
ttf_t	D:/work/git/moom/code/momo_ttf.h	/^struct ttf_t {$/;"	s	language:C++
tutorial_font	D:/work/git/moom/code/scene_lit.h	/^  asset_font_id_t tutorial_font;$/;"	m	language:C++	struct:lit_t	typeref:typename:asset_font_id_t
type	D:/work/git/moom/code/karu.h	/^  Asset_Tag_Type type; $/;"	m	language:C++	struct:karu_tag_t	typeref:typename:Asset_Tag_Type
type	D:/work/git/moom/code/karu.h	/^  Asset_Type type; $/;"	m	language:C++	struct:karu_asset_t	typeref:typename:Asset_Type
type	D:/work/git/moom/code/meta.cpp	/^  Meta_Token_Type type;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:Meta_Token_Type	file:
type	D:/work/git/moom/code/moe_assets.h	/^  Asset_Tag_Type type; $/;"	m	language:C++	struct:asset_tag_t	typeref:typename:Asset_Tag_Type
type	D:/work/git/moom/code/moe_assets.h	/^  Asset_Type type;$/;"	m	language:C++	struct:asset_slot_t	typeref:typename:Asset_Type
type	D:/work/git/moom/code/moe_inspector.h	/^  inspector_entry_type_t type;$/;"	m	language:C++	struct:__anona16973e90208	typeref:typename:inspector_entry_type_t
type	D:/work/git/moom/code/momo_json.h	/^  _json_token_type_t type;$/;"	m	language:C++	struct:_json_token_t	typeref:typename:_json_token_type_t
type	D:/work/git/moom/code/momo_json.h	/^  _json_value_type_t type;$/;"	m	language:C++	struct:_json_value_t	typeref:typename:_json_value_type_t
type	D:/work/git/moom/code/momo_png.h	/^    u8_t type[4];$/;"	m	language:C++	union:_png_chunk_header_t::__anonbfb7a7ee010a	typeref:typename:u8_t[4]
type	D:/work/git/moom/code/sui_atlas.h	/^  sui_atlas_context_type_t type;$/;"	m	language:C++	struct:sui_atlas_context_t	typeref:typename:sui_atlas_context_type_t
type	D:/work/git/moom/code/sui_pack.h	/^  sui_packer_source_type_t type;$/;"	m	language:C++	struct:sui_packer_source_t	typeref:typename:sui_packer_source_type_t
type_U32	D:/work/git/moom/code/momo_png.h	/^    u32_t type_U32;$/;"	m	language:C++	union:_png_chunk_header_t::__anonbfb7a7ee010a	typeref:typename:u32_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_INFINITY::__anonda9447de010a	typeref:typename:u32_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_NAN::__anonda9447de030a	typeref:typename:u32_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	m	language:C++	union:_F32_NEG_INFINITY::__anonda9447de020a	typeref:typename:u32_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonda9447de070a	typeref:typename:u32_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonda9447de090a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonda9447de0a0a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_INFINITY::__anonda9447de050a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_NAN::__anonda9447de040a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	m	language:C++	union:_F64_NEG_INFINITY::__anonda9447de060a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonda9447de080a	typeref:typename:u64_t
u	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t u, v; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0708	typeref:typename:f32_t
u	D:/work/git/moom/code/test_essentials.h	/^      u16_t u;$/;"	m	language:C++	union:test_essentials::__anon4743520c010a	typeref:typename:u16_t
u	D:/work/git/moom/code/test_essentials.h	/^      u32_t u;$/;"	m	language:C++	union:test_essentials::__anon4743520c020a	typeref:typename:u32_t
U16_MAX	D:/work/git/moom/code/momo_types.h	/^#define U16_MAX /;"	d	language:C++
u16_t	D:/work/git/moom/code/momo_types.h	/^typedef uint16_t u16_t;$/;"	t	language:C++	typeref:typename:uint16_t
U32_MAX	D:/work/git/moom/code/momo_types.h	/^#define U32_MAX /;"	d	language:C++
u32_t	D:/work/git/moom/code/momo_json.h	/^    u32_t u32_t;$/;"	m	language:C++	union:_json_value_t::__anona90d98a3010a	typeref:typename:u32_t
u32_t	D:/work/git/moom/code/momo_types.h	/^typedef uint32_t u32_t;$/;"	t	language:C++	typeref:typename:uint32_t
U64_MAX	D:/work/git/moom/code/momo_types.h	/^#define U64_MAX /;"	d	language:C++
u64_t	D:/work/git/moom/code/momo_types.h	/^typedef uint64_t u64_t;$/;"	t	language:C++	typeref:typename:uint64_t
U8_MAX	D:/work/git/moom/code/momo_types.h	/^#define U8_MAX /;"	d	language:C++
u8_t	D:/work/git/moom/code/momo_types.h	/^typedef uint8_t  u8_t;$/;"	t	language:C++	typeref:typename:uint8_t
umi_t	D:/work/git/moom/code/momo_types.h	/^typedef uintptr_t umi_t; \/\/ aka 'unsigned memory index'$/;"	t	language:C++	typeref:typename:uintptr_t
unexportedRuntimeSymbol	build/a.out.js	/^function unexportedRuntimeSymbol(sym) {$/;"	f	language:JavaScript
unexportedRuntimeSymbols	build/a.out.js	/^var unexportedRuntimeSymbols = [$/;"	v	language:JavaScript
unfiltered_image_stream	D:/work/git/moom/code/momo_png.h	/^  stream_t unfiltered_image_stream; \/\/ for filtering and deflating$/;"	m	language:C++	struct:_png_context_t	typeref:typename:stream_t
units	D:/work/git/moom/code/meta.cpp	/^  u32_t units;$/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:u32_t	file:
updateGlobalBufferAndViews	build/a.out.js	/^function updateGlobalBufferAndViews(buf) {$/;"	f	language:JavaScript
update_and_render	D:/work/git/moom/code/moe_platform.h	/^  moe_update_and_render_f* update_and_render;$/;"	m	language:C++	struct:moe_functions_t	typeref:typename:moe_update_and_render_f *
update_and_render_profiler	D:/work/git/moom/code/moe_profiler_rendering.h	/^update_and_render_profiler(moe_t* moe) $/;"	f	language:C++	typeref:typename:void
user_data	D:/work/git/moom/code/moe_gfx_opengl.h	/^  void* user_data;$/;"	m	language:C++	struct:Opengl	typeref:typename:void *
user_data	D:/work/git/moom/code/momo_rect_pack.h	/^  void* user_data;$/;"	m	language:C++	struct:rp_rect_t	typeref:typename:void *
UTF8ArrayToString	build/a.out.js	/^function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {$/;"	f	language:JavaScript
UTF8Decoder	build/a.out.js	/^var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;$/;"	v	language:JavaScript
UTF8ToString	build/a.out.js	/^function UTF8ToString(ptr, maxBytesToRead) {$/;"	f	language:JavaScript
v	D:/work/git/moom/code/momo_strings.h	/^  union { u32_t v; u8_t b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon620e3633030a	typeref:typename:u32_t
v	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t u, v; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0708	typeref:typename:f32_t
v2f_add	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_add(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_add	D:/work/git/moom/code/momo_vectors.h	/^v2f_add(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_angle	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_angle(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v2f_angle	D:/work/git/moom/code/momo_vectors.h	/^v2f_angle(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_cross	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_cross(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v2f_cross	D:/work/git/moom/code/momo_vectors.h	/^v2f_cross(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_dist	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_dist(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v2f_dist	D:/work/git/moom/code/momo_vectors.h	/^v2f_dist(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_dist_sq	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_dist_sq(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v2f_dist_sq	D:/work/git/moom/code/momo_vectors.h	/^v2f_dist_sq(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_div	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_div(v2f_t lhs, f32_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_div	D:/work/git/moom/code/momo_vectors.h	/^v2f_div(v2f_t lhs, f32_t rhs) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_dot	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_dot(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v2f_dot	D:/work/git/moom/code/momo_vectors.h	/^v2f_dot(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_inv	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t		 v2f_inv(v2f_t v);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_inv	D:/work/git/moom/code/momo_vectors.h	/^v2f_inv(v2f_t v) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_is_close	D:/work/git/moom/code/momo_vectors.h	/^static b32_t   v2f_is_close(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
v2f_is_close	D:/work/git/moom/code/momo_vectors.h	/^v2f_is_close(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
v2f_len	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_len(v2f_t v);$/;"	p	language:C++	typeref:typename:f32_t
v2f_len	D:/work/git/moom/code/momo_vectors.h	/^v2f_len(v2f_t v) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_len_sq	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v2f_len_sq(v2f_t v);$/;"	p	language:C++	typeref:typename:f32_t
v2f_len_sq	D:/work/git/moom/code/momo_vectors.h	/^v2f_len_sq(v2f_t v) {$/;"	f	language:C++	typeref:typename:f32_t
v2f_mid	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_mid(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_mid	D:/work/git/moom/code/momo_vectors.h	/^v2f_mid(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_negate	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_negate(v2f_t v);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_negate	D:/work/git/moom/code/momo_vectors.h	/^v2f_negate(v2f_t v) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_norm	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_norm(v2f_t v);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_norm	D:/work/git/moom/code/momo_vectors.h	/^v2f_norm(v2f_t v) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_proj	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_proj(v2f_t v, v2f_t onto);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_proj	D:/work/git/moom/code/momo_vectors.h	/^v2f_proj(v2f_t v, v2f_t onto) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_ratio	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t		 v2f_ratio(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_rotate	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_rotate(v2f_t v, f32_t rad);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_rotate	D:/work/git/moom/code/momo_vectors.h	/^v2f_rotate(v2f_t v, f32_t rad) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_scale	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_scale(v2f_t lhs, f32_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_scale	D:/work/git/moom/code/momo_vectors.h	/^v2f_scale(v2f_t lhs, f32_t rhs) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_set	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_set(f32_t x, f32_t y); $/;"	p	language:C++	typeref:typename:v2f_t
v2f_set	D:/work/git/moom/code/momo_vectors.h	/^v2f_set(f32_t x, f32_t y){$/;"	f	language:C++	typeref:typename:v2f_t
v2f_sub	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_sub(v2f_t lhs, v2f_t rhs);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_sub	D:/work/git/moom/code/momo_vectors.h	/^v2f_sub(v2f_t lhs, v2f_t rhs) {$/;"	f	language:C++	typeref:typename:v2f_t
v2f_t	D:/work/git/moom/code/momo_vectors.h	/^union v2f_t {$/;"	u	language:C++
v2f_zero	D:/work/git/moom/code/momo_vectors.h	/^static v2f_t    v2f_zero(void);$/;"	p	language:C++	typeref:typename:v2f_t
v2f_zero	D:/work/git/moom/code/momo_vectors.h	/^v2f_zero(void) {$/;"	f	language:C++	typeref:typename:v2f_t
v2s_t	D:/work/git/moom/code/momo_vectors.h	/^union v2s_t {$/;"	u	language:C++
v2u_add	D:/work/git/moom/code/momo_vectors.h	/^static v2u_t   v2u_add(v2u_t lhs, v2u_t rhs);$/;"	p	language:C++	typeref:typename:v2u_t
v2u_add	D:/work/git/moom/code/momo_vectors.h	/^v2u_add(v2u_t lhs, v2u_t rhs) {$/;"	f	language:C++	typeref:typename:v2u_t
v2u_sub	D:/work/git/moom/code/momo_vectors.h	/^static v2u_t   v2u_sub(v2u_t lhs, v2u_t rhs);$/;"	p	language:C++	typeref:typename:v2u_t
v2u_sub	D:/work/git/moom/code/momo_vectors.h	/^v2u_sub(v2u_t lhs, v2u_t rhs){$/;"	f	language:C++	typeref:typename:v2u_t
v2u_t	D:/work/git/moom/code/momo_vectors.h	/^union v2u_t {$/;"	u	language:C++
v3f_add	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_add(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_add	D:/work/git/moom/code/momo_vectors.h	/^v3f_add(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_angle	D:/work/git/moom/code/momo_vectors.h	/^static f32_t 	 v3f_angle(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v3f_angle	D:/work/git/moom/code/momo_vectors.h	/^v3f_angle(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_cross	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_cross(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_cross	D:/work/git/moom/code/momo_vectors.h	/^v3f_cross(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_dist	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v3f_dist(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v3f_dist	D:/work/git/moom/code/momo_vectors.h	/^v3f_dist(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_dist_sq	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v3f_dist_sq(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v3f_dist_sq	D:/work/git/moom/code/momo_vectors.h	/^v3f_dist_sq(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_div	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_div(v3f_t lhs, f32_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_div	D:/work/git/moom/code/momo_vectors.h	/^v3f_div(v3f_t lhs, f32_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_dot	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v3f_dot(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:f32_t
v3f_dot	D:/work/git/moom/code/momo_vectors.h	/^v3f_dot(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_is_close	D:/work/git/moom/code/momo_vectors.h	/^static b32_t   v3f_is_close(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:b32_t
v3f_is_close	D:/work/git/moom/code/momo_vectors.h	/^v3f_is_close(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:b32_t
v3f_len	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v3f_len(v3f_t v);$/;"	p	language:C++	typeref:typename:f32_t
v3f_len	D:/work/git/moom/code/momo_vectors.h	/^v3f_len(v3f_t v) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_len_sq	D:/work/git/moom/code/momo_vectors.h	/^static f32_t   v3f_len_sq(v3f_t v);$/;"	p	language:C++	typeref:typename:f32_t
v3f_len_sq	D:/work/git/moom/code/momo_vectors.h	/^v3f_len_sq(v3f_t v) {$/;"	f	language:C++	typeref:typename:f32_t
v3f_mid	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_mid(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_mid	D:/work/git/moom/code/momo_vectors.h	/^v3f_mid(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_negate	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_negate(v3f_t v);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_negate	D:/work/git/moom/code/momo_vectors.h	/^v3f_negate(v3f_t v) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_norm	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_norm(v3f_t v);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_norm	D:/work/git/moom/code/momo_vectors.h	/^v3f_norm(v3f_t v) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_proj	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_proj(v3f_t v, v3f_t onto);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_project	D:/work/git/moom/code/momo_vectors.h	/^v3f_project(v3f_t v, v3f_t onto) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_scale	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_scale(v3f_t lhs, f32_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_scale	D:/work/git/moom/code/momo_vectors.h	/^v3f_scale(v3f_t lhs, f32_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_sub	D:/work/git/moom/code/momo_vectors.h	/^static v3f_t    v3f_sub(v3f_t lhs, v3f_t rhs);$/;"	p	language:C++	typeref:typename:v3f_t
v3f_sub	D:/work/git/moom/code/momo_vectors.h	/^v3f_sub(v3f_t lhs, v3f_t rhs) {$/;"	f	language:C++	typeref:typename:v3f_t
v3f_t	D:/work/git/moom/code/momo_vectors.h	/^union v3f_t {$/;"	u	language:C++
v4f_t	D:/work/git/moom/code/momo_vectors.h	/^union v4f_t {$/;"	u	language:C++
value	D:/work/git/moom/code/gist_linked_list.cpp	/^  int value;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:int	file:
value	D:/work/git/moom/code/gist_singly_linked_list.cpp	/^  int value;$/;"	m	language:C++	struct:gist_cdl_node	typeref:typename:int	file:
value	D:/work/git/moom/code/karu.h	/^  f32_t value;$/;"	m	language:C++	struct:karu_tag_t	typeref:typename:f32_t
value	D:/work/git/moom/code/moe_assets.h	/^  f32_t value;$/;"	m	language:C++	struct:asset_tag_t	typeref:typename:f32_t
value	D:/work/git/moom/code/moe_assets.h	/^struct asset_bitmap_id_t { u32_t value; };$/;"	m	language:C++	struct:asset_bitmap_id_t	typeref:typename:u32_t
value	D:/work/git/moom/code/moe_assets.h	/^struct asset_font_id_t { u32_t value; };$/;"	m	language:C++	struct:asset_font_id_t	typeref:typename:u32_t
value	D:/work/git/moom/code/moe_assets.h	/^struct asset_sprite_id_t { u32_t value; };$/;"	m	language:C++	struct:asset_sprite_id_t	typeref:typename:u32_t
value	D:/work/git/moom/code/momo_json.h	/^  _json_value_t value;$/;"	m	language:C++	struct:_json_array_node_t	typeref:typename:_json_value_t
value	D:/work/git/moom/code/momo_json.h	/^  _json_value_t value;$/;"	m	language:C++	struct:_json_object_node_t	typeref:typename:_json_value_t
values	D:/work/git/moom/code/gist_ring_buffer.cpp	/^  int values[4];$/;"	m	language:C++	struct:gist_rb	typeref:typename:int[4]	file:
varargs	build/a.out.js	/^  var SYSCALLS = {varargs:undefined,get:function() {$/;"	p	language:JavaScript	class:SYSCALLS
vel	D:/work/git/moom/code/scene_lit_entity.h	/^  v2f_t pos, vel;$/;"	m	language:C++	struct:lit_particle_t	typeref:typename:v2f_t
vertex_count	D:/work/git/moom/code/momo_ttf.h	/^  u32_t vertex_count;$/;"	m	language:C++	struct:_ttf_glyph_paths_t	typeref:typename:u32_t
vertices	D:/work/git/moom/code/momo_ttf.h	/^  v2f_t* vertices;$/;"	m	language:C++	struct:_ttf_glyph_paths_t	typeref:typename:v2f_t *
w	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:rp_rect_t	typeref:typename:u32_t
w	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:_RP_Node	typeref:typename:u32_t
w	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h, d; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0908	typeref:typename:f32_t
w	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0608	typeref:typename:f32_t
w	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z, w; };$/;"	m	language:C++	struct:v4f_t::__anon7ebf604f0a08	typeref:typename:f32_t
w	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t w, h; };$/;"	m	language:C++	struct:v2s_t::__anon7ebf604f0408	typeref:typename:s32_t
w	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t w, h; };$/;"	m	language:C++	struct:v2u_t::__anon7ebf604f0208	typeref:typename:u32_t
w32_add_task	D:/work/git/moom/code/w32_moe.cpp	/^w32_add_task(platform_task_callback_f callback, void* data) {$/;"	f	language:C++	typeref:typename:void	file:
w32_add_task_entry	D:/work/git/moom/code/w32_moe.h	/^w32_add_task_entry(w32_work_queue_t* wq, void (*callback)(void* ctx), void *data) {$/;"	f	language:C++	typeref:typename:void
w32_allocate_memory	D:/work/git/moom/code/w32_moe.h	/^w32_allocate_memory(umi_t size)$/;"	f	language:C++	typeref:typename:platform_memory_block_t *
w32_allocate_memory_into_arena	D:/work/git/moom/code/w32_moe.cpp	/^w32_allocate_memory_into_arena(arena_t* a, umi_t memory_size) {$/;"	f	language:C++	typeref:typename:b32_t	file:
w32_audio_begin_frame	D:/work/git/moom/code/w32_audio.h	/^w32_audio_begin_frame(platform_audio_t* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_begin_frame	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_audio_begin_frame(platform_audio_t* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_end_frame	D:/work/git/moom/code/w32_audio.h	/^w32_audio_end_frame(platform_audio_t* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_end_frame	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_audio_end_frame(platform_audio_t* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_load	D:/work/git/moom/code/w32_audio.h	/^w32_audio_load(u32_t samples_per_second, $/;"	p	language:C++	typeref:typename:platform_audio_t *
w32_audio_load	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_audio_load(u32_t samples_per_second, $/;"	f	language:C++	typeref:typename:platform_audio_t *
w32_audio_unload	D:/work/git/moom/code/w32_audio.h	/^w32_audio_unload(platform_audio_t* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_unload	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_audio_unload(platform_audio_t* audio) {$/;"	f	language:C++	typeref:typename:void
w32_calc_render_region	D:/work/git/moom/code/w32_moe.h	/^w32_calc_render_region(u32_t window_w, $/;"	f	language:C++	typeref:typename:RECT
w32_close_file	D:/work/git/moom/code/w32_moe.cpp	/^w32_close_file(platform_file_t* file) {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks	D:/work/git/moom/code/w32_moe.cpp	/^w32_complete_all_tasks() {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks_entries	D:/work/git/moom/code/w32_moe.h	/^w32_complete_all_tasks_entries(w32_work_queue_t* wq) {$/;"	f	language:C++	typeref:typename:void
w32_do_next_work_entry	D:/work/git/moom/code/w32_moe.h	/^w32_do_next_work_entry(w32_work_queue_t* wq) {$/;"	f	language:C++	typeref:typename:b32_t
w32_file_cabinet_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_file_cabinet_t {$/;"	s	language:C++
w32_file_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_file_t {$/;"	s	language:C++
w32_file_time_to_large_integer	D:/work/git/moom/code/w32_moe.h	/^w32_file_time_to_large_integer(FILETIME file_time) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_free_all_memory	D:/work/git/moom/code/w32_moe.h	/^w32_free_all_memory() {$/;"	f	language:C++	typeref:typename:void
w32_free_memory	D:/work/git/moom/code/w32_moe.h	/^w32_free_memory(platform_memory_block_t* platform_block) {$/;"	f	language:C++	typeref:typename:void
w32_free_memory_from_arena	D:/work/git/moom/code/w32_moe.cpp	/^w32_free_memory_from_arena(arena_t* a) {$/;"	f	language:C++	typeref:typename:void	file:
w32_get_client_dims	D:/work/git/moom/code/w32_moe.h	/^w32_get_client_dims(HWND window) {$/;"	f	language:C++	typeref:typename:v2u_t
w32_get_file_last_write_time	D:/work/git/moom/code/w32_moe.h	/^w32_get_file_last_write_time(const char* filename) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_next_free_file	D:/work/git/moom/code/w32_moe.h	/^w32_get_next_free_file(w32_file_cabinet_t* c) {$/;"	f	language:C++	typeref:typename:w32_file_t *
w32_get_performance_counter	D:/work/git/moom/code/w32_moe.h	/^w32_get_performance_counter(void) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_performance_counter_u64	D:/work/git/moom/code/w32_moe.h	/^w32_get_performance_counter_u64(void) {$/;"	f	language:C++	typeref:typename:u64_t
w32_get_secs_elapsed	D:/work/git/moom/code/w32_moe.h	/^w32_get_secs_elapsed(LARGE_INTEGER start,$/;"	f	language:C++	typeref:typename:f32_t
w32_get_window_dims	D:/work/git/moom/code/w32_moe.h	/^w32_get_window_dims(HWND window) {$/;"	f	language:C++	typeref:typename:v2u_t
w32_gfx_begin_frame	D:/work/git/moom/code/w32_gfx.h	/^w32_gfx_begin_frame(gfx_t* renderer, $/;"	p	language:C++	typeref:typename:void
w32_gfx_begin_frame	D:/work/git/moom/code/w32_gfx_opengl.h	/^w32_gfx_begin_frame(gfx_t* renderer,  v2u_t render_wh, u32_t region_x0, u32_t region_y0, u32_t r/;"	f	language:C++	typeref:typename:void
w32_gfx_end_frame	D:/work/git/moom/code/w32_gfx.h	/^w32_gfx_end_frame(gfx_t* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_end_frame	D:/work/git/moom/code/w32_gfx_opengl.h	/^w32_gfx_end_frame(gfx_t* renderer) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_load	D:/work/git/moom/code/w32_gfx.h	/^w32_gfx_load(HWND window, $/;"	p	language:C++	typeref:typename:gfx_t *
w32_gfx_load	D:/work/git/moom/code/w32_gfx_opengl.h	/^w32_gfx_load(HWND window, $/;"	f	language:C++	typeref:typename:gfx_t *
w32_gfx_unload	D:/work/git/moom/code/w32_gfx.h	/^w32_gfx_unload(gfx_t* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_unload	D:/work/git/moom/code/w32_gfx_opengl.h	/^w32_gfx_unload(gfx_t* gfx) {$/;"	f	language:C++	typeref:typename:void
w32_init_file_cabinet	D:/work/git/moom/code/w32_moe.h	/^w32_init_file_cabinet(w32_file_cabinet_t* c) {$/;"	f	language:C++	typeref:typename:void
w32_init_work_queue	D:/work/git/moom/code/w32_moe.h	/^w32_init_work_queue(w32_work_queue_t* wq, u32_t thread_count) {$/;"	f	language:C++	typeref:typename:b32_t
w32_loaded_code_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_loaded_code_t {$/;"	s	language:C++
w32_load_code	D:/work/git/moom/code/w32_moe.h	/^w32_load_code(w32_loaded_code_t* code) {$/;"	f	language:C++	typeref:typename:void
w32_log	D:/work/git/moom/code/w32_moe.h	/^#define w32_log(/;"	d	language:C++
w32_log	D:/work/git/moom/code/w32_moe.h	/^#define w32_log(/;"	d	language:C++
w32_log_proc	D:/work/git/moom/code/w32_moe.h	/^w32_log_proc(const char* fmt, ...) {$/;"	f	language:C++	typeref:typename:void
w32_memory_block_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_memory_block_t {$/;"	s	language:C++
w32_open_file	D:/work/git/moom/code/w32_moe.cpp	/^w32_open_file(platform_file_t* file,$/;"	f	language:C++	typeref:typename:b32_t	file:
w32_process_input	D:/work/git/moom/code/w32_moe.cpp	/^w32_process_input(HWND window, platform_t* pf) $/;"	f	language:C++	typeref:typename:void	file:
w32_profiler_block	D:/work/git/moom/code/w32_moe.h	/^#define w32_profiler_block(/;"	d	language:C++
w32_profile_block	D:/work/git/moom/code/w32_moe.h	/^#define w32_profile_block(/;"	d	language:C++
w32_read_file	D:/work/git/moom/code/w32_moe.cpp	/^w32_read_file(platform_file_t* file, umi_t size, umi_t offset, void* dest) $/;"	f	language:C++	typeref:typename:b32_t	file:
w32_rect_height	D:/work/git/moom/code/w32_moe.h	/^static inline LONG w32_rect_height(RECT r) { return r.bottom - r.top; }$/;"	f	language:C++	typeref:typename:LONG
w32_rect_width	D:/work/git/moom/code/w32_moe.h	/^static inline LONG w32_rect_width(RECT r) { return r.right - r.left; }$/;"	f	language:C++	typeref:typename:LONG
w32_reload_code_if_outdated	D:/work/git/moom/code/w32_moe.h	/^w32_reload_code_if_outdated(w32_loaded_code_t* code) {$/;"	f	language:C++	typeref:typename:b32_t
w32_return_file	D:/work/git/moom/code/w32_moe.h	/^w32_return_file(w32_file_cabinet_t* c, w32_file_t* f) {$/;"	f	language:C++	typeref:typename:void
w32_setup_platform_functions	D:/work/git/moom/code/w32_moe.cpp	/^w32_setup_platform_functions(platform_t* pf)$/;"	f	language:C++	typeref:typename:void	file:
w32_set_moe_dims	D:/work/git/moom/code/w32_moe.cpp	/^w32_set_moe_dims(f32_t width, f32_t height) {$/;"	f	language:C++	typeref:typename:void	file:
w32_shutdown	D:/work/git/moom/code/w32_moe.h	/^w32_shutdown() {$/;"	f	language:C++	typeref:typename:void
w32_state	D:/work/git/moom/code/w32_moe.h	/^static w32_state_t w32_state;$/;"	v	language:C++	typeref:typename:w32_state_t
w32_state_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_state_t {$/;"	s	language:C++
w32_unload_code	D:/work/git/moom/code/w32_moe.h	/^w32_unload_code(w32_loaded_code_t* code) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_begin_frame	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_wasapi_begin_frame(w32_wasapi_t* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_end_frame	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_wasapi_end_frame(w32_wasapi_t* wasapi) $/;"	f	language:C++	typeref:typename:void
w32_wasapi_free	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_wasapi_free(w32_wasapi_t* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_init	D:/work/git/moom/code/w32_audio_wasapi.h	/^w32_wasapi_init(w32_wasapi_t* wasapi,$/;"	f	language:C++	typeref:typename:b32_t
w32_wasapi_notif_client_t	D:/work/git/moom/code/w32_audio_wasapi.h	/^struct w32_wasapi_notif_client_t {$/;"	s	language:C++
w32_wasapi_t	D:/work/git/moom/code/w32_audio_wasapi.h	/^struct w32_wasapi_t {$/;"	s	language:C++
w32_window_callback	D:/work/git/moom/code/w32_moe.cpp	/^w32_window_callback(HWND window, $/;"	f	language:C++	typeref:typename:LRESULT CALLBACK
w32_worker_func	D:/work/git/moom/code/w32_moe.h	/^w32_worker_func(LPVOID ctx) {$/;"	f	language:C++	typeref:typename:DWORD WINAPI
w32_work_queue_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_work_queue_t {$/;"	s	language:C++
w32_work_t	D:/work/git/moom/code/w32_moe.h	/^struct w32_work_t {$/;"	s	language:C++
w32_write_file	D:/work/git/moom/code/w32_moe.cpp	/^w32_write_file(platform_file_t* file, umi_t size, umi_t offset, void* src)$/;"	f	language:C++	typeref:typename:b32_t	file:
warnOnce	build/a.out.js	/^  function warnOnce(text) {$/;"	f	language:JavaScript
wasapi	D:/work/git/moom/code/w32_audio_wasapi.h	/^  w32_wasapi_t* wasapi;$/;"	m	language:C++	struct:w32_wasapi_notif_client_t	typeref:typename:w32_wasapi_t *
wasi_snapshot_preview1	build/a.out.js	/^    'wasi_snapshot_preview1': asmLibraryArg,$/;"	p	language:JavaScript	class:createWasm.info
wasmBinary	build/a.out.js	/^var wasmBinary;$/;"	v	language:JavaScript
wasmBinaryFile	build/a.out.js	/^var wasmBinaryFile;$/;"	v	language:JavaScript
wasmMemory	build/a.out.js	/^var wasmMemory;$/;"	v	language:JavaScript
wasmTable	build/a.out.js	/^var wasmTable;$/;"	v	language:JavaScript
wav_data_chunk_t	D:/work/git/moom/code/momo_wav.h	/^struct wav_data_chunk_t {$/;"	s	language:C++
wav_fmt_chunk_t	D:/work/git/moom/code/momo_wav.h	/^struct wav_fmt_chunk_t {$/;"	s	language:C++
wav_read	D:/work/git/moom/code/momo_wav.h	/^static b32_t wav_read(wav_t* wav, void* memory, umi_t size);$/;"	p	language:C++	typeref:typename:b32_t
wav_read	D:/work/git/moom/code/momo_wav.h	/^wav_read(wav_t* w, void* memory, umi_t memory_size) $/;"	f	language:C++	typeref:typename:b32_t
wav_riff_chunk_t	D:/work/git/moom/code/momo_wav.h	/^struct wav_riff_chunk_t {$/;"	s	language:C++
wav_t	D:/work/git/moom/code/momo_wav.h	/^struct wav_t {$/;"	s	language:C++
wglChoosePixelFormatARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^static wglChoosePixelFormatARBFn* wglChoosePixelFormatARB;$/;"	v	language:C++	typeref:typename:wglChoosePixelFormatARBFn *
wglChoosePixelFormatARBFn	D:/work/git/moom/code/w32_gfx_opengl.h	/^wglChoosePixelFormatARBFn(HDC hdc,$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
wglCreateContextAttribsARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^static wglCreateContextAttribsARBFn* wglCreateContextAttribsARB;$/;"	v	language:C++	typeref:typename:wglCreateContextAttribsARBFn *
wglCreateContextAttribsARBFn	D:/work/git/moom/code/w32_gfx_opengl.h	/^wglCreateContextAttribsARBFn(HDC hdc, $/;"	t	language:C++	typeref:typename:HGLRC WINAPI ()(HDC hdc,HGLRC hShareContext,const int * attribList)
wglGetExtensionsStringEXT	D:/work/git/moom/code/w32_gfx_opengl.h	/^static wglGetExtensionsStringEXTFn* wglGetExtensionsStringEXT;$/;"	v	language:C++	typeref:typename:wglGetExtensionsStringEXTFn *
wglGetExtensionsStringEXTFn	D:/work/git/moom/code/w32_gfx_opengl.h	/^wglGetExtensionsStringEXTFn(void);$/;"	t	language:C++	typeref:typename:const char * WINAPI ()(void)
wglSwapIntervalEXT	D:/work/git/moom/code/w32_gfx_opengl.h	/^static wglSwapIntervalEXTFn* wglSwapIntervalEXT;$/;"	v	language:C++	typeref:typename:wglSwapIntervalEXTFn *
wglSwapIntervalEXTFn	D:/work/git/moom/code/w32_gfx_opengl.h	/^wglSwapIntervalEXTFn(int interval);$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(int interval)
WGL_ACCELERATION_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_ACCELERATION_ARB /;"	d	language:C++
WGL_CONTEXT_DEBUG_BIT_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_FLAGS_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d	language:C++
WGL_CONTEXT_FLAG_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAG_ARB /;"	d	language:C++
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_LAYER_PLANE_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d	language:C++
WGL_CONTEXT_MAJOR_VERSION_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_MINOR_VERSION_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_MOMO_PROFILE_BIT_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_MOMO_PROFILE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_PROFILE_MASK_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d	language:C++
WGL_DOUBLE_BUFFER_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d	language:C++
WGL_DRAW_TO_WINDOW_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d	language:C++
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d	language:C++
WGL_FULL_ACCELERATION_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d	language:C++
WGL_PIXEL_TYPE_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d	language:C++
WGL_SetOpenglFunction	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_SetOpenglFunction(/;"	d	language:C++
WGL_SUPPORT_OPENGL_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d	language:C++
WGL_TYPE_RGBA_ARB	D:/work/git/moom/code/w32_gfx_opengl.h	/^#define WGL_TYPE_RGBA_ARB /;"	d	language:C++
width	D:/work/git/moom/code/karu.h	/^  u32_t width;$/;"	m	language:C++	struct:karu_bitmap_t	typeref:typename:u32_t
width	D:/work/git/moom/code/moe_assets.h	/^  u32_t width;$/;"	m	language:C++	struct:asset_bitmap_t	typeref:typename:u32_t
width	D:/work/git/moom/code/moe_gfx_opengl.h	/^  u32_t width; $/;"	m	language:C++	struct:__anon99efc5fb0708	typeref:typename:u32_t
width	D:/work/git/moom/code/momo_png.h	/^  u32_t width;$/;"	m	language:C++	struct:png_t	typeref:typename:u32_t
width	D:/work/git/moom/code/momo_png.h	/^  u32_t width;$/;"	m	language:C++	struct:_png_ihdr_t	typeref:typename:u32_t
width	D:/work/git/moom/code/sui_atlas.h	/^  u32_t width, height;$/;"	m	language:C++	struct:sui_atlas_bitmap_t	typeref:typename:u32_t
width	D:/work/git/moom/code/sui_pack.h	/^  u32_t width;$/;"	m	language:C++	struct:sui_packer_source_bitmap_t	typeref:typename:u32_t
WIN32_LEAN_AND_MEAN	D:/work/git/moom/code/w32_moe.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d	language:C++
window	D:/work/git/moom/code/w32_moe.h	/^  HWND window;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:HWND
WinMain	D:/work/git/moom/code/w32_moe.cpp	/^WinMain(HINSTANCE instance, $/;"	f	language:C++	typeref:typename:int CALLBACK
WIN_AUDIO	D:/work/git/moom/code/w32_audio.h	/^#define WIN_AUDIO$/;"	d	language:C++
WIN_H	D:/work/git/moom/code/w32_moe.h	/^#define WIN_H$/;"	d	language:C++
WIN_RENDERER_H	D:/work/git/moom/code/w32_gfx.h	/^#define WIN_RENDERER_H$/;"	d	language:C++
WIN_WASAPI	D:/work/git/moom/code/w32_audio_wasapi.h	/^#define WIN_WASAPI$/;"	d	language:C++
WORKERFS	build/a.out.js	/^var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';$/;"	v	language:JavaScript
work_queue	D:/work/git/moom/code/w32_moe.h	/^  w32_work_queue_t work_queue;$/;"	m	language:C++	struct:w32_state_t	typeref:typename:w32_work_queue_t
writeStackCookie	build/a.out.js	/^function writeStackCookie() {$/;"	f	language:JavaScript
write_file	D:/work/git/moom/code/moe_platform.h	/^  platform_write_file_f* write_file;$/;"	m	language:C++	struct:__anona41ebd570708	typeref:typename:platform_write_file_f *
x	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:rp_rect_t	typeref:typename:u32_t
x	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:_RP_Node	typeref:typename:u32_t
x	D:/work/git/moom/code/momo_ttf.h	/^  s16_t x, y; $/;"	m	language:C++	struct:_ttf_glyph_point_t	typeref:typename:s16_t
x	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z, w; };$/;"	m	language:C++	struct:v4f_t::__anon7ebf604f0a08	typeref:typename:f32_t
x	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0808	typeref:typename:f32_t
x	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0508	typeref:typename:f32_t
x	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t x, y; };$/;"	m	language:C++	struct:v2s_t::__anon7ebf604f0308	typeref:typename:s32_t
x	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t x, y; };$/;"	m	language:C++	struct:v2u_t::__anon7ebf604f0108	typeref:typename:u32_t
x	D:/work/git/moom/code/scene_lit.h	/^  f32_t x;$/;"	m	language:C++	struct:lit_title_waypoint_t	typeref:typename:f32_t
xhr	build/a.out.js	/^        var xhr = new XMLHttpRequest();$/;"	v	language:JavaScript
xhr	build/a.out.js	/^      var xhr = new XMLHttpRequest();$/;"	v	language:JavaScript
xhr	build/a.out.js	/^    var xhr = new XMLHttpRequest();$/;"	v	language:JavaScript
x_intersect	D:/work/git/moom/code/momo_ttf.h	/^  f32_t x_intersect;$/;"	m	language:C++	struct:_ttf_edge_t	typeref:typename:f32_t
y	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:rp_rect_t	typeref:typename:u32_t
y	D:/work/git/moom/code/momo_rect_pack.h	/^	u32_t x, y, w, h;$/;"	m	language:C++	struct:_RP_Node	typeref:typename:u32_t
y	D:/work/git/moom/code/momo_ttf.h	/^  s16_t x, y; $/;"	m	language:C++	struct:_ttf_glyph_point_t	typeref:typename:s16_t
y	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z, w; };$/;"	m	language:C++	struct:v4f_t::__anon7ebf604f0a08	typeref:typename:f32_t
y	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0808	typeref:typename:f32_t
y	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y; };$/;"	m	language:C++	struct:v2f_t::__anon7ebf604f0508	typeref:typename:f32_t
y	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t x, y; };$/;"	m	language:C++	struct:v2s_t::__anon7ebf604f0308	typeref:typename:s32_t
y	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t x, y; };$/;"	m	language:C++	struct:v2u_t::__anon7ebf604f0108	typeref:typename:u32_t
z	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z, w; };$/;"	m	language:C++	struct:v4f_t::__anon7ebf604f0a08	typeref:typename:f32_t
z	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z; };$/;"	m	language:C++	struct:v3f_t::__anon7ebf604f0808	typeref:typename:f32_t
zero_array	D:/work/git/moom/code/momo_types.h	/^#define zero_array(/;"	d	language:C++
zero_memory	D:/work/git/moom/code/momo_types.h	/^zero_memory(void* dest, umi_t size) {$/;"	f	language:C++	typeref:typename:void
zero_memory	D:/work/git/moom/code/momo_types.h	/^zero_memory(void* dest, umi_t size) {$/;"	f	language:C++	typeref:typename:void
zero_range	D:/work/git/moom/code/momo_types.h	/^#define zero_range(/;"	d	language:C++
zero_struct	D:/work/git/moom/code/momo_types.h	/^#define zero_struct(/;"	d	language:C++
_arena_set_revert_point	D:/work/git/moom/code/momo_arena.h	/^# define _arena_set_revert_point(/;"	d	language:C++
_bonk_tri2_pt2_barycentric	D:/work/git/moom/code/momo_bonk.h	/^_bonk_tri2_pt2_barycentric(v2f_t tp0, v2f_t tp1, v2f_t tp2, v2f_t pt) {$/;"	f	language:C++	typeref:typename:b32_t
_bonk_tri2_pt2_dot_product	D:/work/git/moom/code/momo_bonk.h	/^_bonk_tri2_pt2_dot_product(v2f_t tp0, v2f_t tp1, v2f_t tp2, v2f_t pt) {$/;"	f	language:C++	typeref:typename:b32_t
_bonk_tri2_pt2_parametric	D:/work/git/moom/code/momo_bonk.h	/^_bonk_tri2_pt2_parametric(v2f_t tp0, v2f_t tp1, v2f_t tp2, v2f_t pt) {$/;"	f	language:C++	typeref:typename:b32_t
_compute_f64	D:/work/git/moom/code/momo_types.h	/^_compute_f64(s64_t power, u64_t i, b32_t negative) $/;"	f	language:C++	typeref:typename:f64_t
_console_push_info	D:/work/git/moom/code/moe_console.cpp	/^_console_push_info(console_t* dc, str8_t str) {$/;"	f	language:C++	typeref:typename:void	file:
_defer_dummy	D:/work/git/moom/code/momo_types.h	/^struct _defer_dummy {};$/;"	s	language:C++
_defer_scope_guard	D:/work/git/moom/code/momo_types.h	/^struct _defer_scope_guard {$/;"	s	language:C++
_emscripten_memcpy_big	build/a.out.js	/^  function _emscripten_memcpy_big(dest, src, num) {$/;"	f	language:JavaScript
_execute	D:/work/git/moom/code/moe_console.cpp	/^_execute(console_t* dc) {$/;"	f	language:C++	typeref:typename:void	file:
_F32_INFINITY	D:/work/git/moom/code/momo_types.h	/^_F32_INFINITY() {$/;"	f	language:C++	typeref:typename:f32_t
_F32_NAN	D:/work/git/moom/code/momo_types.h	/^_F32_NAN() {$/;"	f	language:C++	typeref:typename:f32_t
_F32_NEG_INFINITY	D:/work/git/moom/code/momo_types.h	/^_F32_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:f32_t
_F64_INFINITY	D:/work/git/moom/code/momo_types.h	/^_F64_INFINITY() {$/;"	f	language:C++	typeref:typename:f64_t
_F64_NAN	D:/work/git/moom/code/momo_types.h	/^_F64_NAN() {$/;"	f	language:C++	typeref:typename:f64_t
_F64_NEG_INFINITY	D:/work/git/moom/code/momo_types.h	/^_F64_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:f64_t
_fd_write	build/a.out.js	/^  function _fd_write(fd, iov, iovcnt, pnum) {$/;"	f	language:JavaScript
_free	build/a.out.js	/^function _free() {$/;"	f	language:JavaScript
_gfx_push_command	D:/work/git/moom/code/moe_gfx.h	/^_gfx_push_command(gfx_command_queue_t* q, u32_t id, u32_t align = 4) {$/;"	f	language:C++	typeref:typename:T *
_gfx_push_command_block	D:/work/git/moom/code/moe_gfx.h	/^_gfx_push_command_block(gfx_command_queue_t* q, u32_t size, u32_t id, u32_t align = 4) {$/;"	f	language:C++	typeref:typename:void *
_hue_to_color	D:/work/git/moom/code/momo_colors.h	/^_hue_to_color(f32_t p, f32_t q, f32_t t) {$/;"	f	language:C++	typeref:typename:f32_t
_json_append_array	D:/work/git/moom/code/momo_json.h	/^_json_append_array(json_array_t* arr, _json_array_node_t* node) {$/;"	f	language:C++	typeref:typename:void
_json_array_node_t	D:/work/git/moom/code/momo_json.h	/^struct _json_array_node_t{$/;"	s	language:C++
_json_create_tokenizer	D:/work/git/moom/code/momo_json.h	/^_json_create_tokenizer(void* png_memory, umi_t png_size) {$/;"	f	language:C++	typeref:typename:_json_tokenizer_t
_json_eat_ignorables	D:/work/git/moom/code/momo_json.h	/^_json_eat_ignorables(_json_tokenizer_t* t) {$/;"	f	language:C++	typeref:typename:void
_json_get	D:/work/git/moom/code/momo_json.h	/^_json_get(json_object_t* j, str8_t key) {$/;"	f	language:C++	typeref:typename:_json_object_node_t *
_json_insert_node	D:/work/git/moom/code/momo_json.h	/^_json_insert_node(_json_object_node_t** node, _json_object_node_t* new_node) {$/;"	f	language:C++	typeref:typename:b32_t
_json_next_token	D:/work/git/moom/code/momo_json.h	/^_json_next_token(_json_tokenizer_t* t) {$/;"	f	language:C++	typeref:typename:_json_token_t
_JSON_OBJECT_EXPECT_TYPE_COLON	D:/work/git/moom/code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COLON,$/;"	e	language:C++	enum:_json_object_expect_type_t
_JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE	D:/work/git/moom/code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE,$/;"	e	language:C++	enum:_json_object_expect_type_t
_JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE	D:/work/git/moom/code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE,$/;"	e	language:C++	enum:_json_object_expect_type_t
_JSON_OBJECT_EXPECT_TYPE_OPEN	D:/work/git/moom/code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_OPEN,$/;"	e	language:C++	enum:_json_object_expect_type_t
_json_object_expect_type_t	D:/work/git/moom/code/momo_json.h	/^enum  _json_object_expect_type_t {$/;"	g	language:C++
_JSON_OBJECT_EXPECT_TYPE_VALUE	D:/work/git/moom/code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_VALUE,$/;"	e	language:C++	enum:_json_object_expect_type_t
_json_object_node_t	D:/work/git/moom/code/momo_json.h	/^struct _json_object_node_t {$/;"	s	language:C++
_json_parse_array	D:/work/git/moom/code/momo_json.h	/^_json_parse_array(json_array_t* arr, _json_tokenizer_t* t, arena_t* ba) {$/;"	f	language:C++	typeref:typename:b32_t
_json_parse_object	D:/work/git/moom/code/momo_json.h	/^static b32_t _json_parse_object(json_object_t*, _json_tokenizer_t* t, arena_t* ba);$/;"	p	language:C++	typeref:typename:b32_t
_json_parse_object	D:/work/git/moom/code/momo_json.h	/^_json_parse_object(json_object_t* obj, _json_tokenizer_t* t, arena_t* ba) {$/;"	f	language:C++	typeref:typename:b32_t
_json_print_nodes_in_order	D:/work/git/moom/code/momo_json.h	/^static void _json_print_nodes_in_order(_json_object_node_t* node);$/;"	p	language:C++	typeref:typename:void
_json_print_nodes_in_order	D:/work/git/moom/code/momo_json.h	/^_json_print_nodes_in_order(_json_object_node_t* node) {$/;"	f	language:C++	typeref:typename:void
_json_print_token	D:/work/git/moom/code/momo_json.h	/^_json_print_token(_json_tokenizer_t* t, _json_token_t token)  {$/;"	f	language:C++	typeref:typename:void
_json_print_value	D:/work/git/moom/code/momo_json.h	/^_json_print_value(_json_value_t* value) {$/;"	f	language:C++	typeref:typename:void
_json_set_node_key	D:/work/git/moom/code/momo_json.h	/^_json_set_node_key(_json_object_node_t* node, _json_tokenizer_t* j, _json_token_t key)$/;"	f	language:C++	typeref:typename:void
_json_set_value_based_on_token	D:/work/git/moom/code/momo_json.h	/^static b32_t _json_set_value_based_on_token(_json_value_t* value, _json_tokenizer_t* t, _json_to/;"	p	language:C++	typeref:typename:b32_t
_json_set_value_based_on_token	D:/work/git/moom/code/momo_json.h	/^_json_set_value_based_on_token(_json_value_t* value, $/;"	f	language:C++	typeref:typename:b32_t
_json_tokenizer_t	D:/work/git/moom/code/momo_json.h	/^struct _json_tokenizer_t{$/;"	s	language:C++
_json_token_t	D:/work/git/moom/code/momo_json.h	/^struct _json_token_t{$/;"	s	language:C++
_JSON_TOKEN_TYPE_CLOSE_BRACE	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_CLOSE_BRACKET	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_COLON	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_COMMA	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_COMMA,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_EOF	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_FALSE	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_FALSE,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_FLOATING_POINT	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_FLOATING_POINT,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_IDENTIFIER	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_NULL	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_NULL,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_OPEN_BRACE	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_OPEN_BRACKET	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_SIGNED_INTEGER	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_SIGNED_INTEGER,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_STRING	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:_json_token_type_t
_json_token_type_t	D:/work/git/moom/code/momo_json.h	/^enum _json_token_type_t {$/;"	g	language:C++
_JSON_TOKEN_TYPE_TRUE	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_TRUE,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_UNKNOWN	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:_json_token_type_t
_JSON_TOKEN_TYPE_UNSIGNED_INTEGER	D:/work/git/moom/code/momo_json.h	/^  _JSON_TOKEN_TYPE_UNSIGNED_INTEGER,$/;"	e	language:C++	enum:_json_token_type_t
_json_value_t	D:/work/git/moom/code/momo_json.h	/^struct _json_value_t{$/;"	s	language:C++
_JSON_VALUE_TYPE_ARRAY	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_ARRAY,$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_B32	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_B32,$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_F32	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_F32,$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_NULL	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_NULL$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_OBJECT	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_OBJECT,$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_S32	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_S32,$/;"	e	language:C++	enum:_json_value_type_t
_JSON_VALUE_TYPE_STR8	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_STR8,$/;"	e	language:C++	enum:_json_value_type_t
_json_value_type_t	D:/work/git/moom/code/momo_json.h	/^enum  _json_value_type_t {$/;"	g	language:C++
_JSON_VALUE_TYPE_U32	D:/work/git/moom/code/momo_json.h	/^  _JSON_VALUE_TYPE_U32,$/;"	e	language:C++	enum:_json_value_type_t
_malloc	build/a.out.js	/^function _malloc() {$/;"	f	language:JavaScript
_moe_allocate_scene_size	D:/work/git/moom/code/moe.h	/^_moe_allocate_scene_size(moe_t* moe, umi_t size) {$/;"	f	language:C++	typeref:typename:void *
_ogl_add_predefined_textures	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_add_predefined_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_align_viewport	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_align_viewport(Opengl* ogl) $/;"	f	language:C++	typeref:typename:void
_ogl_attach_shader	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_attach_shader(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_begin_sprites	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_begin_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_begin_triangles	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_begin_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_all_textures	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_delete_all_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_delete_texture(Opengl* ogl, umi_t texture_index) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_sprites	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_end_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_triangles	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_end_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_sprites	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_flush_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_triangles	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_flush_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_get_blend_mode_from_gfx_blend_type	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_get_blend_mode_from_gfx_blend_type(gfx_blend_type_t type) {$/;"	f	language:C++	typeref:typename:GLenum
_ogl_init_sprite_batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_init_sprite_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:b32_t
_ogl_init_triangle_batch	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_init_triangle_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:b32_t
_ogl_process_texture_queue	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_process_texture_queue(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_push_sprite	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_push_sprite(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_push_triangle	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_push_triangle(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_set_blend_mode	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_set_blend_mode(Opengl* ogl, gfx_blend_type_t src, gfx_blend_type_t dst) {$/;"	f	language:C++	typeref:typename:void
_ogl_set_texture	D:/work/git/moom/code/moe_gfx_opengl.h	/^_ogl_set_texture(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_png_calculate_crc32	D:/work/git/moom/code/momo_png.h	/^_png_calculate_crc32(u8_t* data, u32_t data_size) {$/;"	f	language:C++	typeref:typename:u32_t
_PNG_CHANNELS	D:/work/git/moom/code/momo_png.h	/^#define _PNG_CHANNELS /;"	d	language:C++
_png_chunk_footer_t	D:/work/git/moom/code/momo_png.h	/^struct _png_chunk_footer_t {$/;"	s	language:C++
_png_chunk_header_t	D:/work/git/moom/code/momo_png.h	/^struct _png_chunk_header_t {$/;"	s	language:C++
_png_chunk_t	D:/work/git/moom/code/momo_png.h	/^struct _png_chunk_t {$/;"	s	language:C++
_png_context_t	D:/work/git/moom/code/momo_png.h	/^struct _png_context_t {$/;"	s	language:C++
_png_decompress_zlib	D:/work/git/moom/code/momo_png.h	/^_png_decompress_zlib(_png_context_t* c, stream_t* zlib_stream) {$/;"	f	language:C++	typeref:typename:b32_t
_png_deflate	D:/work/git/moom/code/momo_png.h	/^_png_deflate(stream_t* src_stream, stream_t* dest_stream, arena_t* arena) $/;"	f	language:C++	typeref:typename:b32_t
_png_filter	D:/work/git/moom/code/momo_png.h	/^_png_filter(_png_context_t* c) {$/;"	f	language:C++	typeref:typename:b32_t
_png_filter_average	D:/work/git/moom/code/momo_png.h	/^_png_filter_average(_png_context_t* c) {$/;"	f	language:C++	typeref:typename:b32_t
_png_filter_none	D:/work/git/moom/code/momo_png.h	/^_png_filter_none(_png_context_t* c) {$/;"	f	language:C++	typeref:typename:b32_t
_png_filter_paeth	D:/work/git/moom/code/momo_png.h	/^_png_filter_paeth(_png_context_t* cx) {$/;"	f	language:C++	typeref:typename:b32_t
_png_filter_sub	D:/work/git/moom/code/momo_png.h	/^_png_filter_sub(_png_context_t* c) {$/;"	f	language:C++	typeref:typename:b32_t
_png_filter_up	D:/work/git/moom/code/momo_png.h	/^_png_filter_up(_png_context_t* c) {$/;"	f	language:C++	typeref:typename:b32_t
_png_get_channels_from_colour_type	D:/work/git/moom/code/momo_png.h	/^_png_get_channels_from_colour_type(u32_t colour_type) {$/;"	f	language:C++	typeref:typename:u32_t
_png_huffman_compute	D:/work/git/moom/code/momo_png.h	/^_png_huffman_compute(_png_huffman_t* h,$/;"	f	language:C++	typeref:typename:void
_png_huffman_decode	D:/work/git/moom/code/momo_png.h	/^_png_huffman_decode(stream_t* src_stream, _png_huffman_t huffman) {$/;"	f	language:C++	typeref:typename:s32_t
_png_huffman_t	D:/work/git/moom/code/momo_png.h	/^struct _png_huffman_t {$/;"	s	language:C++
_png_idat_header_t	D:/work/git/moom/code/momo_png.h	/^struct _png_idat_header_t {$/;"	s	language:C++
_png_ihdr_t	D:/work/git/moom/code/momo_png.h	/^struct _png_ihdr_t {$/;"	s	language:C++
_png_is_format_supported	D:/work/git/moom/code/momo_png.h	/^_png_is_format_supported(_png_ihdr_t* IHDR){$/;"	f	language:C++	typeref:typename:b32_t
_png_is_signature_valid	D:/work/git/moom/code/momo_png.h	/^_png_is_signature_valid(u8_t* comparee) {$/;"	f	language:C++	typeref:typename:b32_t
_proc_exit	build/a.out.js	/^  function _proc_exit(code) {$/;"	f	language:JavaScript
_profiler	D:/work/git/moom/code/w32_moe.h	/^profiler_t _profiler = {0};$/;"	v	language:C++	typeref:typename:profiler_t
_profiler_begin_block	D:/work/git/moom/code/moe_profiler.h	/^_profiler_begin_block(profiler_t* p, profiler_entry_t* entry) $/;"	f	language:C++	typeref:typename:void
_profiler_end_block	D:/work/git/moom/code/moe_profiler.h	/^_profiler_end_block(profiler_t* p, profiler_entry_t* entry) {$/;"	f	language:C++	typeref:typename:void
_profiler_init_block	D:/work/git/moom/code/moe_profiler.h	/^_profiler_init_block(profiler_t* p,$/;"	f	language:C++	typeref:typename:profiler_entry_t *
_quicksort_partition	D:/work/git/moom/code/momo_sort.h	/^_quicksort_partition(sort_entry_t* a,$/;"	f	language:C++	typeref:typename:u32_t
_quicksort_range	D:/work/git/moom/code/momo_sort.h	/^_quicksort_range(sort_entry_t* a, $/;"	f	language:C++	typeref:typename:void
_RP_Node	D:/work/git/moom/code/momo_rect_pack.h	/^struct _RP_Node{$/;"	s	language:C++
_rp_sort	D:/work/git/moom/code/momo_rect_pack.h	/^_rp_sort(rp_rect_t* rects,$/;"	f	language:C++	typeref:typename:void
_sb8_push_fmt_list	D:/work/git/moom/code/momo_strings.h	/^_sb8_push_fmt_list(sb8_t* b, str8_t format, va_list args) {$/;"	f	language:C++	typeref:typename:void
_sort_swap_entries	D:/work/git/moom/code/momo_sort.h	/^_sort_swap_entries(sort_entry_t* a, sort_entry_t* b) {$/;"	f	language:C++	typeref:typename:void
_ttf_add_vertex	D:/work/git/moom/code/momo_ttf.h	/^_ttf_add_vertex(v2f_t* vertices, u32_t n, f32_t x, f32_t y) {$/;"	f	language:C++	typeref:typename:void
_ttf_add_vertex	D:/work/git/moom/code/momo_ttf.h	/^_ttf_add_vertex(v2f_t* vertices, u32_t n, v2f_t v) {$/;"	f	language:C++	typeref:typename:void
_TTF_CMAP_MS_ID_BIG_FIVE	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_BIG_FIVE = 4,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_JOHAB	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_JOHAB = 5,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_PRC	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_PRC = 3,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_SHIFT_JIS	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_SHIFT_JIS = 2,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_SYMBOL	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_SYMBOL = 0,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_UNICODE_BMP	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_BMP = 1,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_MS_ID_UNICODE_FULL	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_FULL = 10,$/;"	e	language:C++	enum:__anonc0034ff70203
_TTF_CMAP_PLATFORM_ID_MACINTOSH	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MACINTOSH = 1,$/;"	e	language:C++	enum:__anonc0034ff70103
_TTF_CMAP_PLATFORM_ID_MICROSOFT	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MICROSOFT = 3,$/;"	e	language:C++	enum:__anonc0034ff70103
_TTF_CMAP_PLATFORM_ID_RESERVED	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_RESERVED = 2,$/;"	e	language:C++	enum:__anonc0034ff70103
_TTF_CMAP_PLATFORM_ID_UNICODE	D:/work/git/moom/code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_UNICODE = 0,$/;"	e	language:C++	enum:__anonc0034ff70103
_ttf_edge_list_t	D:/work/git/moom/code/momo_ttf.h	/^struct _ttf_edge_list_t{$/;"	s	language:C++
_ttf_edge_t	D:/work/git/moom/code/momo_ttf.h	/^struct _ttf_edge_t{$/;"	s	language:C++
_ttf_get_glyph_outline	D:/work/git/moom/code/momo_ttf.h	/^_ttf_get_glyph_outline(const ttf_t* ttf, $/;"	f	language:C++	typeref:typename:b32_t
_ttf_get_kern_advance	D:/work/git/moom/code/momo_ttf.h	/^_ttf_get_kern_advance(const ttf_t* ttf, s32_t g1, s32_t g2) $/;"	f	language:C++	typeref:typename:s32_t
_ttf_get_offset_to_glyph	D:/work/git/moom/code/momo_ttf.h	/^_ttf_get_offset_to_glyph(const ttf_t* ttf, u32_t glyph_index) {$/;"	f	language:C++	typeref:typename:u32_t
_ttf_get_paths_from_glyph_outline	D:/work/git/moom/code/momo_ttf.h	/^_ttf_get_paths_from_glyph_outline(_ttf_glyph_outline_t* outline,$/;"	f	language:C++	typeref:typename:b32_t
_ttf_glyph_outline_t	D:/work/git/moom/code/momo_ttf.h	/^struct _ttf_glyph_outline_t{$/;"	s	language:C++
_ttf_glyph_paths_t	D:/work/git/moom/code/momo_ttf.h	/^struct _ttf_glyph_paths_t{$/;"	s	language:C++
_ttf_glyph_point_t	D:/work/git/moom/code/momo_ttf.h	/^struct _ttf_glyph_point_t{$/;"	s	language:C++
_ttf_read_s16	D:/work/git/moom/code/momo_ttf.h	/^_ttf_read_s16(u8_t* location) {$/;"	f	language:C++	typeref:typename:s16_t
_ttf_read_u16	D:/work/git/moom/code/momo_ttf.h	/^_ttf_read_u16(u8_t* location) {$/;"	f	language:C++	typeref:typename:u16_t
_ttf_read_u32	D:/work/git/moom/code/momo_ttf.h	/^_ttf_read_u32(u8_t* location) {$/;"	f	language:C++	typeref:typename:u32_t
_ttf_tessellate_bezier	D:/work/git/moom/code/momo_ttf.h	/^_ttf_tessellate_bezier(v2f_t* vertices,$/;"	f	language:C++	typeref:typename:void
_w32_load_wgl_extentions	D:/work/git/moom/code/w32_gfx_opengl.h	/^_w32_load_wgl_extentions() {$/;"	f	language:C++	typeref:typename:b32_t
_w32_set_pixel_format	D:/work/git/moom/code/w32_gfx_opengl.h	/^_w32_set_pixel_format(HDC dc) {$/;"	f	language:C++	typeref:typename:void
_w32_try_get_wgl_function	D:/work/git/moom/code/w32_gfx_opengl.h	/^_w32_try_get_wgl_function(const char* name, HMODULE fallback_module)$/;"	f	language:C++	typeref:typename:void *
_w32_wasapi_notifs_vtable	D:/work/git/moom/code/w32_audio_wasapi.h	/^static IMMNotificationClientVtbl _w32_wasapi_notifs_vtable {$/;"	v	language:C++	typeref:typename:IMMNotificationClientVtbl
_w32_wasapi_notif_client_AddRef	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_AddRef(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_notif_client_OnDefaultDeviceChange	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDefaultDeviceChange(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceAdded	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceAdded(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceRemoved	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceRemoved(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceStateChanged	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceStateChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnPropertyValueChanged	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnPropertyValueChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_QueryInterface	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_QueryInterface(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_Release	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_Release(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_release_current_device	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_release_current_device(w32_wasapi_t* wasapi) {$/;"	f	language:C++	typeref:typename:void
_w32_wasapi_set_default_device_as_current_device	D:/work/git/moom/code/w32_audio_wasapi.h	/^_w32_wasapi_set_default_device_as_current_device(w32_wasapi_t* wasapi) {$/;"	f	language:C++	typeref:typename:b32_t
__anon06005905010a	D:/work/git/moom/code/karu.h	/^  union {$/;"	u	language:C++	struct:karu_asset_t
__anon38c8e121010a	D:/work/git/moom/code/sui_pack.h	/^  union {$/;"	u	language:C++	struct:sui_packer_source_t
__anon4743520c010a	D:/work/git/moom/code/test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anon4743520c020a	D:/work/git/moom/code/test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anon599362d60108	D:/work/git/moom/code/test_png.h	/^  struct {$/;"	s	language:C++	function:test_png
__anon620e3633010a	D:/work/git/moom/code/momo_strings.h	/^	union {$/;"	u	language:C++	struct:sb8_t
__anon620e36330208	D:/work/git/moom/code/momo_strings.h	/^		struct {$/;"	s	language:C++	union:sb8_t::__anon620e3633010a
__anon620e3633030a	D:/work/git/moom/code/momo_strings.h	/^  union { u32_t v; u8_t b[4]; } combine;$/;"	u	language:C++	function:sb8_push_hex_u32
__anon7258a5bb010a	D:/work/git/moom/code/momo_colors.h	/^  union {$/;"	u	language:C++	struct:rgba_t
__anon7258a5bb0208	D:/work/git/moom/code/momo_colors.h	/^    struct { f32_t r, g, b; };  $/;"	s	language:C++	union:rgba_t::__anon7258a5bb010a
__anon7ebf604f0108	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t x, y; };$/;"	s	language:C++	union:v2u_t
__anon7ebf604f0208	D:/work/git/moom/code/momo_vectors.h	/^	struct { u32_t w, h; };$/;"	s	language:C++	union:v2u_t
__anon7ebf604f0308	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t x, y; };$/;"	s	language:C++	union:v2s_t
__anon7ebf604f0408	D:/work/git/moom/code/momo_vectors.h	/^	struct { s32_t w, h; };$/;"	s	language:C++	union:v2s_t
__anon7ebf604f0508	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y; };$/;"	s	language:C++	union:v2f_t
__anon7ebf604f0608	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h; };$/;"	s	language:C++	union:v2f_t
__anon7ebf604f0708	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t u, v; };$/;"	s	language:C++	union:v2f_t
__anon7ebf604f0808	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z; };$/;"	s	language:C++	union:v3f_t
__anon7ebf604f0908	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t w, h, d; };$/;"	s	language:C++	union:v3f_t
__anon7ebf604f0a08	D:/work/git/moom/code/momo_vectors.h	/^	struct { f32_t x, y, z, w; };$/;"	s	language:C++	union:v4f_t
__anon93187ad90102	D:/work/git/moom/code/test_sort.h	/^            [](int* lhs, int* rhs) { return (*lhs) < (*rhs); } );$/;"	f	language:C++	function:test_sort	file:
__anon99efc5fb0103	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon99efc5fb0203	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon99efc5fb0303	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon99efc5fb0403	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon99efc5fb0503	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon99efc5fb0603	D:/work/git/moom/code/moe_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon99efc5fb0708	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon99efc5fb0808	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon99efc5fb0908	D:/work/git/moom/code/moe_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anona16973e90103	D:/work/git/moom/code/moe_inspector.h	/^typedef enum  {$/;"	g	language:C++
__anona16973e90208	D:/work/git/moom/code/moe_inspector.h	/^typedef struct  {$/;"	s	language:C++
__anona16973e90308	D:/work/git/moom/code/moe_inspector.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd570108	D:/work/git/moom/code/moe_platform.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd570203	D:/work/git/moom/code/moe_platform.h	/^typedef enum {$/;"	g	language:C++
__anona41ebd570303	D:/work/git/moom/code/moe_platform.h	/^typedef enum {$/;"	g	language:C++
__anona41ebd570408	D:/work/git/moom/code/moe_platform.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd570508	D:/work/git/moom/code/moe_platform.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd570608	D:/work/git/moom/code/moe_platform.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd570708	D:/work/git/moom/code/moe_platform.h	/^typedef struct {$/;"	s	language:C++
__anona41ebd57080a	D:/work/git/moom/code/moe_platform.h	/^  union {$/;"	u	language:C++	struct:__anona41ebd570708
__anona41ebd570908	D:/work/git/moom/code/moe_platform.h	/^    struct {$/;"	s	language:C++	union:__anona41ebd570708::__anona41ebd57080a
__anona90d98a3010a	D:/work/git/moom/code/momo_json.h	/^  union {$/;"	u	language:C++	struct:_json_value_t
__anonbfb7a7ee010a	D:/work/git/moom/code/momo_png.h	/^  union {$/;"	u	language:C++	struct:_png_chunk_header_t
__anonc0034ff70103	D:/work/git/moom/code/momo_ttf.h	/^enum {$/;"	g	language:C++
__anonc0034ff70203	D:/work/git/moom/code/momo_ttf.h	/^enum {$/;"	g	language:C++
__anonda9447de010a	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	u	language:C++	function:_F32_INFINITY
__anonda9447de020a	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	u	language:C++	function:_F32_NEG_INFINITY
__anonda9447de030a	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } ret = {};$/;"	u	language:C++	function:_F32_NAN
__anonda9447de040a	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	u	language:C++	function:_F64_NAN
__anonda9447de050a	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	u	language:C++	function:_F64_INFINITY
__anonda9447de060a	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	u	language:C++	function:_F64_NEG_INFINITY
__anonda9447de070a	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u32_t u; } val = {};$/;"	u	language:C++	function:abs_f32
__anonda9447de080a	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } val = {};$/;"	u	language:C++	function:abs_f64
__anonda9447de090a	D:/work/git/moom/code/momo_types.h	/^  union { f32_t f; u64_t u; } ret = {};$/;"	u	language:C++	function:is_nan_f32
__anonda9447de0a0a	D:/work/git/moom/code/momo_types.h	/^  union { f64_t f; u64_t u; } ret = {};$/;"	u	language:C++	function:is_nan_f64
__anonef4454250108	D:/work/git/moom/code/moe_assets.h	/^  struct {$/;"	s	language:C++	struct:asset_match_t
__anonef445425020a	D:/work/git/moom/code/moe_assets.h	/^  union {$/;"	u	language:C++	struct:asset_slot_t
__anonfc2bf917010a	D:/work/git/moom/code/sui_atlas.h	/^  union {$/;"	u	language:C++	struct:sui_atlas_context_t
__arena_set_revert_point	D:/work/git/moom/code/momo_arena.h	/^# define __arena_set_revert_point(/;"	d	language:C++
__ATEXIT__	build/a.out.js	/^var __ATEXIT__    = []; \/\/ functions called during shutdown$/;"	v	language:JavaScript
__ATINIT__	build/a.out.js	/^var __ATINIT__    = []; \/\/ functions called during startup$/;"	v	language:JavaScript
__ATMAIN__	build/a.out.js	/^var __ATMAIN__    = []; \/\/ functions called when main() is to be run$/;"	v	language:JavaScript
__ATPOSTRUN__	build/a.out.js	/^var __ATPOSTRUN__ = []; \/\/ functions called after the main() is called$/;"	v	language:JavaScript
__ATPRERUN__	build/a.out.js	/^var __ATPRERUN__  = []; \/\/ functions called before the runtime is initialized$/;"	v	language:JavaScript
~_defer_scope_guard	D:/work/git/moom/code/momo_types.h	/^  ~_defer_scope_guard() { f(); }$/;"	f	language:C++	struct:_defer_scope_guard
