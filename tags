!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
0	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
1	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
2	build/test_json.json	/^  "arr": [1,2,3],$/;"	n	language:JSON	array:arr
a	code/momo_colors.h	/^  F32 a;$/;"	m	language:C++	struct:__anonb89fa6ae0308	typeref:typename:F32
a	momo_colors.h	/^  F32 a;$/;"	m	language:C++	struct:__anonf72fc8c40308	typeref:typename:F32
Aabb2	code/momo_shapes.h	/^}Aabb2;$/;"	t	language:C++	typeref:struct:__anon484784200508
Aabb2	momo_shapes.h	/^}Aabb2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360508
abs_f32	code/momo_common.h	/^abs_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
abs_f32	momo_common.h	/^abs_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
abs_f64	code/momo_common.h	/^abs_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
abs_f64	momo_common.h	/^abs_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
abs_of	code/momo_common.h	/^#define abs_of(/;"	d	language:C++
abs_of	momo_common.h	/^#define abs_of(/;"	d	language:C++
abs_s16	code/momo_common.h	/^abs_s16(S16 x) {$/;"	f	language:C++	typeref:typename:S16
abs_s16	momo_common.h	/^abs_s16(S16 x) {$/;"	f	language:C++	typeref:typename:S16
abs_s32	code/momo_common.h	/^abs_s32(S32 x) {$/;"	f	language:C++	typeref:typename:S32
abs_s32	momo_common.h	/^abs_s32(S32 x) {$/;"	f	language:C++	typeref:typename:S32
abs_s64	code/momo_common.h	/^abs_s64(S64 x) {$/;"	f	language:C++	typeref:typename:S64
abs_s64	momo_common.h	/^abs_s64(S64 x) {$/;"	f	language:C++	typeref:typename:S64
abs_s8	code/momo_common.h	/^abs_s8(S8 x) {$/;"	f	language:C++	typeref:typename:S8
abs_s8	momo_common.h	/^abs_s8(S8 x) {$/;"	f	language:C++	typeref:typename:S8
accumulate_stat	code/game_profiler_rendering.h	/^accumulate_stat(Stat* stat, F64 value) {$/;"	f	language:C++	typeref:typename:void
accumulate_stat	game_profiler_rendering.h	/^accumulate_stat(Stat* stat, F64 value) {$/;"	f	language:C++	typeref:typename:void
acos_f32	code/momo_intrinsics.h	/^acos_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
acos_f32	code/momo_intrinsics.h	/^static F32 acos_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
acos_f32	momo_intrinsics.h	/^acos_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
acos_f32	momo_intrinsics.h	/^static F32 acos_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
acos_f64	code/momo_intrinsics.h	/^acos_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
acos_f64	code/momo_intrinsics.h	/^static F64 acos_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
acos_f64	momo_intrinsics.h	/^acos_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
acos_f64	momo_intrinsics.h	/^static F64 acos_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
activated	code/game_mode_lit_sensors.h	/^  U32 activated;$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:U32
activated	game_mode_lit_sensors.h	/^  U32 activated;$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:U32
active	code/game_mode_level_editor.h	/^  B32 active;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
active	game_mode_level_editor.h	/^  B32 active;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
activeTextureId	test.c	/^        unsigned int activeTextureId[RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS];    \/\/ Active texture/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int[]	file:
additional_flags	code/momo_png.h	/^  U8 additional_flags;$/;"	m	language:C++	struct:_PNG_IDAT_Header	typeref:typename:U8
additional_flags	momo_png.h	/^  U8 additional_flags;$/;"	m	language:C++	struct:_PNG_IDAT_Header	typeref:typename:U8
add_command	code/game_console.h	/^add_command(Console* dc, $/;"	f	language:C++	typeref:typename:void
add_command	game_console.h	/^add_command(Console* dc, $/;"	f	language:C++	typeref:typename:void
add_inspector_entry	code/game_inspector.h	/^add_inspector_entry(Inspector* in, String8 name, F32* item) {$/;"	f	language:C++	typeref:typename:void
add_inspector_entry	code/game_inspector.h	/^add_inspector_entry(Inspector* in, String8 name, U32* item) {$/;"	f	language:C++	typeref:typename:void
add_inspector_entry	game_inspector.h	/^add_inspector_entry(Inspector* in, String8 name, F32* item) {$/;"	f	language:C++	typeref:typename:void
add_inspector_entry	game_inspector.h	/^add_inspector_entry(Inspector* in, String8 name, U32* item) {$/;"	f	language:C++	typeref:typename:void
add_task	code/game_platform.h	/^  Platform_Add_Task* add_task;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Add_Task *
add_task	code/game_platform.h	/^  Platform_Add_Task* add_task;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Add_Task *
add_task	game_platform.h	/^  Platform_Add_Task* add_task;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Add_Task *
add_task	game_platform.h	/^  Platform_Add_Task* add_task;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Add_Task *
advance_depth	code/game_painter.h	/^advance_depth(Painter* p) {$/;"	f	language:C++	typeref:typename:void
advance_depth	game_painter.h	/^advance_depth(Painter* p) {$/;"	f	language:C++	typeref:typename:void
advance_width	code/momo_ttf.h	/^  S16 advance_width;$/;"	m	language:C++	struct:__anon54d1bdca0208	typeref:typename:S16
advance_width	momo_ttf.h	/^  S16 advance_width;$/;"	m	language:C++	struct:__anon4eb927a00208	typeref:typename:S16
age	build/test_json.json	/^  "age":30, $/;"	n	language:JSON
age	code/test_json.json	/^{"name":"John", "age":30, "car":null}$/;"	n	language:JSON
align_down_pow2	code/momo_common.h	/^#define align_down_pow2(/;"	d	language:C++
align_down_pow2	momo_common.h	/^#define align_down_pow2(/;"	d	language:C++
align_up_pow2	code/momo_common.h	/^#define align_up_pow2(/;"	d	language:C++
align_up_pow2	momo_common.h	/^#define align_up_pow2(/;"	d	language:C++
allocator	code/game_debug.h	/^  Bump_Allocator allocator;$/;"	m	language:C++	struct:Debug_State	typeref:typename:Bump_Allocator
allocator	code/momo_memory.h	/^  Bump_Allocator* allocator;$/;"	m	language:C++	struct:__anonf3c0da150208	typeref:typename:Bump_Allocator *
allocator	code/momo_png.h	/^  Bump_Allocator* allocator; $/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Bump_Allocator *
allocator	code/sui_pack.h	/^  Bump_Allocator* allocator;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Bump_Allocator *
allocator	code/w32_audio_wasapi.h	/^  Bump_Allocator allocator;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Bump_Allocator
allocator	code/win_audio_wasapi.h	/^  Bump_Allocator allocator;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Bump_Allocator
allocator	game_debug.h	/^  Bump_Allocator allocator;$/;"	m	language:C++	struct:Debug_State	typeref:typename:Bump_Allocator
allocator	momo_memory.h	/^  Bump_Allocator* allocator;$/;"	m	language:C++	struct:__anon3250fc2b0208	typeref:typename:Bump_Allocator *
allocator	momo_png.h	/^  Bump_Allocator* allocator; $/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Bump_Allocator *
allocator	sui_pack.h	/^  Bump_Allocator* allocator;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Bump_Allocator *
allocator	w32_audio_wasapi.h	/^  Bump_Allocator allocator;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Bump_Allocator
al_append	code/momo_lists.h	/^#define al_append(/;"	d	language:C++
al_append	momo_lists.h	/^#define al_append(/;"	d	language:C++
al_at	code/momo_lists.h	/^#define al_at(/;"	d	language:C++
al_at	momo_lists.h	/^#define al_at(/;"	d	language:C++
al_clear	code/momo_lists.h	/^#define al_clear(/;"	d	language:C++
al_clear	momo_lists.h	/^#define al_clear(/;"	d	language:C++
al_foreach	code/momo_lists.h	/^#define al_foreach(/;"	d	language:C++
al_foreach	momo_lists.h	/^#define al_foreach(/;"	d	language:C++
al_is_empty	code/momo_lists.h	/^#define al_is_empty(/;"	d	language:C++
al_is_empty	momo_lists.h	/^#define al_is_empty(/;"	d	language:C++
al_is_full	code/momo_lists.h	/^#define al_is_full(/;"	d	language:C++
al_is_full	momo_lists.h	/^#define al_is_full(/;"	d	language:C++
al_is_valid	code/momo_lists.h	/^#define al_is_valid(/;"	d	language:C++
al_is_valid	momo_lists.h	/^#define al_is_valid(/;"	d	language:C++
anchor	code/game_gfx.h	/^  V2 anchor;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
anchor	code/game_renderer.h	/^  V2 anchor;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
anchor	code/momo_shapes.h	/^  V2 anchor;$/;"	m	language:C++	struct:__anon484784200508	typeref:typename:V2
anchor	game_gfx.h	/^  V2 anchor;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
anchor	momo_shapes.h	/^  V2 anchor;$/;"	m	language:C++	struct:__anon86d7a6360508	typeref:typename:V2
APIENTRY	test.c	/^                #define APIENTRY /;"	d	language:C	file:
APIENTRY	test.c	/^                #define APIENTRY$/;"	d	language:C	file:
ARCH_ARM	code/momo_common.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	code/momo_common.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	code/momo_common.h	/^# define ARCH_ARM /;"	d	language:C++
ARCH_ARM	momo_common.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	momo_common.h	/^#  define ARCH_ARM /;"	d	language:C++
ARCH_ARM	momo_common.h	/^# define ARCH_ARM /;"	d	language:C++
ARCH_X64	code/momo_common.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	code/momo_common.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	code/momo_common.h	/^# define ARCH_X64 /;"	d	language:C++
ARCH_X64	momo_common.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	momo_common.h	/^#  define ARCH_X64 /;"	d	language:C++
ARCH_X64	momo_common.h	/^# define ARCH_X64 /;"	d	language:C++
ARCH_X86	code/momo_common.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	code/momo_common.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	code/momo_common.h	/^# define ARCH_X86 /;"	d	language:C++
ARCH_X86	momo_common.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	momo_common.h	/^#  define ARCH_X86 /;"	d	language:C++
ARCH_X86	momo_common.h	/^# define ARCH_X86 /;"	d	language:C++
arr	build/test_json.json	/^  "arr": [1,2,3],$/;"	a	language:JSON
arr	code/momo_json.h	/^    JSON_Array arr;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:JSON_Array
arr	momo_json.h	/^    JSON_Array arr;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:JSON_Array
array_count	code/momo_common.h	/^#define array_count(/;"	d	language:C++
array_count	momo_common.h	/^#define array_count(/;"	d	language:C++
ascii_to_digit	code/momo_common.h	/^#define ascii_to_digit(/;"	d	language:C++
ascii_to_digit	momo_common.h	/^#define ascii_to_digit(/;"	d	language:C++
asdf	code/meta.cpp	/^#define asdf(/;"	d	language:C++	file:
asdf	meta.cpp	/^#define asdf(/;"	d	language:C++	file:
asin_f32	code/momo_intrinsics.h	/^asin_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
asin_f32	code/momo_intrinsics.h	/^static F32 asin_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
asin_f32	momo_intrinsics.h	/^asin_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
asin_f32	momo_intrinsics.h	/^static F32 asin_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
asin_f64	code/momo_intrinsics.h	/^asin_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
asin_f64	code/momo_intrinsics.h	/^static F64 asin_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
asin_f64	momo_intrinsics.h	/^asin_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
asin_f64	momo_intrinsics.h	/^static F64 asin_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
aspect_ratio_height	code/w32.cpp	/^  U32 aspect_ratio_height;$/;"	m	language:C++	struct:W32_State	typeref:typename:U32	file:
aspect_ratio_height	code/win.cpp	/^  U32 aspect_ratio_height;$/;"	m	language:C++	struct:Win_State	typeref:typename:U32	file:
aspect_ratio_height	w32.cpp	/^  U32 aspect_ratio_height;$/;"	m	language:C++	struct:W32_State	typeref:typename:U32	file:
aspect_ratio_width	code/w32.cpp	/^  U32 aspect_ratio_width;$/;"	m	language:C++	struct:W32_State	typeref:typename:U32	file:
aspect_ratio_width	code/win.cpp	/^  U32 aspect_ratio_width;$/;"	m	language:C++	struct:Win_State	typeref:typename:U32	file:
aspect_ratio_width	w32.cpp	/^  U32 aspect_ratio_width;$/;"	m	language:C++	struct:W32_State	typeref:typename:U32	file:
assert	code/momo_common.h	/^# define assert(/;"	d	language:C++
assert	code/momo_common.h	/^# define assert(/;"	d	language:C++
assert	momo_common.h	/^# define assert(/;"	d	language:C++
assert	momo_common.h	/^# define assert(/;"	d	language:C++
assert_callback	code/momo_common.h	/^# define assert_callback(/;"	d	language:C++
assert_callback	code/sui.h	/^#define assert_callback(/;"	d	language:C++
assert_callback	code/test.h	/^#define assert_callback(/;"	d	language:C++
assert_callback	momo_common.h	/^# define assert_callback(/;"	d	language:C++
assert_callback	sui.h	/^#define assert_callback(/;"	d	language:C++
assert_callback	test.h	/^#define assert_callback(/;"	d	language:C++
asset_arena	code/game.h	/^  Bump_Allocator asset_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
asset_arena	game.h	/^  Bump_Allocator asset_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
asset_dir	code/sui.h	/^#define asset_dir(/;"	d	language:C++
asset_dir	sui.h	/^#define asset_dir(/;"	d	language:C++
at	code/meta.cpp	/^  U32 at;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:U32	file:
at	code/momo_json.h	/^  U32 at;$/;"	m	language:C++	struct:__anond7a9c0d60608	typeref:typename:U32
at	meta.cpp	/^  U32 at;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:U32	file:
at	momo_json.h	/^  U32 at;$/;"	m	language:C++	struct:__anon0e7e656c0608	typeref:typename:U32
atan_f32	code/momo_intrinsics.h	/^atan_f32(F32 x){$/;"	f	language:C++	typeref:typename:F32
atan_f32	code/momo_intrinsics.h	/^static F32 atan_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
atan_f32	momo_intrinsics.h	/^atan_f32(F32 x){$/;"	f	language:C++	typeref:typename:F32
atan_f32	momo_intrinsics.h	/^static F32 atan_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
atan_f64	code/momo_intrinsics.h	/^atan_f64(F64 x){$/;"	f	language:C++	typeref:typename:F64
atan_f64	code/momo_intrinsics.h	/^static F64 atan_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
atan_f64	momo_intrinsics.h	/^atan_f64(F64 x){$/;"	f	language:C++	typeref:typename:F64
atan_f64	momo_intrinsics.h	/^static F64 atan_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
atomic_add_u32	code/momo_intrinsics.h	/^atomic_add_u32(U32 volatile* value, U32 to_add) {$/;"	f	language:C++	typeref:typename:U32
atomic_add_u32	code/momo_intrinsics.h	/^static U32 atomic_add_u32(U32 volatile* value, U32 to_add);$/;"	p	language:C++	typeref:typename:U32
atomic_add_u32	momo_intrinsics.h	/^atomic_add_u32(U32 volatile* value, U32 to_add) {$/;"	f	language:C++	typeref:typename:U32
atomic_add_u32	momo_intrinsics.h	/^static U32 atomic_add_u32(U32 volatile* value, U32 to_add);$/;"	p	language:C++	typeref:typename:U32
atomic_add_u64	code/momo_intrinsics.h	/^atomic_add_u64(U64 volatile* value, U64 to_add) {$/;"	f	language:C++	typeref:typename:U64
atomic_add_u64	code/momo_intrinsics.h	/^static U64 atomic_add_u64(U64 volatile* value, U64 to_add);$/;"	p	language:C++	typeref:typename:U64
atomic_add_u64	momo_intrinsics.h	/^atomic_add_u64(U64 volatile* value, U64 to_add) {$/;"	f	language:C++	typeref:typename:U64
atomic_add_u64	momo_intrinsics.h	/^static U64 atomic_add_u64(U64 volatile* value, U64 to_add);$/;"	p	language:C++	typeref:typename:U64
atomic_assign_u64	code/momo_intrinsics.h	/^atomic_assign_u64(U64 volatile* value,$/;"	f	language:C++	typeref:typename:U64
atomic_assign_u64	code/momo_intrinsics.h	/^static U64 atomic_assign_u64(U64 volatile* value, U64 new_value);$/;"	p	language:C++	typeref:typename:U64
atomic_assign_u64	momo_intrinsics.h	/^atomic_assign_u64(U64 volatile* value,$/;"	f	language:C++	typeref:typename:U64
atomic_assign_u64	momo_intrinsics.h	/^static U64 atomic_assign_u64(U64 volatile* value, U64 new_value);$/;"	p	language:C++	typeref:typename:U64
atomic_compare_assign_u32	code/momo_intrinsics.h	/^atomic_compare_assign_u32(U32 volatile* value,$/;"	f	language:C++	typeref:typename:U32
atomic_compare_assign_u32	code/momo_intrinsics.h	/^static U32 atomic_compare_assign_u32(U32 volatile* value, U32 new_value, U32 expected_value);$/;"	p	language:C++	typeref:typename:U32
atomic_compare_assign_u32	momo_intrinsics.h	/^atomic_compare_assign_u32(U32 volatile* value,$/;"	f	language:C++	typeref:typename:U32
atomic_compare_assign_u32	momo_intrinsics.h	/^static U32 atomic_compare_assign_u32(U32 volatile* value, U32 new_value, U32 expected_value);$/;"	p	language:C++	typeref:typename:U32
audio	code/game_platform.h	/^  Platform_Audio* audio;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Audio *
audio	game_platform.h	/^  Platform_Audio* audio;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Audio *
audio_client	code/w32_audio_wasapi.h	/^  IAudioClient2* audio_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioClient2 *
audio_client	code/win_audio_wasapi.h	/^  IAudioClient2* audio_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioClient2 *
audio_client	w32_audio_wasapi.h	/^  IAudioClient2* audio_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioClient2 *
audio_format	code/momo_wav.h	/^  U16 audio_format;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U16
audio_format	momo_wav.h	/^  U16 audio_format;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U16
audio_render_client	code/w32_audio_wasapi.h	/^  IAudioRenderClient* audio_render_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioRenderClient *
audio_render_client	code/win_audio_wasapi.h	/^  IAudioRenderClient* audio_render_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioRenderClient *
audio_render_client	w32_audio_wasapi.h	/^  IAudioRenderClient* audio_render_client;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IAudioRenderClient *
average	code/game_profiler_rendering.h	/^  F64 average;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
average	game_profiler_rendering.h	/^  F64 average;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
b	code/momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonb89fa6ae0308::__anonb89fa6ae040a::__anonb89fa6ae0508	typeref:typename:F32
b	code/momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonb89fa6ae0108	typeref:typename:F32
b	code/momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon71355586050a	typeref:typename:U8[4]
b	momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonf72fc8c40308::__anonf72fc8c4040a::__anonf72fc8c40508	typeref:typename:F32
b	momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonf72fc8c40108	typeref:typename:F32
b	momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon81c9ba5c050a	typeref:typename:U8[4]
B16	code/momo_common.h	/^typedef U16 B16;$/;"	t	language:C++	typeref:typename:U16
B16	momo_common.h	/^typedef U16 B16;$/;"	t	language:C++	typeref:typename:U16
B32	code/momo_common.h	/^typedef U32 B32;$/;"	t	language:C++	typeref:typename:U32
b32	code/momo_json.h	/^    B32 b32;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:B32
B32	momo_common.h	/^typedef U32 B32;$/;"	t	language:C++	typeref:typename:U32
b32	momo_json.h	/^    B32 b32;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:B32
B64	code/momo_common.h	/^typedef U64 B64;$/;"	t	language:C++	typeref:typename:U64
B64	momo_common.h	/^typedef U64 B64;$/;"	t	language:C++	typeref:typename:U64
B8	code/momo_common.h	/^typedef U8 B8;$/;"	t	language:C++	typeref:typename:U8
B8	momo_common.h	/^typedef U8 B8;$/;"	t	language:C++	typeref:typename:U8
ba_clear	code/momo_memory.h	/^ba_clear(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:void
ba_clear	code/momo_memory.h	/^static void   ba_clear(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:void
ba_clear	momo_memory.h	/^ba_clear(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:void
ba_clear	momo_memory.h	/^static void   ba_clear(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:void
ba_init	code/momo_memory.h	/^ba_init(Bump_Allocator* a, void* mem, UMI cap) {$/;"	f	language:C++	typeref:typename:void
ba_init	code/momo_memory.h	/^static void   ba_init(Bump_Allocator* a, void* mem, UMI cap);$/;"	p	language:C++	typeref:typename:void
ba_init	momo_memory.h	/^ba_init(Bump_Allocator* a, void* mem, UMI cap) {$/;"	f	language:C++	typeref:typename:void
ba_init	momo_memory.h	/^static void   ba_init(Bump_Allocator* a, void* mem, UMI cap);$/;"	p	language:C++	typeref:typename:void
ba_mark	code/momo_memory.h	/^ba_mark(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:Bump_Allocator_Marker
ba_mark	code/momo_memory.h	/^static Bump_Allocator_Marker ba_mark(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:Bump_Allocator_Marker
ba_mark	momo_memory.h	/^ba_mark(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:Bump_Allocator_Marker
ba_mark	momo_memory.h	/^static Bump_Allocator_Marker ba_mark(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:Bump_Allocator_Marker
ba_partition	code/momo_memory.h	/^ba_partition(Bump_Allocator* a, Bump_Allocator* partition, UMI size, UMI align) {	$/;"	f	language:C++	typeref:typename:B32
ba_partition	code/momo_memory.h	/^static B32    ba_partition(Bump_Allocator* a, Bump_Allocator* partition, UMI size, UMI align);$/;"	p	language:C++	typeref:typename:B32
ba_partition	momo_memory.h	/^ba_partition(Bump_Allocator* a, Bump_Allocator* partition, UMI size, UMI align) {	$/;"	f	language:C++	typeref:typename:B32
ba_partition	momo_memory.h	/^static B32    ba_partition(Bump_Allocator* a, Bump_Allocator* partition, UMI size, UMI align);$/;"	p	language:C++	typeref:typename:B32
ba_partition_with_remaining	code/momo_memory.h	/^ba_partition_with_remaining(Bump_Allocator* a, Bump_Allocator* partition, UMI align){$/;"	f	language:C++	typeref:typename:B32
ba_partition_with_remaining	code/momo_memory.h	/^static B32    ba_partition_with_remaining(Bump_Allocator* a, Bump_Allocator* parition, UMI align/;"	p	language:C++	typeref:typename:B32
ba_partition_with_remaining	momo_memory.h	/^ba_partition_with_remaining(Bump_Allocator* a, Bump_Allocator* partition, UMI align){$/;"	f	language:C++	typeref:typename:B32
ba_partition_with_remaining	momo_memory.h	/^static B32    ba_partition_with_remaining(Bump_Allocator* a, Bump_Allocator* parition, UMI align/;"	p	language:C++	typeref:typename:B32
ba_push	code/momo_memory.h	/^#define ba_push(/;"	d	language:C++
ba_push	momo_memory.h	/^#define ba_push(/;"	d	language:C++
ba_push_align	code/momo_memory.h	/^#define ba_push_align(/;"	d	language:C++
ba_push_align	momo_memory.h	/^#define ba_push_align(/;"	d	language:C++
ba_push_arr	code/momo_memory.h	/^#define ba_push_arr(/;"	d	language:C++
ba_push_arr	momo_memory.h	/^#define ba_push_arr(/;"	d	language:C++
ba_push_arr_align	code/momo_memory.h	/^#define ba_push_arr_align(/;"	d	language:C++
ba_push_arr_align	momo_memory.h	/^#define ba_push_arr_align(/;"	d	language:C++
ba_push_arr_zero	code/momo_memory.h	/^#define ba_push_arr_zero(/;"	d	language:C++
ba_push_arr_zero	momo_memory.h	/^#define ba_push_arr_zero(/;"	d	language:C++
ba_push_arr_zero_align	code/momo_memory.h	/^#define ba_push_arr_zero_align(/;"	d	language:C++
ba_push_arr_zero_align	momo_memory.h	/^#define ba_push_arr_zero_align(/;"	d	language:C++
ba_push_size	code/momo_memory.h	/^ba_push_size(Bump_Allocator* a, UMI size, UMI align) {$/;"	f	language:C++	typeref:typename:void *
ba_push_size	code/momo_memory.h	/^static void*  ba_push_size(Bump_Allocator* a, UMI size, UMI align);$/;"	p	language:C++	typeref:typename:void *
ba_push_size	momo_memory.h	/^ba_push_size(Bump_Allocator* a, UMI size, UMI align) {$/;"	f	language:C++	typeref:typename:void *
ba_push_size	momo_memory.h	/^static void*  ba_push_size(Bump_Allocator* a, UMI size, UMI align);$/;"	p	language:C++	typeref:typename:void *
ba_push_size_zero	code/momo_memory.h	/^ba_push_size_zero(Bump_Allocator* a, UMI size, UMI align) $/;"	f	language:C++	typeref:typename:void *
ba_push_size_zero	code/momo_memory.h	/^static void*  ba_push_size_zero(Bump_Allocator* a, UMI size, UMI align); $/;"	p	language:C++	typeref:typename:void *
ba_push_size_zero	momo_memory.h	/^ba_push_size_zero(Bump_Allocator* a, UMI size, UMI align) $/;"	f	language:C++	typeref:typename:void *
ba_push_size_zero	momo_memory.h	/^static void*  ba_push_size_zero(Bump_Allocator* a, UMI size, UMI align); $/;"	p	language:C++	typeref:typename:void *
ba_push_zero	code/momo_memory.h	/^#define ba_push_zero(/;"	d	language:C++
ba_push_zero	momo_memory.h	/^#define ba_push_zero(/;"	d	language:C++
ba_push_zero_align	code/momo_memory.h	/^#define ba_push_zero_align(/;"	d	language:C++
ba_push_zero_align	momo_memory.h	/^#define ba_push_zero_align(/;"	d	language:C++
ba_remaining	code/momo_memory.h	/^ba_remaining(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:UMI
ba_remaining	code/momo_memory.h	/^static UMI    ba_remaining(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:UMI
ba_remaining	momo_memory.h	/^ba_remaining(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:UMI
ba_remaining	momo_memory.h	/^static UMI    ba_remaining(Bump_Allocator* a);$/;"	p	language:C++	typeref:typename:UMI
ba_revert	code/momo_memory.h	/^ba_revert(Bump_Allocator_Marker marker) {$/;"	f	language:C++	typeref:typename:void
ba_revert	code/momo_memory.h	/^static void ba_revert(Bump_Allocator_Marker marker);$/;"	p	language:C++	typeref:typename:void
ba_revert	momo_memory.h	/^ba_revert(Bump_Allocator_Marker marker) {$/;"	f	language:C++	typeref:typename:void
ba_revert	momo_memory.h	/^static void ba_revert(Bump_Allocator_Marker marker);$/;"	p	language:C++	typeref:typename:void
ba_set_revert_point	code/momo_memory.h	/^# define ba_set_revert_point(/;"	d	language:C++
ba_set_revert_point	momo_memory.h	/^# define ba_set_revert_point(/;"	d	language:C++
before	code/game_platform.h	/^  B32 before;$/;"	m	language:C++	struct:Platform_Button	typeref:typename:B32
before	game_platform.h	/^  B32 before;$/;"	m	language:C++	struct:Platform_Button	typeref:typename:B32
begin	code/meta.cpp	/^  U32 begin;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:U32	file:
begin	code/momo_json.h	/^  U32 begin;$/;"	m	language:C++	struct:__anond7a9c0d60508	typeref:typename:U32
begin	meta.cpp	/^  U32 begin;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:U32	file:
begin	momo_json.h	/^  U32 begin;$/;"	m	language:C++	struct:__anon0e7e656c0508	typeref:typename:U32
begin_asset_pack	code/sui_pack.h	/^begin_asset_pack(Sui_Packer* p)$/;"	f	language:C++	typeref:typename:void
begin_asset_pack	sui_pack.h	/^begin_asset_pack(Sui_Packer* p)$/;"	f	language:C++	typeref:typename:void
begin_atlas	code/sui_pack.h	/^begin_atlas(Sui_Packer *p) {$/;"	f	language:C++	typeref:typename:void
begin_atlas	sui_pack.h	/^begin_atlas(Sui_Packer *p) {$/;"	f	language:C++	typeref:typename:void
begin_atlas_builder	code/sui_atlas.h	/^begin_atlas_builder(Sui_Atlas* ab,$/;"	f	language:C++	typeref:typename:B32
begin_atlas_builder	sui_atlas.h	/^begin_atlas_builder(Sui_Atlas* ab,$/;"	f	language:C++	typeref:typename:B32
begin_atlas_font	code/sui_pack.h	/^begin_atlas_font(Sui_Packer* p,$/;"	f	language:C++	typeref:typename:void
begin_atlas_font	sui_pack.h	/^begin_atlas_font(Sui_Packer* p,$/;"	f	language:C++	typeref:typename:void
begin_frame	code/win_renderer.h	/^  Win_Gfx_Begin_Frame* begin_frame;$/;"	m	language:C++	struct:Win_Gfx_Functions	typeref:typename:Win_Gfx_Begin_Frame *
begin_inspector	code/game_inspector.h	/^begin_inspector(Inspector* in) {$/;"	f	language:C++	typeref:typename:void
begin_inspector	game_inspector.h	/^begin_inspector(Inspector* in) {$/;"	f	language:C++	typeref:typename:void
begin_packer	code/sui_pack.h	/^begin_packer(Sui_Packer* p,$/;"	f	language:C++	typeref:typename:B32
begin_packer	sui_pack.h	/^begin_packer(Sui_Packer* p,$/;"	f	language:C++	typeref:typename:B32
begin_painting	code/game_painter.h	/^begin_painting(Painter* p, $/;"	f	language:C++	typeref:typename:void
begin_painting	game_painter.h	/^begin_painting(Painter* p, $/;"	f	language:C++	typeref:typename:void
begin_stat	code/game_profiler_rendering.h	/^begin_stat(Stat* stat) {$/;"	f	language:C++	typeref:typename:void
begin_stat	game_profiler_rendering.h	/^begin_stat(Stat* stat) {$/;"	f	language:C++	typeref:typename:void
bitmap	code/sui_atlas.h	/^  Image32 bitmap;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Image32
bitmap	sui_atlas.h	/^  Image32 bitmap;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Image32
bitmaps	code/game_assets.h	/^  Bitmap_Asset* bitmaps;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Bitmap_Asset *
bitmaps	code/sui_pack.h	/^  Sui_Packer_Bitmap bitmaps[32];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Bitmap[32]
bitmaps	game_assets.h	/^  Bitmap_Asset* bitmaps;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Bitmap_Asset *
bitmaps	sui_pack.h	/^  Sui_Packer_Bitmap bitmaps[32];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Bitmap[32]
Bitmap_Asset	code/game_assets.h	/^struct Bitmap_Asset {$/;"	s	language:C++
Bitmap_Asset	game_assets.h	/^struct Bitmap_Asset {$/;"	s	language:C++
bitmap_count	code/game_assets.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
bitmap_count	code/karu.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
bitmap_count	code/sui_pack.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
bitmap_count	game_assets.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
bitmap_count	karu.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
bitmap_count	sui_pack.h	/^  U32 bitmap_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
BITMAP_DEFAULT	code/generated_bitmap_ids.h	/^BITMAP_DEFAULT = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Bitmap_ID
BITMAP_DEFAULT	generated_bitmap_ids.h	/^BITMAP_DEFAULT = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Bitmap_ID
bitmap_id	code/game_assets.h	/^  Bitmap_ID bitmap_id;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:Bitmap_ID
bitmap_id	code/game_assets.h	/^  Bitmap_ID bitmap_id;$/;"	m	language:C++	struct:Sprite_Asset	typeref:typename:Bitmap_ID
Bitmap_ID	code/generated_bitmap_ids.h	/^enum Bitmap_ID {$/;"	g	language:C++
bitmap_id	code/karu.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
bitmap_id	code/karu.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Karu_Sprite	typeref:typename:U32
bitmap_id	code/sui_pack.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
bitmap_id	code/sui_pack.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:U32
bitmap_id	game_assets.h	/^  Bitmap_ID bitmap_id;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:Bitmap_ID
bitmap_id	game_assets.h	/^  Bitmap_ID bitmap_id;$/;"	m	language:C++	struct:Sprite_Asset	typeref:typename:Bitmap_ID
Bitmap_ID	generated_bitmap_ids.h	/^enum Bitmap_ID {$/;"	g	language:C++
bitmap_id	karu.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
bitmap_id	karu.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Karu_Sprite	typeref:typename:U32
bitmap_id	sui_pack.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
bitmap_id	sui_pack.h	/^  U32 bitmap_id;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:U32
bitmap_id_file	code/sui_pack.h	/^  FILE* bitmap_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
bitmap_id_file	sui_pack.h	/^  FILE* bitmap_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
bitmap_id_name	code/sui_atlas.h	/^  const char* bitmap_id_name;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:const char *
bitmap_id_name	sui_atlas.h	/^  const char* bitmap_id_name;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:const char *
bits_per_sample	code/momo_wav.h	/^  U16 bits_per_sample;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U16
bits_per_sample	code/w32_audio_wasapi.h	/^  U16 bits_per_sample;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
bits_per_sample	code/win_audio_wasapi.h	/^  U16 bits_per_sample;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
bits_per_sample	momo_wav.h	/^  U16 bits_per_sample;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U16
bits_per_sample	w32_audio_wasapi.h	/^  U16 bits_per_sample;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
bit_buffer	code/momo_streams.h	/^  U32 bit_buffer;$/;"	m	language:C++	struct:Stream	typeref:typename:U32
bit_buffer	momo_streams.h	/^  U32 bit_buffer;$/;"	m	language:C++	struct:Stream	typeref:typename:U32
bit_count	code/momo_streams.h	/^  U32 bit_count;$/;"	m	language:C++	struct:Stream	typeref:typename:U32
bit_count	momo_streams.h	/^  U32 bit_count;$/;"	m	language:C++	struct:Stream	typeref:typename:U32
bit_depth	code/momo_png.h	/^  U32 bit_depth;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
bit_depth	code/momo_png.h	/^  U8 bit_depth;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
bit_depth	code/momo_png.h	/^  U8 bit_depth;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8
bit_depth	momo_png.h	/^  U32 bit_depth;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
bit_depth	momo_png.h	/^  U8 bit_depth;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
bit_depth	momo_png.h	/^  U8 bit_depth;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8
blank_texture	code/game_gfx_opengl.h	/^  OGL_Texture blank_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
blank_texture	code/game_renderer_opengl.h	/^  Texture blank_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:Texture
blank_texture	game_gfx_opengl.h	/^  OGL_Texture blank_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
blk_bad	code/momo_common.h	/^blk_bad() {$/;"	f	language:C++	typeref:typename:Block
blk_bad	momo_common.h	/^blk_bad() {$/;"	f	language:C++	typeref:typename:Block
blk_ok	code/momo_common.h	/^blk_ok(Block blk) {$/;"	f	language:C++	typeref:typename:B32
blk_ok	momo_common.h	/^blk_ok(Block blk) {$/;"	f	language:C++	typeref:typename:B32
Block	code/momo_common.h	/^} Block;$/;"	t	language:C++	typeref:struct:__anonbacee3e50908
Block	momo_common.h	/^} Block;$/;"	t	language:C++	typeref:struct:__anonf95f05fb0908
block_align	code/momo_wav.h	/^  U16 block_align;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U16
block_align	momo_wav.h	/^  U16 block_align;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U16
block_name	code/game_profiler.h	/^  const char* block_name;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:const char *
block_name	game_profiler.h	/^  const char* block_name;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:const char *
boolean	build/test_json.json	/^  "boolean": true,$/;"	b	language:JSON
boolean2	build/test_json.json	/^  "boolean2": false,$/;"	b	language:JSON
box	code/game_assets.h	/^  Rect2 box;$/;"	m	language:C++	struct:Font_Glyph_Asset	typeref:typename:Rect2
box	code/karu.h	/^  Rect2 box;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:Rect2
box	game_assets.h	/^  Rect2 box;$/;"	m	language:C++	struct:Font_Glyph_Asset	typeref:typename:Rect2
box	karu.h	/^  Rect2 box;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:Rect2
bpm_to_spb_f32	code/momo_common.h	/^bpm_to_spb_f32(F32 bpm) {$/;"	f	language:C++	typeref:typename:F32
bpm_to_spb_f32	momo_common.h	/^bpm_to_spb_f32(F32 bpm) {$/;"	f	language:C++	typeref:typename:F32
bpm_to_spb_f64	code/momo_common.h	/^bpm_to_spb_f64(F64 bpm) {$/;"	f	language:C++	typeref:typename:F64
bpm_to_spb_f64	momo_common.h	/^bpm_to_spb_f64(F64 bpm) {$/;"	f	language:C++	typeref:typename:F64
buffer	code/game_console.h	/^  U8 buffer[256];$/;"	m	language:C++	struct:Console_Line	typeref:typename:U8[256]
buffer	code/w32_audio_wasapi.h	/^  S16* buffer;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:S16 *
buffer	code/win_audio_wasapi.h	/^  S16* buffer;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:S16 *
buffer	game_console.h	/^  U8 buffer[256];$/;"	m	language:C++	struct:Console_Line	typeref:typename:U8[256]
buffer	w32_audio_wasapi.h	/^  S16* buffer;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:S16 *
bufferCount	test.c	/^    int bufferCount;            \/\/ Number of vertex buffers (multi-buffering support)$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:int	file:
buffers	code/game_gfx_opengl.h	/^  GLuint buffers[OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT]; \/\/ Opengl__VBO_Count$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLuint[]
buffers	code/game_gfx_opengl.h	/^  GLuint buffers[OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT];$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLuint[]
buffers	code/game_renderer_opengl.h	/^  GLuint buffers;$/;"	m	language:C++	struct:Triangle_Batcher	typeref:typename:GLuint
buffers	code/game_renderer_opengl.h	/^  GLuint buffers[VERTEX_BUFFER_TYPE_COUNT]; \/\/ Opengl__VBO_Count$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLuint[]
buffers	game_gfx_opengl.h	/^  GLuint buffers[OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT]; \/\/ Opengl__VBO_Count$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLuint[]
buffers	game_gfx_opengl.h	/^  GLuint buffers[OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT];$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLuint[]
buffer_size	code/w32_audio_wasapi.h	/^  U32 buffer_size;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
buffer_size	code/win_audio_wasapi.h	/^  U32 buffer_size;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
buffer_size	w32_audio_wasapi.h	/^  U32 buffer_size;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
Bump_Allocator	code/momo_memory.h	/^} Bump_Allocator;$/;"	t	language:C++	typeref:struct:__anonf3c0da150108
Bump_Allocator	momo_memory.h	/^} Bump_Allocator;$/;"	t	language:C++	typeref:struct:__anon3250fc2b0108
Bump_Allocator_Marker	code/momo_memory.h	/^} Bump_Allocator_Marker;$/;"	t	language:C++	typeref:struct:__anonf3c0da150208
Bump_Allocator_Marker	momo_memory.h	/^} Bump_Allocator_Marker;$/;"	t	language:C++	typeref:struct:__anon3250fc2b0208
buttons	code/game_platform.h	/^    Platform_Button buttons[13];$/;"	m	language:C++	union:Platform::__anon7974dca3010a	typeref:typename:Platform_Button[13]
buttons	game_platform.h	/^    Platform_Button buttons[13];$/;"	m	language:C++	union:Platform::__anon9c95dc39010a	typeref:typename:Platform_Button[13]
button_console	code/game_platform.h	/^      Platform_Button button_console;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_console	game_platform.h	/^      Platform_Button button_console;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_down	code/game_platform.h	/^      Platform_Button button_down;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_down	game_platform.h	/^      Platform_Button button_down;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_editor0	code/game_platform.h	/^      Platform_Button button_editor0;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_editor0	game_platform.h	/^      Platform_Button button_editor0;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_editor1	code/game_platform.h	/^      Platform_Button button_editor1;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_editor1	game_platform.h	/^      Platform_Button button_editor1;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_editor2	code/game_platform.h	/^      Platform_Button button_editor2;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_editor2	game_platform.h	/^      Platform_Button button_editor2;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_editor3	code/game_platform.h	/^      Platform_Button button_editor3;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_editor3	game_platform.h	/^      Platform_Button button_editor3;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_editor_on	code/game_platform.h	/^      Platform_Button button_editor_on;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_editor_on	game_platform.h	/^      Platform_Button button_editor_on;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_left	code/game_platform.h	/^      Platform_Button button_left;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_left	game_platform.h	/^      Platform_Button button_left;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_right	code/game_platform.h	/^      Platform_Button button_right;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_right	game_platform.h	/^      Platform_Button button_right;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_rotate_left	code/game_platform.h	/^      Platform_Button button_rotate_left;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_rotate_left	game_platform.h	/^      Platform_Button button_rotate_left;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_rotate_right	code/game_platform.h	/^      Platform_Button button_rotate_right;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_rotate_right	game_platform.h	/^      Platform_Button button_rotate_right;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_up	code/game_platform.h	/^      Platform_Button button_up;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_up	game_platform.h	/^      Platform_Button button_up;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
button_use	code/game_platform.h	/^      Platform_Button button_use;$/;"	m	language:C++	struct:Platform::__anon7974dca3010a::__anon7974dca30208	typeref:typename:Platform_Button
button_use	game_platform.h	/^      Platform_Button button_use;$/;"	m	language:C++	struct:Platform::__anon9c95dc39010a::__anon9c95dc390208	typeref:typename:Platform_Button
byte_rate	code/momo_wav.h	/^  U32 byte_rate;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U32
byte_rate	momo_wav.h	/^  U32 byte_rate;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U32
c	code/test_essentials.h	/^      char c[2];$/;"	m	language:C++	union:test_essentials::__anon6a37947f010a	typeref:typename:char[2]
c	code/test_essentials.h	/^      char c[4];$/;"	m	language:C++	union:test_essentials::__anon6a37947f020a	typeref:typename:char[4]
c	test_essentials.h	/^      char c[2];$/;"	m	language:C++	union:test_essentials::__anond996d195010a	typeref:typename:char[2]
c	test_essentials.h	/^      char c[4];$/;"	m	language:C++	union:test_essentials::__anond996d195020a	typeref:typename:char[4]
C8	code/momo_common.h	/^typedef char C8;$/;"	t	language:C++	typeref:typename:char
C8	momo_common.h	/^typedef char C8;$/;"	t	language:C++	typeref:typename:char
cabinet_index	code/w32.cpp	/^  U32 cabinet_index;$/;"	m	language:C++	struct:W32_File	typeref:typename:U32	file:
cabinet_index	code/win.cpp	/^  U32 cabinet_index;$/;"	m	language:C++	struct:Win_File	typeref:typename:U32	file:
cabinet_index	w32.cpp	/^  U32 cabinet_index;$/;"	m	language:C++	struct:W32_File	typeref:typename:U32	file:
calc_ghost_edge_line	code/game_mode_level_light.cpp	/^calc_ghost_edge_line(Array_List<V2>* points, Edge* e) {$/;"	f	language:C++	typeref:typename:Line2	file:
calc_ghost_edge_line	game_mode_level_light.cpp	/^calc_ghost_edge_line(Array_List<V2>* points, Edge* e) {$/;"	f	language:C++	typeref:typename:Line2	file:
callback	code/w32.cpp	/^  Platform_Task_Callback* callback;$/;"	m	language:C++	struct:W32_Work	typeref:typename:Platform_Task_Callback *	file:
callback	code/win.cpp	/^  Platform_Task_Callback* callback;$/;"	m	language:C++	struct:Win_Work	typeref:typename:Platform_Task_Callback *	file:
callback	w32.cpp	/^  Platform_Task_Callback* callback;$/;"	m	language:C++	struct:W32_Work	typeref:typename:Platform_Task_Callback *	file:
canvas_height	code/game_painter.h	/^  F32 canvas_height;$/;"	m	language:C++	struct:Painter	typeref:typename:F32
canvas_width	code/game_painter.h	/^  F32 canvas_width;$/;"	m	language:C++	struct:Painter	typeref:typename:F32
cap	code/momo_memory.h	/^	UMI cap;$/;"	m	language:C++	struct:__anonf3c0da150108	typeref:typename:UMI
cap	code/momo_strings.h	/^	UMI cap;$/;"	m	language:C++	struct:__anon713555860208	typeref:typename:UMI
cap	code/momo_ttf.h	/^  U32 cap;$/;"	m	language:C++	struct:__anon54d1bdca0708	typeref:typename:U32
cap	momo_memory.h	/^	UMI cap;$/;"	m	language:C++	struct:__anon3250fc2b0108	typeref:typename:UMI
cap	momo_strings.h	/^	UMI cap;$/;"	m	language:C++	struct:__anon81c9ba5c0208	typeref:typename:UMI
cap	momo_ttf.h	/^  U32 cap;$/;"	m	language:C++	struct:__anon4eb927a00708	typeref:typename:U32
car	build/test_json.json	/^  "car":null, $/;"	z	language:JSON
car	code/test_json.json	/^{"name":"John", "age":30, "car":null}$/;"	z	language:JSON
ceil_f32	code/momo_intrinsics.h	/^static F32 ceil_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
ceil_f32	code/momo_intrinsics.h	/^static F32 ceil_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
ceil_f32	momo_intrinsics.h	/^static F32 ceil_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
ceil_f32	momo_intrinsics.h	/^static F32 ceil_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
ceil_f64	code/momo_intrinsics.h	/^static F64 ceil_f64(F64 value) {$/;"	f	language:C++	typeref:typename:F64
ceil_f64	code/momo_intrinsics.h	/^static F64 ceil_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
ceil_f64	momo_intrinsics.h	/^static F64 ceil_f64(F64 value) {$/;"	f	language:C++	typeref:typename:F64
ceil_f64	momo_intrinsics.h	/^static F64 ceil_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
center	code/momo_shapes.h	/^  V2 center;$/;"	m	language:C++	struct:__anon484784200608	typeref:typename:V2
center	momo_shapes.h	/^  V2 center;$/;"	m	language:C++	struct:__anon86d7a6360608	typeref:typename:V2
channels	code/game_platform.h	/^    U32 channels; \/\/TODO: remove this?$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:U32
channels	code/w32_audio_wasapi.h	/^  U16 channels;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
channels	code/win_audio_wasapi.h	/^  U16 channels;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
channels	game_platform.h	/^    U32 channels; \/\/TODO: remove this?$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:U32
channels	w32_audio_wasapi.h	/^  U16 channels;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U16
chars	code/game_platform.h	/^  U8 chars[32];$/;"	m	language:C++	struct:Platform	typeref:typename:U8[32]
chars	game_platform.h	/^  U8 chars[32];$/;"	m	language:C++	struct:Platform	typeref:typename:U8[32]
char_count	code/game_platform.h	/^  U32 char_count;$/;"	m	language:C++	struct:Platform	typeref:typename:U32
char_count	game_platform.h	/^  U32 char_count;$/;"	m	language:C++	struct:Platform	typeref:typename:U32
CINTERFACE	code/w32.h	/^#define CINTERFACE$/;"	d	language:C++
CINTERFACE	code/win.h	/^#define CINTERFACE$/;"	d	language:C++
CINTERFACE	w32.h	/^#define CINTERFACE$/;"	d	language:C++
circ2	code/momo_shapes.h	/^circ2(V2 center, F32 radius) {$/;"	f	language:C++	typeref:typename:Circ2
Circ2	code/momo_shapes.h	/^}Circ2;$/;"	t	language:C++	typeref:struct:__anon484784200608
circ2	momo_shapes.h	/^circ2(V2 center, F32 radius) {$/;"	f	language:C++	typeref:typename:Circ2
Circ2	momo_shapes.h	/^}Circ2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360608
clamp_of	code/momo_common.h	/^#define clamp_of(/;"	d	language:C++
clamp_of	momo_common.h	/^#define clamp_of(/;"	d	language:C++
clear_editor_state	code/game_mode_level_editor.cpp	/^clear_editor_state(Editor* e) {$/;"	f	language:C++	typeref:typename:void	file:
clear_editor_state	game_mode_level_editor.cpp	/^clear_editor_state(Editor* e) {$/;"	f	language:C++	typeref:typename:void	file:
close_file	code/game_platform.h	/^  Platform_Close_File* close_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Close_File *
close_file	code/game_platform.h	/^  Platform_Close_File* close_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Close_File *
close_file	game_platform.h	/^  Platform_Close_File* close_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Close_File *
close_file	game_platform.h	/^  Platform_Close_File* close_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Close_File *
cmap	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
cmap	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
cmap_mappings	code/momo_ttf.h	/^  U32 cmap_mappings;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
cmap_mappings	momo_ttf.h	/^  U32 cmap_mappings;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
COBJMACROS	code/w32.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	code/w32.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	code/win.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	code/win.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	w32.h	/^#define COBJMACROS$/;"	d	language:C++
COBJMACROS	w32.h	/^#define COBJMACROS$/;"	d	language:C++
codepoint	code/karu.h	/^  U32 codepoint;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:U32
codepoint	code/sui_atlas.h	/^  U32 codepoint;$/;"	m	language:C++	struct:Sui_Atlas_Font_Glyph_Context	typeref:typename:U32
codepoint	code/sui_pack.h	/^  U32 codepoint; $/;"	m	language:C++	struct:Sui_Packer_Font_Glyph	typeref:typename:U32
codepoint	karu.h	/^  U32 codepoint;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:U32
codepoint	sui_atlas.h	/^  U32 codepoint;$/;"	m	language:C++	struct:Sui_Atlas_Font_Glyph_Context	typeref:typename:U32
codepoint	sui_pack.h	/^  U32 codepoint; $/;"	m	language:C++	struct:Sui_Packer_Font_Glyph	typeref:typename:U32
codepoints	code/sui_atlas.h	/^  U32* codepoints;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32 *
codepoints	sui_atlas.h	/^  U32* codepoints;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32 *
codepoint_count	code/sui_atlas.h	/^  U32 codepoint_count;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32
codepoint_count	sui_atlas.h	/^  U32 codepoint_count;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32
codepoint_map	code/game_assets.h	/^  U32* codepoint_map;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32 *
codepoint_map	game_assets.h	/^  U32* codepoint_map;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32 *
code_dir	code/sui.h	/^#define code_dir(/;"	d	language:C++
code_dir	sui.h	/^#define code_dir(/;"	d	language:C++
color	.\code\game_sb1.h	/^  U32 color;$/;"	m	language:C++	struct:SB1_Light
color	code/game_mode_lit_light.h	/^  U32 color;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:U32
color	game_mode_lit_light.h	/^  U32 color;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:U32
colora	test.c	/^        unsigned char colorr, colorg, colorb, colora;   \/\/ Current active color (added on glVe/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned char	file:
colorb	test.c	/^        unsigned char colorr, colorg, colorb, colora;   \/\/ Current active color (added on glVe/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned char	file:
colorg	test.c	/^        unsigned char colorr, colorg, colorb, colora;   \/\/ Current active color (added on glVe/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned char	file:
colorr	test.c	/^        unsigned char colorr, colorg, colorb, colora;   \/\/ Current active color (added on glVe/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned char	file:
colors	code/game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Clear	typeref:typename:RGBA
colors	code/game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:RGBA
colors	code/game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:RGBA
colors	code/game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:RGBA
colors	code/game_renderer.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Clear	typeref:typename:RGBA
colors	code/game_renderer.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:RGBA
colors	code/game_renderer.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:RGBA
colors	code/game_renderer.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:RGBA
colors	game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Clear	typeref:typename:RGBA
colors	game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:RGBA
colors	game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:RGBA
colors	game_gfx.h	/^  RGBA colors;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:RGBA
colors	test.c	/^    unsigned char *colors;      \/\/ Vertex colors (RGBA - 4 components per vertex) (shader-loca/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:unsigned char *	file:
color_end	code/game_mode_lit_particles.h	/^  RGBA color_start, color_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:RGBA
color_end	game_mode_lit_particles.h	/^  RGBA color_start, color_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:RGBA
color_start	code/game_mode_lit_particles.h	/^  RGBA color_start, color_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:RGBA
color_start	game_mode_lit_particles.h	/^  RGBA color_start, color_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:RGBA
colour_type	code/momo_png.h	/^  U8 colour_type;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
colour_type	code/momo_png.h	/^  U8 colour_type;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8
colour_type	momo_png.h	/^  U8 colour_type;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
colour_type	momo_png.h	/^  U8 colour_type;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8
commands	code/game_console.h	/^  Console_Command commands[10];$/;"	m	language:C++	struct:Console	typeref:typename:Console_Command[10]
commands	game_console.h	/^  Console_Command commands[10];$/;"	m	language:C++	struct:Console	typeref:typename:Console_Command[10]
command_count	code/game_console.h	/^  U32 command_count;$/;"	m	language:C++	struct:Console	typeref:typename:U32
command_count	game_console.h	/^  U32 command_count;$/;"	m	language:C++	struct:Console	typeref:typename:U32
command_queue	code/game_gfx.h	/^  Gfx_Command_Queue command_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Command_Queue
command_queue	code/game_renderer.h	/^  Gfx_Command_Queue command_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Command_Queue
command_queue	game_gfx.h	/^  Gfx_Command_Queue command_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Command_Queue
COMPILER_CLANG	code/momo_common.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_CLANG	code/momo_common.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_CLANG	momo_common.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_CLANG	momo_common.h	/^# define COMPILER_CLANG /;"	d	language:C++
COMPILER_GCC	code/momo_common.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_GCC	code/momo_common.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_GCC	momo_common.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_GCC	momo_common.h	/^# define COMPILER_GCC /;"	d	language:C++
COMPILER_MSVC	code/momo_common.h	/^# define COMPILER_MSVC /;"	d	language:C++
COMPILER_MSVC	code/momo_common.h	/^# define COMPILER_MSVC /;"	d	language:C++
COMPILER_MSVC	momo_common.h	/^# define COMPILER_MSVC /;"	d	language:C++
COMPILER_MSVC	momo_common.h	/^# define COMPILER_MSVC /;"	d	language:C++
complete_all_tasks	code/game_platform.h	/^  Platform_Complete_All_Tasks* complete_all_tasks;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Complete_All_Tasks *
complete_all_tasks	code/game_platform.h	/^  Platform_Complete_All_Tasks* complete_all_tasks;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Complete_All_Tasks *
complete_all_tasks	game_platform.h	/^  Platform_Complete_All_Tasks* complete_all_tasks;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Complete_All_Tasks *
complete_all_tasks	game_platform.h	/^  Platform_Complete_All_Tasks* complete_all_tasks;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Complete_All_Tasks *
completion_count	code/w32.cpp	/^  U32 volatile completion_count;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
completion_count	code/win.cpp	/^  U32 volatile completion_count;$/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:U32 volatile	file:
completion_count	w32.cpp	/^  U32 volatile completion_count;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
completion_goal	code/w32.cpp	/^  U32 volatile completion_goal;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
completion_goal	code/win.cpp	/^  U32 volatile completion_goal;$/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:U32 volatile	file:
completion_goal	w32.cpp	/^  U32 volatile completion_goal;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
compressed_image_stream	code/momo_png.h	/^  Stream compressed_image_stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
compressed_image_stream	momo_png.h	/^  Stream compressed_image_stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
compression_flags	code/momo_png.h	/^  U8 compression_flags;$/;"	m	language:C++	struct:_PNG_IDAT_Header	typeref:typename:U8
compression_flags	momo_png.h	/^  U8 compression_flags;$/;"	m	language:C++	struct:_PNG_IDAT_Header	typeref:typename:U8
compression_method	code/momo_png.h	/^  U8 compression_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
compression_method	code/momo_png.h	/^  U8 compression_method;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8
compression_method	momo_png.h	/^  U8 compression_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
compression_method	momo_png.h	/^  U8 compression_method;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8
Computer	code/game_mode_computer.h	/^} Computer;$/;"	t	language:C++	typeref:struct:__anond0a24e910308
Computer	game_mode_computer.h	/^} Computer;$/;"	t	language:C++	typeref:struct:__anon19207be70308
computer_add_selection	code/game_mode_computer.h	/^computer_add_selection(Computer* com, String8 text, Game_Mode_Type mode_type) {$/;"	f	language:C++	typeref:typename:void
computer_add_selection	game_mode_computer.h	/^computer_add_selection(Computer* com, String8 text, Game_Mode_Type mode_type) {$/;"	f	language:C++	typeref:typename:void
Computer_Selection	code/game_mode_computer.h	/^} Computer_Selection;$/;"	t	language:C++	typeref:struct:__anond0a24e910108
Computer_Selection	game_mode_computer.h	/^} Computer_Selection;$/;"	t	language:C++	typeref:struct:__anon19207be70108
Computer_Selection_List	code/game_mode_computer.h	/^} Computer_Selection_List;$/;"	t	language:C++	typeref:struct:__anond0a24e910208
Computer_Selection_List	game_mode_computer.h	/^} Computer_Selection_List;$/;"	t	language:C++	typeref:struct:__anon19207be70208
computer_tick	code/game_mode_computer.h	/^computer_tick(Game* game,$/;"	f	language:C++	typeref:typename:void
computer_tick	game_mode_computer.h	/^computer_tick(Game* game,$/;"	f	language:C++	typeref:typename:void
computeShader	test.c	/^        bool computeShader;                 \/\/ Compute shaders support (GL_ARB_compute_shader)$/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
console	code/game.h	/^  Console console;$/;"	m	language:C++	struct:Game	typeref:typename:Console
Console	code/game_console.h	/^struct Console {$/;"	s	language:C++
console	game.h	/^  Console console;$/;"	m	language:C++	struct:Game	typeref:typename:Console
Console	game_console.h	/^struct Console {$/;"	s	language:C++
Console_Command	code/game_console.h	/^struct Console_Command {$/;"	s	language:C++
Console_Command	game_console.h	/^struct Console_Command {$/;"	s	language:C++
Console_Line	code/game_console.h	/^struct Console_Line {$/;"	s	language:C++
Console_Line	game_console.h	/^struct Console_Line {$/;"	s	language:C++
CONST_VTABLE	code/w32.h	/^#define CONST_VTABLE$/;"	d	language:C++
CONST_VTABLE	code/win.h	/^#define CONST_VTABLE$/;"	d	language:C++
CONST_VTABLE	w32.h	/^#define CONST_VTABLE$/;"	d	language:C++
contour_count	code/momo_ttf.h	/^  U32 contour_count;$/;"	m	language:C++	struct:__anon54d1bdca0408	typeref:typename:U32
contour_count	momo_ttf.h	/^  U32 contour_count;$/;"	m	language:C++	struct:__anon4eb927a00408	typeref:typename:U32
copy_array	code/momo_common.h	/^#define copy_array(/;"	d	language:C++
copy_array	momo_common.h	/^#define copy_array(/;"	d	language:C++
copy_memory	code/momo_common.h	/^copy_memory(void* dest, const void* src, UMI size) {$/;"	f	language:C++	typeref:typename:void
copy_memory	code/momo_common.h	/^copy_memory(void* dest, const void* src, UMI size) {$/;"	f	language:C++	typeref:typename:void
copy_memory	momo_common.h	/^copy_memory(void* dest, const void* src, UMI size) {$/;"	f	language:C++	typeref:typename:void
copy_memory	momo_common.h	/^copy_memory(void* dest, const void* src, UMI size) {$/;"	f	language:C++	typeref:typename:void
copy_range	code/momo_common.h	/^#define copy_range(/;"	d	language:C++
copy_range	momo_common.h	/^#define copy_range(/;"	d	language:C++
copy_struct	code/momo_common.h	/^#define copy_struct(/;"	d	language:C++
copy_struct	momo_common.h	/^#define copy_struct(/;"	d	language:C++
cos_f32	code/momo_intrinsics.h	/^cos_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
cos_f32	code/momo_intrinsics.h	/^static F32 cos_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
cos_f32	momo_intrinsics.h	/^cos_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
cos_f32	momo_intrinsics.h	/^static F32 cos_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
cos_f64	code/momo_intrinsics.h	/^cos_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
cos_f64	code/momo_intrinsics.h	/^static F64 cos_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
cos_f64	momo_intrinsics.h	/^cos_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
cos_f64	momo_intrinsics.h	/^static F64 cos_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Edge_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Light_Debug_Ray_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Light_Intersection_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Light_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Light_Triangle_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Point_List
count	.\code\game_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:SB1_Sensor_List
count	code/game_inspector.h	/^  U32 count;$/;"	m	language:C++	struct:Inspector_Entry_List	typeref:typename:U32
count	code/game_mode_computer.h	/^  U32 count;$/;"	m	language:C++	struct:__anond0a24e910208	typeref:typename:U32
count	code/game_mode_lit.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:U32
count	code/game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Debug_Ray_List	typeref:typename:U32
count	code/game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Intersection_List	typeref:typename:U32
count	code/game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_List	typeref:typename:U32
count	code/game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Triangle_List	typeref:typename:U32
count	code/game_mode_lit_sensors.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:U32
count	code/game_mode_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:U32
count	code/game_mode_sb1.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Point_List	typeref:typename:U32
count	code/game_profiler_rendering.h	/^  U32 count;$/;"	m	language:C++	struct:Stat	typeref:typename:U32
count	code/momo_strings.h	/^			UMI count;$/;"	m	language:C++	struct:__anon713555860208::__anon71355586030a::__anon713555860408	typeref:typename:UMI
count	code/momo_strings.h	/^	UMI count;$/;"	m	language:C++	struct:__anon713555860108	typeref:typename:UMI
count	code/momo_ttf.h	/^  U32 count;$/;"	m	language:C++	struct:__anon54d1bdca0708	typeref:typename:U32
count	game_inspector.h	/^  U32 count;$/;"	m	language:C++	struct:Inspector_Entry_List	typeref:typename:U32
count	game_mode_computer.h	/^  U32 count;$/;"	m	language:C++	struct:__anon19207be70208	typeref:typename:U32
count	game_mode_lit.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:U32
count	game_mode_lit.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Point_List	typeref:typename:U32
count	game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Debug_Ray_List	typeref:typename:U32
count	game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Intersection_List	typeref:typename:U32
count	game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_List	typeref:typename:U32
count	game_mode_lit_light.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Light_Triangle_List	typeref:typename:U32
count	game_mode_lit_sensors.h	/^  U32 count;$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:U32
count	game_profiler_rendering.h	/^  U32 count;$/;"	m	language:C++	struct:Stat	typeref:typename:U32
count	momo_strings.h	/^			UMI count;$/;"	m	language:C++	struct:__anon81c9ba5c0208::__anon81c9ba5c030a::__anon81c9ba5c0408	typeref:typename:UMI
count	momo_strings.h	/^	UMI count;$/;"	m	language:C++	struct:__anon81c9ba5c0108	typeref:typename:UMI
count	momo_ttf.h	/^  U32 count;$/;"	m	language:C++	struct:__anon4eb927a00708	typeref:typename:U32
crc	code/momo_png.h	/^  U32 crc; $/;"	m	language:C++	struct:_PNG_Chunk_Footer	typeref:typename:U32
crc	momo_png.h	/^  U32 crc; $/;"	m	language:C++	struct:_PNG_Chunk_Footer	typeref:typename:U32
crc16	code/momo_crc.h	/^crc16(U8* data, U32 data_size, U16 start_register, CRC16_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc16	code/momo_crc.h	/^static U32 crc16(U8* data, U32 data_size, U16 start_register, CRC16_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc16	momo_crc.h	/^crc16(U8* data, U32 data_size, U16 start_register, CRC16_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc16	momo_crc.h	/^static U32 crc16(U8* data, U32 data_size, U16 start_register, CRC16_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc16_init_table	code/momo_crc.h	/^crc16_init_table(CRC16_Table* table, U16 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc16_init_table	code/momo_crc.h	/^static void crc16_init_table(CRC16_Table* table, U16 polynomial);$/;"	p	language:C++	typeref:typename:void
crc16_init_table	momo_crc.h	/^crc16_init_table(CRC16_Table* table, U16 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc16_init_table	momo_crc.h	/^static void crc16_init_table(CRC16_Table* table, U16 polynomial);$/;"	p	language:C++	typeref:typename:void
crc16_slow	code/momo_crc.h	/^crc16_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc16_slow	code/momo_crc.h	/^static U32 crc16_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial);$/;"	p	language:C++	typeref:typename:U32
crc16_slow	momo_crc.h	/^crc16_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc16_slow	momo_crc.h	/^static U32 crc16_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial);$/;"	p	language:C++	typeref:typename:U32
CRC16_Table	code/momo_crc.h	/^}CRC16_Table;$/;"	t	language:C++	typeref:struct:__anon539cf7b40208
CRC16_Table	momo_crc.h	/^}CRC16_Table;$/;"	t	language:C++	typeref:struct:__anon4d84618a0208
crc32	code/momo_crc.h	/^crc32(U8* data, U32 data_size, U16 start_register, CRC32_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc32	code/momo_crc.h	/^static U32 crc32(U8* data, U32 data_size, U16 start_register, CRC32_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc32	momo_crc.h	/^crc32(U8* data, U32 data_size, U16 start_register, CRC32_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc32	momo_crc.h	/^static U32 crc32(U8* data, U32 data_size, U16 start_register, CRC32_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc32_init_table	code/momo_crc.h	/^crc32_init_table(CRC32_Table* table,U32 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc32_init_table	code/momo_crc.h	/^static void crc32_init_table(CRC32_Table* table, U32 polynomial);$/;"	p	language:C++	typeref:typename:void
crc32_init_table	momo_crc.h	/^crc32_init_table(CRC32_Table* table,U32 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc32_init_table	momo_crc.h	/^static void crc32_init_table(CRC32_Table* table, U32 polynomial);$/;"	p	language:C++	typeref:typename:void
crc32_slow	code/momo_crc.h	/^crc32_slow(U8* data, U32 data_size, U32 start_register, U32 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc32_slow	code/momo_crc.h	/^static U32 crc32_slow(U8* data, U32 data_size, U32 start_register, U32 polynomial);$/;"	p	language:C++	typeref:typename:U32
crc32_slow	momo_crc.h	/^crc32_slow(U8* data, U32 data_size, U32 start_register, U32 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc32_slow	momo_crc.h	/^static U32 crc32_slow(U8* data, U32 data_size, U32 start_register, U32 polynomial);$/;"	p	language:C++	typeref:typename:U32
CRC32_Table	code/momo_crc.h	/^}CRC32_Table;$/;"	t	language:C++	typeref:struct:__anon539cf7b40108
CRC32_Table	momo_crc.h	/^}CRC32_Table;$/;"	t	language:C++	typeref:struct:__anon4d84618a0108
crc8	code/momo_crc.h	/^crc8(U8* data, U32 data_size, U8 start_register, CRC8_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc8	code/momo_crc.h	/^static U32 crc8(U8* data, U32 data_size, U8 start_register, CRC8_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc8	momo_crc.h	/^crc8(U8* data, U32 data_size, U8 start_register, CRC8_Table* table) {$/;"	f	language:C++	typeref:typename:U32
crc8	momo_crc.h	/^static U32 crc8(U8* data, U32 data_size, U8 start_register, CRC8_Table* table);$/;"	p	language:C++	typeref:typename:U32
crc8_init_table	code/momo_crc.h	/^crc8_init_table(CRC8_Table* table, U8 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc8_init_table	code/momo_crc.h	/^static void crc8_init_table(CRC8_Table* table, U8 polynomial); $/;"	p	language:C++	typeref:typename:void
crc8_init_table	momo_crc.h	/^crc8_init_table(CRC8_Table* table, U8 polynomial) {$/;"	f	language:C++	typeref:typename:void
crc8_init_table	momo_crc.h	/^static void crc8_init_table(CRC8_Table* table, U8 polynomial); $/;"	p	language:C++	typeref:typename:void
crc8_slow	code/momo_crc.h	/^crc8_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc8_slow	code/momo_crc.h	/^static U32 crc8_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial);$/;"	p	language:C++	typeref:typename:U32
crc8_slow	momo_crc.h	/^crc8_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial) {$/;"	f	language:C++	typeref:typename:U32
crc8_slow	momo_crc.h	/^static U32 crc8_slow(U8* data, U32 data_size, U16 start_register, U16 polynomial);$/;"	p	language:C++	typeref:typename:U32
CRC8_Table	code/momo_crc.h	/^}CRC8_Table;$/;"	t	language:C++	typeref:struct:__anon539cf7b40308
CRC8_Table	momo_crc.h	/^}CRC8_Table;$/;"	t	language:C++	typeref:struct:__anon4d84618a0308
cstr_clear	code/momo_common.h	/^cstr_clear(C8* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_clear	momo_common.h	/^cstr_clear(C8* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_compare	code/momo_common.h	/^cstr_compare(const C8* lhs, const C8* rhs) {$/;"	f	language:C++	typeref:typename:B32
cstr_compare	momo_common.h	/^cstr_compare(const C8* lhs, const C8* rhs) {$/;"	f	language:C++	typeref:typename:B32
cstr_compare_n	code/momo_common.h	/^cstr_compare_n(const C8* lhs, const C8* rhs, UMI n) {$/;"	f	language:C++	typeref:typename:B32
cstr_compare_n	momo_common.h	/^cstr_compare_n(const C8* lhs, const C8* rhs, UMI n) {$/;"	f	language:C++	typeref:typename:B32
cstr_concat	code/momo_common.h	/^cstr_concat(C8* dest, const C8* Src) {$/;"	f	language:C++	typeref:typename:void
cstr_concat	momo_common.h	/^cstr_concat(C8* dest, const C8* Src) {$/;"	f	language:C++	typeref:typename:void
cstr_copy	code/momo_common.h	/^cstr_copy(C8 * dest, const C8* src) {$/;"	f	language:C++	typeref:typename:void
cstr_copy	momo_common.h	/^cstr_copy(C8 * dest, const C8* src) {$/;"	f	language:C++	typeref:typename:void
cstr_itoa	code/momo_common.h	/^cstr_itoa(C8* dest, S32 num) {$/;"	f	language:C++	typeref:typename:void
cstr_itoa	momo_common.h	/^cstr_itoa(C8* dest, S32 num) {$/;"	f	language:C++	typeref:typename:void
cstr_len	code/momo_common.h	/^cstr_len(const C8* str) {$/;"	f	language:C++	typeref:typename:UMI
cstr_len	momo_common.h	/^cstr_len(const C8* str) {$/;"	f	language:C++	typeref:typename:UMI
cstr_reverse	code/momo_common.h	/^cstr_reverse(C8* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_reverse	momo_common.h	/^cstr_reverse(C8* dest) {$/;"	f	language:C++	typeref:typename:void
cstr_to_f64	code/momo_common.h	/^cstr_to_f64(const C8* p) {$/;"	f	language:C++	typeref:typename:F64
cstr_to_f64	momo_common.h	/^cstr_to_f64(const C8* p) {$/;"	f	language:C++	typeref:typename:F64
ctx	code/game_console.h	/^  void* ctx;$/;"	m	language:C++	struct:Console_Command	typeref:typename:void *
ctx	game_console.h	/^  void* ctx;$/;"	m	language:C++	struct:Console_Command	typeref:typename:void *
currentBatch	test.c	/^    rlRenderBatch *currentBatch;            \/\/ Current render batch$/;"	m	language:C	struct:rlglData	typeref:typename:rlRenderBatch *	file:
currentBlendMode	test.c	/^        int currentBlendMode;               \/\/ Blending mode active$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
currentBuffer	test.c	/^    int currentBuffer;          \/\/ Current buffer tracking in case of multi-buffering$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:int	file:
currentDepth	test.c	/^    float currentDepth;         \/\/ Current depth value for next draw$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:float	file:
currentMatrix	test.c	/^        Matrix *currentMatrix;              \/\/ Current matrix pointer$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix *	file:
currentMatrixMode	test.c	/^        int currentMatrixMode;              \/\/ Current matrix mode$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
currentShaderId	test.c	/^        unsigned int currentShaderId;       \/\/ Current shader id to be used on rendering (by d/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int	file:
currentShaderLocs	test.c	/^        int *currentShaderLocs;             \/\/ Current shader locations pointer to be used on /;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int *	file:
current_atlas_bitmap_id	code/sui_pack.h	/^  U32 current_atlas_bitmap_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
current_atlas_bitmap_id	sui_pack.h	/^  U32 current_atlas_bitmap_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
current_atlas_font_id	code/sui_pack.h	/^  U32 current_atlas_font_id; $/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
current_atlas_font_id	sui_pack.h	/^  U32 current_atlas_font_id; $/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
current_color	.\code\game_sb1.h	/^  U32 current_color;$/;"	m	language:C++	struct:SB1_Sensor
current_color	code/game_mode_level.h	/^  U32 current_color;$/;"	m	language:C++	struct:Sensor	typeref:typename:U32
current_color	code/game_mode_lit_sensors.h	/^  U32 current_color;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:U32
current_color	game_mode_lit_sensors.h	/^  U32 current_color;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:U32
current_font	code/sui_pack.h	/^  Sui_Packer_Font* current_font;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font *
current_font	sui_pack.h	/^  Sui_Packer_Font* current_font;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font *
current_game_mode	code/game.h	/^  Game_Mode_Type current_game_mode;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Mode_Type
current_game_mode	game.h	/^  Game_Mode_Type current_game_mode;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Mode_Type
current_instance_index	code/game_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLuint
current_instance_index	code/game_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLuint
current_instance_index	code/game_renderer_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLuint
current_instance_index	game_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLuint
current_instance_index	game_gfx_opengl.h	/^  GLuint current_instance_index;$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLuint
current_layer	code/game_gfx_opengl.h	/^  F32 current_layer;$/;"	m	language:C++	struct:Opengl	typeref:typename:F32
current_layer	code/game_renderer_opengl.h	/^  F32 current_layer;$/;"	m	language:C++	struct:Opengl	typeref:typename:F32
current_layer	game_gfx_opengl.h	/^  F32 current_layer;$/;"	m	language:C++	struct:Opengl	typeref:typename:F32
current_level_id	code/game_mode_lit.h	/^  U32 current_level_id;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:U32
current_level_id	code/game_mode_sb1.h	/^  U32 current_level_id;$/;"	m	language:C++	struct:Lit	typeref:typename:U32
current_level_id	game_mode_lit.h	/^  U32 current_level_id;$/;"	m	language:C++	struct:Lit	typeref:typename:U32
current_pack_id_name	code/sui_pack.h	/^  const char* current_pack_id_name;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:const char *
current_pack_id_name	sui_pack.h	/^  const char* current_pack_id_name;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:const char *
current_state	code/game_mode_level_editor.h	/^  Editor_State current_state;$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_State
current_state	game_mode_level_editor.h	/^  Editor_State current_state;$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_State
current_texture	code/game_gfx_opengl.h	/^  GLuint current_texture;$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLuint
current_texture	code/game_renderer_opengl.h	/^  GLuint current_texture;$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLuint
current_texture	game_gfx_opengl.h	/^  GLuint current_texture;$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLuint
cycles	code/game_profiler.h	/^  U32 cycles;$/;"	m	language:C++	struct:Profiler_Snapshot	typeref:typename:U32
cycles	game_profiler.h	/^  U32 cycles;$/;"	m	language:C++	struct:Profiler_Snapshot	typeref:typename:U32
c_link	code/momo_common.h	/^#define c_link /;"	d	language:C++
c_link	momo_common.h	/^#define c_link /;"	d	language:C++
c_link_begin	code/momo_common.h	/^#define c_link_begin /;"	d	language:C++
c_link_begin	momo_common.h	/^#define c_link_begin /;"	d	language:C++
c_link_end	code/momo_common.h	/^#define c_link_end /;"	d	language:C++
c_link_end	momo_common.h	/^#define c_link_end /;"	d	language:C++
d	code/momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20d08	typeref:typename:F32
d	momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780d08	typeref:typename:F32
data	code/game_gfx.h	/^  void* data;$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:void *
data	code/game_renderer.h	/^  void* data;$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:void *
data	code/momo_common.h	/^    void* data;$/;"	m	language:C++	union:__anonbacee3e50908::__anonbacee3e50a0a	typeref:typename:void *
data	code/momo_png.h	/^  U8* data;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8 *
data	code/momo_streams.h	/^  U8* data;$/;"	m	language:C++	struct:Stream	typeref:typename:U8 *
data	code/momo_ttf.h	/^  U8* data;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U8 *
data	code/momo_wav.h	/^  void* data;$/;"	m	language:C++	struct:__anon54fde02a0408	typeref:typename:void *
data	code/w32.cpp	/^  void* data;$/;"	m	language:C++	struct:W32_Work	typeref:typename:void *	file:
data	code/win.cpp	/^  void* data;$/;"	m	language:C++	struct:Win_Work	typeref:typename:void *	file:
data	game_gfx.h	/^  void* data;$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:void *
data	momo_common.h	/^    void* data;$/;"	m	language:C++	union:__anonf95f05fb0908::__anonf95f05fb0a0a	typeref:typename:void *
data	momo_png.h	/^  U8* data;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8 *
data	momo_streams.h	/^  U8* data;$/;"	m	language:C++	struct:Stream	typeref:typename:U8 *
data	momo_ttf.h	/^  U8* data;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U8 *
data	momo_wav.h	/^  void* data;$/;"	m	language:C++	struct:__anon4ee54a000408	typeref:typename:void *
data	w32.cpp	/^  void* data;$/;"	m	language:C++	struct:W32_Work	typeref:typename:void *	file:
data_chunk	code/momo_wav.h	/^  WAV_Data_Chunk data_chunk;$/;"	m	language:C++	struct:__anon54fde02a0408	typeref:typename:WAV_Data_Chunk
data_chunk	momo_wav.h	/^  WAV_Data_Chunk data_chunk;$/;"	m	language:C++	struct:__anon4ee54a000408	typeref:typename:WAV_Data_Chunk
data_count	code/karu.h	/^  U32 data_count;$/;"	m	language:C++	struct:Karu_Sound	typeref:typename:U32
data_count	karu.h	/^  U32 data_count;$/;"	m	language:C++	struct:Karu_Sound	typeref:typename:U32
data_pos	code/game_gfx.h	/^	UMI data_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
data_pos	code/game_renderer.h	/^	UMI data_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
data_pos	game_gfx.h	/^	UMI data_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
data_size	code/momo_png.h	/^  UMI data_size;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:UMI
data_size	momo_png.h	/^  UMI data_size;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:UMI
data_u8	code/momo_common.h	/^    U8* data_u8;$/;"	m	language:C++	union:__anonbacee3e50908::__anonbacee3e50a0a	typeref:typename:U8 *
data_u8	momo_common.h	/^    U8* data_u8;$/;"	m	language:C++	union:__anonf95f05fb0908::__anonf95f05fb0a0a	typeref:typename:U8 *
debug_arena	code/game.h	/^  Bump_Allocator debug_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
debug_arena	game.h	/^  Bump_Allocator debug_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
debug_log	code/game_platform.h	/^  Platform_Debug_Log* debug_log;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Debug_Log *
debug_log	code/game_platform.h	/^  Platform_Debug_Log* debug_log;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Debug_Log *
debug_log	game_platform.h	/^  Platform_Debug_Log* debug_log;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Debug_Log *
debug_log	game_platform.h	/^  Platform_Debug_Log* debug_log;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Debug_Log *
debug_rays	.\code\game_sb1.h	/^  SB1_Light_Debug_Ray_List debug_rays;$/;"	m	language:C++	struct:SB1_Light
debug_rays	code/game_mode_lit_light.h	/^  Lit_Light_Debug_Ray_List debug_rays;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Debug_Ray_List
debug_rays	game_mode_lit_light.h	/^  Lit_Light_Debug_Ray_List debug_rays;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Debug_Ray_List
Debug_State	code/game_debug.h	/^struct Debug_State {$/;"	s	language:C++
Debug_State	game_debug.h	/^struct Debug_State {$/;"	s	language:C++
defaultBatch	test.c	/^    rlRenderBatch defaultBatch;             \/\/ Default internal render batch$/;"	m	language:C	struct:rlglData	typeref:typename:rlRenderBatch	file:
defaultFShaderId	test.c	/^        unsigned int defaultFShaderId;      \/\/ Default fragment shader id (used by default sha/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int	file:
defaultShaderId	test.c	/^        unsigned int defaultShaderId;       \/\/ Default shader program id, supports vertex colo/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int	file:
defaultShaderLocs	test.c	/^        int *defaultShaderLocs;             \/\/ Default shader locations pointer to be used on /;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int *	file:
defaultTextureId	test.c	/^        unsigned int defaultTextureId;      \/\/ Default texture used on shapes\/poly drawing (r/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int	file:
defaultVShaderId	test.c	/^        unsigned int defaultVShaderId;      \/\/ Default vertex shader id (used by default shade/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:unsigned int	file:
defer	code/momo_common.h	/^# define defer /;"	d	language:C++
defer	momo_common.h	/^# define defer /;"	d	language:C++
DEG2RAD	test.c	/^    #define DEG2RAD /;"	d	language:C	file:
deg_to_rad_f32	code/momo_common.h	/^deg_to_rad_f32(F32 degrees) {$/;"	f	language:C++	typeref:typename:F32
deg_to_rad_f32	momo_common.h	/^deg_to_rad_f32(F32 degrees) {$/;"	f	language:C++	typeref:typename:F32
deg_to_rad_f64	code/momo_common.h	/^deg_to_rad_f64(F64 degrees) {$/;"	f	language:C++	typeref:typename:F64
deg_to_rad_f64	momo_common.h	/^deg_to_rad_f64(F64 degrees) {$/;"	f	language:C++	typeref:typename:F64
design_mouse_pos	code/game_platform.h	/^  V2 design_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2
design_mouse_pos	game_platform.h	/^  V2 design_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2
digit_to_ascii	code/momo_common.h	/^#define digit_to_ascii(/;"	d	language:C++
digit_to_ascii	momo_common.h	/^#define digit_to_ascii(/;"	d	language:C++
dims	code/momo_shapes.h	/^  V2 dims;$/;"	m	language:C++	struct:__anon484784200508	typeref:typename:V2
dims	momo_shapes.h	/^  V2 dims;$/;"	m	language:C++	struct:__anon86d7a6360508	typeref:typename:V2
dir	.\code\game_sb1.h	/^  V2 dir;$/;"	m	language:C++	struct:SB1_Light
dir	code/game_mode_lit_light.h	/^  V2 dir;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:V2
dir	code/momo_shapes.h	/^  V2 dir;$/;"	m	language:C++	struct:__anon484784200808	typeref:typename:V2
dir	game_mode_lit_light.h	/^  V2 dir;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:V2
dir	momo_shapes.h	/^  V2 dir;$/;"	m	language:C++	struct:__anon86d7a6360808	typeref:typename:V2
djb2	code/momo_common.h	/^djb2(const C8* str)$/;"	f	language:C++	typeref:typename:U32
djb2	momo_common.h	/^djb2(const C8* str)$/;"	f	language:C++	typeref:typename:U32
dll	code/w32_loaded_code.h	/^  HMODULE dll; $/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:HMODULE
dll	code/win_loaded_code.h	/^  HMODULE dll; $/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:HMODULE
dll	w32_loaded_code.h	/^  HMODULE dll; $/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:HMODULE
drawCounter	test.c	/^    int drawCounter;            \/\/ Draw calls counter$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:int	file:
draws	test.c	/^    rlDrawCall *draws;          \/\/ Draw calls array, depends on textureId$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:rlDrawCall *	file:
dst	code/game_gfx.h	/^  Gfx_Blend_Type dst;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
dst	code/game_renderer.h	/^  Gfx_Blend_Type dst;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
dst	game_gfx.h	/^  Gfx_Blend_Type dst;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
dummy_texture	code/game_gfx_opengl.h	/^  OGL_Texture dummy_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
dummy_texture	code/game_renderer_opengl.h	/^  Texture dummy_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:Texture
dummy_texture	game_gfx_opengl.h	/^  OGL_Texture dummy_texture;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture
e	.\code\game_sb1.h	/^  Ray2 e[256];$/;"	m	language:C++	struct:SB1_Light_Debug_Ray_List
e	.\code\game_sb1.h	/^  SB1_Edge e[256];$/;"	m	language:C++	struct:SB1_Edge_List
e	.\code\game_sb1.h	/^  SB1_Light e[32];$/;"	m	language:C++	struct:SB1_Light_List
e	.\code\game_sb1.h	/^  SB1_Light_Intersection e[256];$/;"	m	language:C++	struct:SB1_Light_Intersection_List
e	.\code\game_sb1.h	/^  SB1_Sensor e[32];$/;"	m	language:C++	struct:SB1_Sensor_List
e	.\code\game_sb1.h	/^  Tri2 e[256];$/;"	m	language:C++	struct:SB1_Light_Triangle_List
e	.\code\game_sb1.h	/^  V2 e[256];$/;"	m	language:C++	struct:SB1_Point_List
e	code/game_inspector.h	/^  Inspector_Entry e[64];$/;"	m	language:C++	struct:Inspector_Entry_List	typeref:typename:Inspector_Entry[64]
e	code/game_mode_computer.h	/^  Computer_Selection e[10];$/;"	m	language:C++	struct:__anond0a24e910208	typeref:typename:Computer_Selection[10]
e	code/game_mode_lit.h	/^  Lit_Edge e[256];$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:Lit_Edge[256]
e	code/game_mode_lit_light.h	/^  Lit_Light e[32];$/;"	m	language:C++	struct:Lit_Light_List	typeref:typename:Lit_Light[32]
e	code/game_mode_lit_light.h	/^  Lit_Light_Intersection e[256];$/;"	m	language:C++	struct:Lit_Light_Intersection_List	typeref:typename:Lit_Light_Intersection[256]
e	code/game_mode_lit_light.h	/^  Ray2 e[256];$/;"	m	language:C++	struct:Lit_Light_Debug_Ray_List	typeref:typename:Ray2[256]
e	code/game_mode_lit_light.h	/^  Tri2 e[256];$/;"	m	language:C++	struct:Lit_Light_Triangle_List	typeref:typename:Tri2[256]
e	code/game_mode_lit_sensors.h	/^  Lit_Sensor e[32];$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:Lit_Sensor[32]
e	code/game_mode_sb1.h	/^  Lit_Edge e[256];$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:Lit_Edge[256]
e	code/game_mode_sb1.h	/^  V2 e[256];$/;"	m	language:C++	struct:Lit_Point_List	typeref:typename:V2[256]
e	code/momo_matrix.h	/^	F32 e[4][4];$/;"	m	language:C++	struct:__anond05d59510108	typeref:typename:F32[4][4]
e	code/momo_strings.h	/^			U8* e;$/;"	m	language:C++	struct:__anon713555860208::__anon71355586030a::__anon713555860408	typeref:typename:U8 *
e	code/momo_strings.h	/^	U8* e;$/;"	m	language:C++	struct:__anon713555860108	typeref:typename:U8 *
e	code/momo_ttf.h	/^  _TTF_Edge** e;$/;"	m	language:C++	struct:__anon54d1bdca0708	typeref:typename:_TTF_Edge **
e	code/momo_vectors.h	/^	F32 e[2];$/;"	m	language:C++	union:__anon8de67fa2070a	typeref:typename:F32[2]
e	code/momo_vectors.h	/^	S32 e[2];$/;"	m	language:C++	union:__anon8de67fa2040a	typeref:typename:S32[2]
e	code/momo_vectors.h	/^	U32 e[2];$/;"	m	language:C++	union:__anon8de67fa2010a	typeref:typename:U32[2]
e	code/momo_vectors.h	/^  F32 e[3];$/;"	m	language:C++	union:__anon8de67fa20b0a	typeref:typename:F32[3]
e	code/momo_vectors.h	/^  F32 e[4];$/;"	m	language:C++	union:__anon8de67fa20e0a	typeref:typename:F32[4]
e	game_inspector.h	/^  Inspector_Entry e[64];$/;"	m	language:C++	struct:Inspector_Entry_List	typeref:typename:Inspector_Entry[64]
e	game_mode_computer.h	/^  Computer_Selection e[10];$/;"	m	language:C++	struct:__anon19207be70208	typeref:typename:Computer_Selection[10]
e	game_mode_lit.h	/^  Lit_Edge e[256];$/;"	m	language:C++	struct:Lit_Edge_List	typeref:typename:Lit_Edge[256]
e	game_mode_lit.h	/^  V2 e[256];$/;"	m	language:C++	struct:Lit_Point_List	typeref:typename:V2[256]
e	game_mode_lit_light.h	/^  Lit_Light e[32];$/;"	m	language:C++	struct:Lit_Light_List	typeref:typename:Lit_Light[32]
e	game_mode_lit_light.h	/^  Lit_Light_Intersection e[256];$/;"	m	language:C++	struct:Lit_Light_Intersection_List	typeref:typename:Lit_Light_Intersection[256]
e	game_mode_lit_light.h	/^  Ray2 e[256];$/;"	m	language:C++	struct:Lit_Light_Debug_Ray_List	typeref:typename:Ray2[256]
e	game_mode_lit_light.h	/^  Tri2 e[256];$/;"	m	language:C++	struct:Lit_Light_Triangle_List	typeref:typename:Tri2[256]
e	game_mode_lit_sensors.h	/^  Lit_Sensor e[32];$/;"	m	language:C++	struct:Lit_Sensor_List	typeref:typename:Lit_Sensor[32]
e	momo_matrix.h	/^	F32 e[4][4];$/;"	m	language:C++	struct:__anon0eed7b670108	typeref:typename:F32[4][4]
e	momo_strings.h	/^			U8* e;$/;"	m	language:C++	struct:__anon81c9ba5c0208::__anon81c9ba5c030a::__anon81c9ba5c0408	typeref:typename:U8 *
e	momo_strings.h	/^	U8* e;$/;"	m	language:C++	struct:__anon81c9ba5c0108	typeref:typename:U8 *
e	momo_ttf.h	/^  _TTF_Edge** e;$/;"	m	language:C++	struct:__anon4eb927a00708	typeref:typename:_TTF_Edge **
e	momo_vectors.h	/^	F32 e[2];$/;"	m	language:C++	union:__anon9e7ae478070a	typeref:typename:F32[2]
e	momo_vectors.h	/^	S32 e[2];$/;"	m	language:C++	union:__anon9e7ae478040a	typeref:typename:S32[2]
e	momo_vectors.h	/^	U32 e[2];$/;"	m	language:C++	union:__anon9e7ae478010a	typeref:typename:U32[2]
e	momo_vectors.h	/^  F32 e[3];$/;"	m	language:C++	union:__anon9e7ae4780b0a	typeref:typename:F32[3]
e	momo_vectors.h	/^  F32 e[4];$/;"	m	language:C++	union:__anon9e7ae4780e0a	typeref:typename:F32[4]
ease_inout_back_f32	code/momo_easing.h	/^ease_inout_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_back_f32	code/momo_easing.h	/^static F32 ease_inout_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_back_f32	momo_easing.h	/^ease_inout_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_back_f32	momo_easing.h	/^static F32 ease_inout_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_back_f64	code/momo_easing.h	/^ease_inout_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_back_f64	code/momo_easing.h	/^static F64 ease_inout_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_back_f64	momo_easing.h	/^ease_inout_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_back_f64	momo_easing.h	/^static F64 ease_inout_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_bounce_f32	code/momo_easing.h	/^ease_inout_bounce_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_inout_bounce_f32	code/momo_easing.h	/^static F32 ease_inout_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_bounce_f32	momo_easing.h	/^ease_inout_bounce_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_inout_bounce_f32	momo_easing.h	/^static F32 ease_inout_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_bounce_f64	code/momo_easing.h	/^ease_inout_bounce_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_inout_bounce_f64	code/momo_easing.h	/^static F64 ease_inout_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_bounce_f64	momo_easing.h	/^ease_inout_bounce_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_inout_bounce_f64	momo_easing.h	/^static F64 ease_inout_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_circ	code/momo_easing.h	/^ease_inout_circ(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_circ	momo_easing.h	/^ease_inout_circ(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_circ_f32	code/momo_easing.h	/^static F32 ease_inout_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_circ_f32	momo_easing.h	/^static F32 ease_inout_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_circ_f64	code/momo_easing.h	/^ease_inout_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_circ_f64	code/momo_easing.h	/^static F64 ease_inout_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_circ_f64	momo_easing.h	/^ease_inout_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_circ_f64	momo_easing.h	/^static F64 ease_inout_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_cubic_f32	code/momo_easing.h	/^ease_inout_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_cubic_f32	code/momo_easing.h	/^static F32 ease_inout_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_cubic_f32	momo_easing.h	/^ease_inout_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_cubic_f32	momo_easing.h	/^static F32 ease_inout_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_cubic_f64	code/momo_easing.h	/^ease_inout_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_cubic_f64	code/momo_easing.h	/^static F64 ease_inout_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_cubic_f64	momo_easing.h	/^ease_inout_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_cubic_f64	momo_easing.h	/^static F64 ease_inout_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_elastic_f32	code/momo_easing.h	/^ease_inout_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_elastic_f32	code/momo_easing.h	/^static F32 ease_inout_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_elastic_f32	momo_easing.h	/^ease_inout_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_elastic_f32	momo_easing.h	/^static F32 ease_inout_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_elastic_f64	code/momo_easing.h	/^ease_inout_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_elastic_f64	code/momo_easing.h	/^static F64 ease_inout_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_elastic_f64	momo_easing.h	/^ease_inout_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_elastic_f64	momo_easing.h	/^static F64 ease_inout_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_expo_f32	code/momo_easing.h	/^ease_inout_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_expo_f32	code/momo_easing.h	/^static F32 ease_inout_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_expo_f32	momo_easing.h	/^ease_inout_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_expo_f32	momo_easing.h	/^static F32 ease_inout_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_expo_f64	code/momo_easing.h	/^ease_inout_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_expo_f64	code/momo_easing.h	/^static F64 ease_inout_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_expo_f64	momo_easing.h	/^ease_inout_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_expo_f64	momo_easing.h	/^static F64 ease_inout_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quad_f32	code/momo_easing.h	/^ease_inout_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quad_f32	code/momo_easing.h	/^static F32 ease_inout_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quad_f32	momo_easing.h	/^ease_inout_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quad_f32	momo_easing.h	/^static F32 ease_inout_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quad_f64	code/momo_easing.h	/^ease_inout_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quad_f64	code/momo_easing.h	/^static F64 ease_inout_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quad_f64	momo_easing.h	/^ease_inout_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quad_f64	momo_easing.h	/^static F64 ease_inout_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quart_f32	code/momo_easing.h	/^ease_inout_quart_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quart_f32	code/momo_easing.h	/^static F32 ease_inout_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quart_f32	momo_easing.h	/^ease_inout_quart_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quart_f32	momo_easing.h	/^static F32 ease_inout_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quart_f64	code/momo_easing.h	/^ease_inout_quart_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quart_f64	code/momo_easing.h	/^static F64 ease_inout_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quart_f64	momo_easing.h	/^ease_inout_quart_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quart_f64	momo_easing.h	/^static F64 ease_inout_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quint_f32	code/momo_easing.h	/^ease_inout_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quint_f32	code/momo_easing.h	/^static F32 ease_inout_quint_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quint_f32	momo_easing.h	/^ease_inout_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_quint_f32	momo_easing.h	/^static F32 ease_inout_quint_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_quint_f64	code/momo_easing.h	/^ease_inout_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quint_f64	code/momo_easing.h	/^static F64 ease_inout_quint_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_quint_f64	momo_easing.h	/^ease_inout_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_quint_f64	momo_easing.h	/^static F64 ease_inout_quint_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_sine_f32	code/momo_easing.h	/^ease_inout_sine_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_sine_f32	code/momo_easing.h	/^static F32 ease_inout_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_sine_f32	momo_easing.h	/^ease_inout_sine_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_inout_sine_f32	momo_easing.h	/^static F32 ease_inout_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_inout_sine_f64	code/momo_easing.h	/^ease_inout_sine_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_sine_f64	code/momo_easing.h	/^static F64 ease_inout_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_inout_sine_f64	momo_easing.h	/^ease_inout_sine_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_inout_sine_f64	momo_easing.h	/^static F64 ease_inout_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_back_f32	code/momo_easing.h	/^ease_in_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_back_f32	code/momo_easing.h	/^static F32 ease_in_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_back_f32	momo_easing.h	/^ease_in_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_back_f32	momo_easing.h	/^static F32 ease_in_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_back_f64	code/momo_easing.h	/^ease_in_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_back_f64	code/momo_easing.h	/^static F64 ease_in_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_back_f64	momo_easing.h	/^ease_in_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_back_f64	momo_easing.h	/^static F64 ease_in_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_bounce_f32	code/momo_easing.h	/^ease_in_bounce_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_bounce_f32	code/momo_easing.h	/^static F32 ease_in_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_bounce_f32	momo_easing.h	/^ease_in_bounce_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_bounce_f32	momo_easing.h	/^static F32 ease_in_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_bounce_f64	code/momo_easing.h	/^ease_in_bounce_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_bounce_f64	code/momo_easing.h	/^static F64 ease_in_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_bounce_f64	momo_easing.h	/^ease_in_bounce_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_bounce_f64	momo_easing.h	/^static F64 ease_in_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_circ_f32	code/momo_easing.h	/^ease_in_circ_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_circ_f32	code/momo_easing.h	/^static F32 ease_in_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_circ_f32	momo_easing.h	/^ease_in_circ_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_circ_f32	momo_easing.h	/^static F32 ease_in_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_circ_f64	code/momo_easing.h	/^ease_in_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_circ_f64	code/momo_easing.h	/^static F64 ease_in_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_circ_f64	momo_easing.h	/^ease_in_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_circ_f64	momo_easing.h	/^static F64 ease_in_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_cubic_f32	code/momo_easing.h	/^ease_in_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_cubic_f32	code/momo_easing.h	/^static F32 ease_in_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_cubic_f32	momo_easing.h	/^ease_in_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_cubic_f32	momo_easing.h	/^static F32 ease_in_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_cubic_f64	code/momo_easing.h	/^ease_in_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_cubic_f64	code/momo_easing.h	/^static F64 ease_in_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_cubic_f64	momo_easing.h	/^ease_in_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_cubic_f64	momo_easing.h	/^static F64 ease_in_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_elastic_f32	code/momo_easing.h	/^ease_in_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_elastic_f32	code/momo_easing.h	/^static F32 ease_in_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_elastic_f32	momo_easing.h	/^ease_in_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_elastic_f32	momo_easing.h	/^static F32 ease_in_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_elastic_f64	code/momo_easing.h	/^ease_in_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_elastic_f64	code/momo_easing.h	/^static F64 ease_in_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_elastic_f64	momo_easing.h	/^ease_in_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_elastic_f64	momo_easing.h	/^static F64 ease_in_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_expo_f32	code/momo_easing.h	/^ease_in_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_expo_f32	code/momo_easing.h	/^static F32 ease_in_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_expo_f32	momo_easing.h	/^ease_in_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_expo_f32	momo_easing.h	/^static F32 ease_in_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_expo_f64	code/momo_easing.h	/^ease_in_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_expo_f64	code/momo_easing.h	/^static F64 ease_in_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_expo_f64	momo_easing.h	/^ease_in_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_expo_f64	momo_easing.h	/^static F64 ease_in_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quad_f32	code/momo_easing.h	/^ease_in_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quad_f32	code/momo_easing.h	/^static F32 ease_in_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quad_f32	momo_easing.h	/^ease_in_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quad_f32	momo_easing.h	/^static F32 ease_in_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quad_f64	code/momo_easing.h	/^ease_in_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quad_f64	code/momo_easing.h	/^static F64 ease_in_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quad_f64	momo_easing.h	/^ease_in_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quad_f64	momo_easing.h	/^static F64 ease_in_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quart_f32	code/momo_easing.h	/^ease_in_quart_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quart_f32	code/momo_easing.h	/^static F32 ease_in_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quart_f32	momo_easing.h	/^ease_in_quart_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quart_f32	momo_easing.h	/^static F32 ease_in_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quart_f64	code/momo_easing.h	/^ease_in_quart_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quart_f64	code/momo_easing.h	/^static F64 ease_in_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quart_f64	momo_easing.h	/^ease_in_quart_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quart_f64	momo_easing.h	/^static F64 ease_in_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quint_f32	code/momo_easing.h	/^ease_in_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quint_f32	code/momo_easing.h	/^static F32 ease_in_quint_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quint_f32	momo_easing.h	/^ease_in_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_quint_f32	momo_easing.h	/^static F32 ease_in_quint_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_quint_f64	code/momo_easing.h	/^ease_in_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quint_f64	code/momo_easing.h	/^static F64 ease_in_quint_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_quint_f64	momo_easing.h	/^ease_in_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_quint_f64	momo_easing.h	/^static F64 ease_in_quint_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_sine_f32	code/momo_easing.h	/^ease_in_sine_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_sine_f32	code/momo_easing.h	/^static F32 ease_in_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_sine_f32	momo_easing.h	/^ease_in_sine_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_in_sine_f32	momo_easing.h	/^static F32 ease_in_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_in_sine_f64	code/momo_easing.h	/^ease_in_sine_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_sine_f64	code/momo_easing.h	/^static F64 ease_in_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_in_sine_f64	momo_easing.h	/^ease_in_sine_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_in_sine_f64	momo_easing.h	/^static F64 ease_in_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_back_f32	code/momo_easing.h	/^ease_out_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_back_f32	code/momo_easing.h	/^static F32 ease_out_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_back_f32	momo_easing.h	/^ease_out_back_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_back_f32	momo_easing.h	/^static F32 ease_out_back_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_back_f64	code/momo_easing.h	/^ease_out_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_back_f64	code/momo_easing.h	/^static F64 ease_out_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_back_f64	momo_easing.h	/^ease_out_back_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_back_f64	momo_easing.h	/^static F64 ease_out_back_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_bounce_f32	code/momo_easing.h	/^ease_out_bounce_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_bounce_f32	code/momo_easing.h	/^static F32 ease_out_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_bounce_f32	momo_easing.h	/^ease_out_bounce_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_bounce_f32	momo_easing.h	/^static F32 ease_out_bounce_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_bounce_f64	code/momo_easing.h	/^ease_out_bounce_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_bounce_f64	code/momo_easing.h	/^static F64 ease_out_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_bounce_f64	momo_easing.h	/^ease_out_bounce_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_bounce_f64	momo_easing.h	/^static F64 ease_out_bounce_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_circ_f32	code/momo_easing.h	/^ease_out_circ_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_circ_f32	code/momo_easing.h	/^static F32 ease_out_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_circ_f32	momo_easing.h	/^ease_out_circ_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_circ_f32	momo_easing.h	/^static F32 ease_out_circ_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_circ_f64	code/momo_easing.h	/^ease_out_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_circ_f64	code/momo_easing.h	/^static F64 ease_out_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_circ_f64	momo_easing.h	/^ease_out_circ_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_circ_f64	momo_easing.h	/^static F64 ease_out_circ_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_cubic_f32	code/momo_easing.h	/^ease_out_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_cubic_f32	code/momo_easing.h	/^static F32 ease_out_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_cubic_f32	momo_easing.h	/^ease_out_cubic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_cubic_f32	momo_easing.h	/^static F32 ease_out_cubic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_cubic_f64	code/momo_easing.h	/^ease_out_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_cubic_f64	code/momo_easing.h	/^static F64 ease_out_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_cubic_f64	momo_easing.h	/^ease_out_cubic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_cubic_f64	momo_easing.h	/^static F64 ease_out_cubic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_elastic_f32	code/momo_easing.h	/^ease_out_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_elastic_f32	code/momo_easing.h	/^static F32 ease_out_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_elastic_f32	momo_easing.h	/^ease_out_elastic_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_elastic_f32	momo_easing.h	/^static F32 ease_out_elastic_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_elastic_f64	code/momo_easing.h	/^ease_out_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_elastic_f64	code/momo_easing.h	/^static F64 ease_out_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_elastic_f64	momo_easing.h	/^ease_out_elastic_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_elastic_f64	momo_easing.h	/^static F64 ease_out_elastic_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_expo_f32	code/momo_easing.h	/^ease_out_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_expo_f32	code/momo_easing.h	/^static F32 ease_out_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_expo_f32	momo_easing.h	/^ease_out_expo_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_expo_f32	momo_easing.h	/^static F32 ease_out_expo_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_expo_f64	code/momo_easing.h	/^ease_out_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_expo_f64	code/momo_easing.h	/^static F64 ease_out_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_expo_f64	momo_easing.h	/^ease_out_expo_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_expo_f64	momo_easing.h	/^static F64 ease_out_expo_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_quad_f32	code/momo_easing.h	/^ease_out_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_quad_f32	code/momo_easing.h	/^static F32 ease_out_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_quad_f32	momo_easing.h	/^ease_out_quad_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_quad_f32	momo_easing.h	/^static F32 ease_out_quad_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_quad_f64	code/momo_easing.h	/^ease_out_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_quad_f64	code/momo_easing.h	/^static F64 ease_out_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_quad_f64	momo_easing.h	/^ease_out_quad_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_quad_f64	momo_easing.h	/^static F64 ease_out_quad_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_quart_f32	code/momo_easing.h	/^ease_out_quart_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_quart_f32	code/momo_easing.h	/^static F32 ease_out_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_quart_f32	momo_easing.h	/^ease_out_quart_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_quart_f32	momo_easing.h	/^static F32 ease_out_quart_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_quart_f64	code/momo_easing.h	/^ease_out_quart_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_quart_f64	code/momo_easing.h	/^static F64 ease_out_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_quart_f64	momo_easing.h	/^ease_out_quart_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_quart_f64	momo_easing.h	/^static F64 ease_out_quart_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_quint_f32	code/momo_easing.h	/^ease_out_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_quint_f32	code/momo_easing.h	/^static F32 ease_out_quint_f32(F32 t);;$/;"	p	language:C++	typeref:typename:F32
ease_out_quint_f32	momo_easing.h	/^ease_out_quint_f32(F32 t)  {$/;"	f	language:C++	typeref:typename:F32
ease_out_quint_f32	momo_easing.h	/^static F32 ease_out_quint_f32(F32 t);;$/;"	p	language:C++	typeref:typename:F32
ease_out_quint_f64	code/momo_easing.h	/^ease_out_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_quint_f64	code/momo_easing.h	/^static F64 ease_out_quint_f64(F64 t);;$/;"	p	language:C++	typeref:typename:F64
ease_out_quint_f64	momo_easing.h	/^ease_out_quint_f64(F64 t)  {$/;"	f	language:C++	typeref:typename:F64
ease_out_quint_f64	momo_easing.h	/^static F64 ease_out_quint_f64(F64 t);;$/;"	p	language:C++	typeref:typename:F64
ease_out_sine_f32	code/momo_easing.h	/^ease_out_sine_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_sine_f32	code/momo_easing.h	/^static F32 ease_out_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_sine_f32	momo_easing.h	/^ease_out_sine_f32(F32 t) {$/;"	f	language:C++	typeref:typename:F32
ease_out_sine_f32	momo_easing.h	/^static F32 ease_out_sine_f32(F32 t);$/;"	p	language:C++	typeref:typename:F32
ease_out_sine_f64	code/momo_easing.h	/^ease_out_sine_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_sine_f64	code/momo_easing.h	/^static F64 ease_out_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
ease_out_sine_f64	momo_easing.h	/^ease_out_sine_f64(F64 t) {$/;"	f	language:C++	typeref:typename:F64
ease_out_sine_f64	momo_easing.h	/^static F64 ease_out_sine_f64(F64 t);$/;"	p	language:C++	typeref:typename:F64
edge	.\code\game_sb1.h	/^  SB1_Edge* edge;$/;"	m	language:C++	struct:SB1_Sensor
Edge	code/game_mode_level.h	/^struct Edge{$/;"	s	language:C++
edges	.\code\game_sb1.h	/^  SB1_Edge_List edges;$/;"	m	language:C++	struct:SB1
edges	code/game_mode_level.h	/^  Array_List<Edge> edges;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Array_List<Edge>
edges	code/game_mode_lit.h	/^  Lit_Edge_List edges;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_Edge_List
edges	code/game_mode_sb1.h	/^  Lit_Edge_List edges;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Edge_List
edges	game_mode_lit.h	/^  Lit_Edge_List edges;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Edge_List
editor	code/game_mode_level.h	/^  Editor editor;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Editor
Editor	code/game_mode_level_editor.h	/^struct Editor {$/;"	s	language:C++
Editor	game_mode_level_editor.h	/^struct Editor {$/;"	s	language:C++
EDITOR_EDGE_CLOSURE_DISTANCE	code/game_mode_level_editor.cpp	/^#define EDITOR_EDGE_CLOSURE_DISTANCE /;"	d	language:C++	file:
EDITOR_EDGE_CLOSURE_DISTANCE	game_mode_level_editor.cpp	/^#define EDITOR_EDGE_CLOSURE_DISTANCE /;"	d	language:C++	file:
EDITOR_EDIT_PT_CLICK_RADIUS	code/game_mode_level_editor.cpp	/^#define EDITOR_EDIT_PT_CLICK_RADIUS /;"	d	language:C++	file:
EDITOR_EDIT_PT_CLICK_RADIUS	game_mode_level_editor.cpp	/^#define EDITOR_EDIT_PT_CLICK_RADIUS /;"	d	language:C++	file:
EDITOR_MODE_DISPLAY_DURATION	code/game_mode_level_editor.cpp	/^#define EDITOR_MODE_DISPLAY_DURATION /;"	d	language:C++	file:
EDITOR_MODE_DISPLAY_DURATION	game_mode_level_editor.cpp	/^#define EDITOR_MODE_DISPLAY_DURATION /;"	d	language:C++	file:
Editor_State	code/game_mode_level_editor.h	/^enum Editor_State {$/;"	g	language:C++
Editor_State	game_mode_level_editor.h	/^enum Editor_State {$/;"	g	language:C++
EDITOR_STATE_EDIT_EDGES	code/game_mode_level_editor.h	/^  EDITOR_STATE_EDIT_EDGES,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_EDIT_EDGES	game_mode_level_editor.h	/^  EDITOR_STATE_EDIT_EDGES,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_EDIT_LIGHT	code/game_mode_level_editor.h	/^  EDITOR_STATE_EDIT_LIGHT,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_EDIT_LIGHT	game_mode_level_editor.h	/^  EDITOR_STATE_EDIT_LIGHT,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_MAX	code/game_mode_level_editor.h	/^  EDITOR_STATE_MAX,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_MAX	game_mode_level_editor.h	/^  EDITOR_STATE_MAX,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_MIN	code/game_mode_level_editor.h	/^  EDITOR_STATE_MIN,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_MIN	game_mode_level_editor.h	/^  EDITOR_STATE_MIN,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_PLACE_EDGES	code/game_mode_level_editor.h	/^  EDITOR_STATE_PLACE_EDGES = EDITOR_STATE_MIN,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_PLACE_EDGES	game_mode_level_editor.h	/^  EDITOR_STATE_PLACE_EDGES = EDITOR_STATE_MIN,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_PLACE_LIGHTS	code/game_mode_level_editor.h	/^  EDITOR_STATE_PLACE_LIGHTS,$/;"	e	language:C++	enum:Editor_State
EDITOR_STATE_PLACE_LIGHTS	game_mode_level_editor.h	/^  EDITOR_STATE_PLACE_LIGHTS,$/;"	e	language:C++	enum:Editor_State
EDITOR_TOOLBAR_BTN_H	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_H	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_PAD	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_PAD /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_PAD	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_PAD /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_H	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_H	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_W	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_W	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_WH	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_WH /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_SELECT_WH	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_SELECT_WH /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_W	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_W	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_WH	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_WH /;"	d	language:C++	file:
EDITOR_TOOLBAR_BTN_WH	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_BTN_WH /;"	d	language:C++	file:
Editor_Toolbar_Button	code/game_mode_level_editor.h	/^struct Editor_Toolbar_Button {$/;"	s	language:C++
Editor_Toolbar_Button	game_mode_level_editor.h	/^struct Editor_Toolbar_Button {$/;"	s	language:C++
EDITOR_TOOLBAR_H	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_H	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_H /;"	d	language:C++	file:
EDITOR_TOOLBAR_PAD	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_PAD /;"	d	language:C++	file:
EDITOR_TOOLBAR_PAD	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_PAD /;"	d	language:C++	file:
EDITOR_TOOLBAR_W	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_W	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_W /;"	d	language:C++	file:
EDITOR_TOOLBAR_WH	code/game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_WH /;"	d	language:C++	file:
EDITOR_TOOLBAR_WH	game_mode_level_editor.cpp	/^#define EDITOR_TOOLBAR_WH /;"	d	language:C++	file:
elementCount	test.c	/^    int elementCount;           \/\/ Number of elements in the buffer (QUADS)$/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:int	file:
ENABLE_ASSERT	code/momo_common.h	/^#define ENABLE_ASSERT /;"	d	language:C++
ENABLE_ASSERT	momo_common.h	/^#define ENABLE_ASSERT /;"	d	language:C++
endian_swap_s16	code/momo_common.h	/^endian_swap_s16(S16 value) {$/;"	f	language:C++	typeref:typename:S16
endian_swap_s16	momo_common.h	/^endian_swap_s16(S16 value) {$/;"	f	language:C++	typeref:typename:S16
endian_swap_u16	code/momo_common.h	/^endian_swap_u16(U16 value) {$/;"	f	language:C++	typeref:typename:U16
endian_swap_u16	momo_common.h	/^endian_swap_u16(U16 value) {$/;"	f	language:C++	typeref:typename:U16
endian_swap_u32	code/momo_common.h	/^endian_swap_u32(U32 value) {$/;"	f	language:C++	typeref:typename:U32
endian_swap_u32	momo_common.h	/^endian_swap_u32(U32 value) {$/;"	f	language:C++	typeref:typename:U32
end_asset_pack	code/sui_pack.h	/^end_asset_pack(Sui_Packer* p, $/;"	f	language:C++	typeref:typename:B32
end_asset_pack	sui_pack.h	/^end_asset_pack(Sui_Packer* p, $/;"	f	language:C++	typeref:typename:B32
end_atlas	code/sui_pack.h	/^end_atlas(Sui_Packer* p, const char* id_name, U32 width, U32 height)$/;"	f	language:C++	typeref:typename:B32
end_atlas	sui_pack.h	/^end_atlas(Sui_Packer* p, const char* id_name, U32 width, U32 height)$/;"	f	language:C++	typeref:typename:B32
end_atlas_builder	code/sui_atlas.h	/^end_atlas_builder(Sui_Atlas* ab, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
end_atlas_builder	sui_atlas.h	/^end_atlas_builder(Sui_Atlas* ab, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
end_atlas_font	code/sui_pack.h	/^end_atlas_font(Sui_Packer* p) {$/;"	f	language:C++	typeref:typename:void
end_atlas_font	sui_pack.h	/^end_atlas_font(Sui_Packer* p) {$/;"	f	language:C++	typeref:typename:void
end_frame	code/win_renderer.h	/^  Win_Gfx_End_Frame* end_frame;$/;"	m	language:C++	struct:Win_Gfx_Functions	typeref:typename:Win_Gfx_End_Frame *
end_packer	code/sui_pack.h	/^end_packer(Sui_Packer* p) {$/;"	f	language:C++	typeref:typename:void
end_packer	sui_pack.h	/^end_packer(Sui_Packer* p) {$/;"	f	language:C++	typeref:typename:void
end_point_indices	code/momo_ttf.h	/^  U16* end_point_indices; \/\/ as many as contour_counts$/;"	m	language:C++	struct:__anon54d1bdca0408	typeref:typename:U16 *
end_point_indices	momo_ttf.h	/^  U16* end_point_indices; \/\/ as many as contour_counts$/;"	m	language:C++	struct:__anon4eb927a00408	typeref:typename:U16 *
end_pt	code/game_mode_lit.h	/^  V2 end_pt;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:V2
end_stat	code/game_profiler_rendering.h	/^end_stat(Stat* stat) {$/;"	f	language:C++	typeref:typename:void
end_stat	game_profiler_rendering.h	/^end_stat(Stat* stat) {$/;"	f	language:C++	typeref:typename:void
entries	code/game_inspector.h	/^  Inspector_Entry_List entries;$/;"	m	language:C++	struct:Inspector	typeref:typename:Inspector_Entry_List
entries	code/game_profiler.h	/^  Profiler_Entry entries[PROFILER_MAX_ENTRIES];$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry[]
entries	code/w32.cpp	/^  W32_Work entries[256];$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:W32_Work[256]	file:
entries	code/win.cpp	/^  Win_Work entries[256];$/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:Win_Work[256]	file:
entries	game_inspector.h	/^  Inspector_Entry_List entries;$/;"	m	language:C++	struct:Inspector	typeref:typename:Inspector_Entry_List
entries	game_profiler.h	/^  Profiler_Entry entries[PROFILER_MAX_ENTRIES];$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry[]
entries	w32.cpp	/^  W32_Work entries[256];$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:W32_Work[256]	file:
entry_count	code/game_gfx.h	/^	UMI entry_count;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_count	code/game_renderer.h	/^	UMI entry_count;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_count	game_gfx.h	/^	UMI entry_count;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_pos	code/game_gfx.h	/^	UMI entry_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_pos	code/game_renderer.h	/^	UMI entry_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_pos	game_gfx.h	/^	UMI entry_pos;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_start	code/game_gfx.h	/^	UMI entry_start;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_start	code/game_renderer.h	/^	UMI entry_start;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
entry_start	game_gfx.h	/^	UMI entry_start;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
exported	code/momo_common.h	/^# define exported /;"	d	language:C++
exported	momo_common.h	/^# define exported /;"	d	language:C++
ExtSupported	test.c	/^    } ExtSupported;     \/\/ Extensions supported flags$/;"	m	language:C	struct:rlglData	typeref:struct:rlglData::__anon1dda1bf60c08	file:
f	code/momo_common.h	/^  F f;$/;"	m	language:C++	struct:_defer_scope_guard	typeref:typename:F
f	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_INFINITY::__anonbacee3e5010a	typeref:typename:F32
f	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NAN::__anonbacee3e5030a	typeref:typename:F32
f	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NEG_INFINITY::__anonbacee3e5020a	typeref:typename:F32
f	code/momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonbacee3e5070a	typeref:typename:F32
f	code/momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonbacee3e50b0a	typeref:typename:F32
f	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_INFINITY::__anonbacee3e5050a	typeref:typename:F64
f	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NAN::__anonbacee3e5040a	typeref:typename:F64
f	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NEG_INFINITY::__anonbacee3e5060a	typeref:typename:F64
f	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonbacee3e50c0a	typeref:typename:F64
f	code/momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonbacee3e5080a	typeref:typename:F64
f	momo_common.h	/^  F f;$/;"	m	language:C++	struct:_defer_scope_guard	typeref:typename:F
f	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_INFINITY::__anonf95f05fb010a	typeref:typename:F32
f	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NAN::__anonf95f05fb030a	typeref:typename:F32
f	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NEG_INFINITY::__anonf95f05fb020a	typeref:typename:F32
f	momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonf95f05fb070a	typeref:typename:F32
f	momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonf95f05fb0b0a	typeref:typename:F32
f	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_INFINITY::__anonf95f05fb050a	typeref:typename:F64
f	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NAN::__anonf95f05fb040a	typeref:typename:F64
f	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NEG_INFINITY::__anonf95f05fb060a	typeref:typename:F64
f	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonf95f05fb0c0a	typeref:typename:F64
f	momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonf95f05fb080a	typeref:typename:F64
F32	code/momo_common.h	/^typedef float F32;$/;"	t	language:C++	typeref:typename:float
f32	code/momo_json.h	/^    F32 f32;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:F32
F32	momo_common.h	/^typedef float F32;$/;"	t	language:C++	typeref:typename:float
f32	momo_json.h	/^    F32 f32;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:F32
F32_EPSILON	code/momo_common.h	/^#define F32_EPSILON /;"	d	language:C++
F32_EPSILON	momo_common.h	/^#define F32_EPSILON /;"	d	language:C++
F32_INFINITY	code/momo_common.h	/^F32_INFINITY() {$/;"	f	language:C++	typeref:typename:F32
F32_INFINITY	momo_common.h	/^F32_INFINITY() {$/;"	f	language:C++	typeref:typename:F32
F32_NAN	code/momo_common.h	/^F32_NAN() {$/;"	f	language:C++	typeref:typename:F32
F32_NAN	momo_common.h	/^F32_NAN() {$/;"	f	language:C++	typeref:typename:F32
F32_NEG_INFINITY	code/momo_common.h	/^F32_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:F32
F32_NEG_INFINITY	momo_common.h	/^F32_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:F32
F64	code/momo_common.h	/^typedef double F64;$/;"	t	language:C++	typeref:typename:double
F64	momo_common.h	/^typedef double F64;$/;"	t	language:C++	typeref:typename:double
F64_EPSILON	code/momo_common.h	/^#define F64_EPSILON /;"	d	language:C++
F64_EPSILON	momo_common.h	/^#define F64_EPSILON /;"	d	language:C++
F64_INFINITY	code/momo_common.h	/^F64_INFINITY() {$/;"	f	language:C++	typeref:typename:F64
F64_INFINITY	momo_common.h	/^F64_INFINITY() {$/;"	f	language:C++	typeref:typename:F64
F64_NAN	code/momo_common.h	/^F64_NAN() {$/;"	f	language:C++	typeref:typename:F64
F64_NAN	momo_common.h	/^F64_NAN() {$/;"	f	language:C++	typeref:typename:F64
F64_NEG_INFINITY	code/momo_common.h	/^F64_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:F64
F64_NEG_INFINITY	momo_common.h	/^F64_NEG_INFINITY() {$/;"	f	language:C++	typeref:typename:F64
false	code/momo_common.h	/^# define false /;"	d	language:C++
false	momo_common.h	/^# define false /;"	d	language:C++
filename	code/game_profiler.h	/^  const char* filename;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:const char *
filename	code/sui_atlas.h	/^  const char* filename;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:const char *
filename	game_profiler.h	/^  const char* filename;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:const char *
filename	sui_atlas.h	/^  const char* filename;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:const char *
files	code/w32.cpp	/^  W32_File files[32]; $/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:W32_File[32]	file:
files	code/win.cpp	/^  Win_File files[32]; $/;"	m	language:C++	struct:Win_File_Cabinet	typeref:typename:Win_File[32]	file:
files	w32.cpp	/^  W32_File files[32]; $/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:W32_File[32]	file:
file_cabinet	code/w32.cpp	/^  W32_File_Cabinet file_cabinet;$/;"	m	language:C++	struct:W32_State	typeref:typename:W32_File_Cabinet	file:
file_cabinet	code/win.cpp	/^  Win_File_Cabinet file_cabinet;$/;"	m	language:C++	struct:Win_State	typeref:typename:Win_File_Cabinet	file:
file_cabinet	w32.cpp	/^  W32_File_Cabinet file_cabinet;$/;"	m	language:C++	struct:W32_State	typeref:typename:W32_File_Cabinet	file:
file_name	code/sui_pack.h	/^  const C8* file_name;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:const C8 *
file_name	code/sui_pack.h	/^  const char* file_name;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:const char *
file_name	sui_pack.h	/^  const C8* file_name;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:const C8 *
file_name	sui_pack.h	/^  const char* file_name;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:const char *
filter_method	code/momo_png.h	/^  U8 filter_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
filter_method	code/momo_png.h	/^  U8 filter_method;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8
filter_method	momo_png.h	/^  U8 filter_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
filter_method	momo_png.h	/^  U8 filter_method;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8
first	code/game_profiler.h	/^  Profiler_Entry* first;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry *
first	game_profiler.h	/^  Profiler_Entry* first;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry *
first_asset_index	code/karu.h	/^  U32 first_asset_index;$/;"	m	language:C++	struct:Karu_Asset_Group	typeref:typename:U32
first_asset_index	karu.h	/^  U32 first_asset_index;$/;"	m	language:C++	struct:Karu_Asset_Group	typeref:typename:U32
first_atlas_font_glyph_id	code/sui_pack.h	/^  U32 first_atlas_font_glyph_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
first_atlas_font_glyph_id	sui_pack.h	/^  U32 first_atlas_font_glyph_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
first_atlas_font_id	code/sui_pack.h	/^  U32 first_atlas_font_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
first_atlas_font_id	sui_pack.h	/^  U32 first_atlas_font_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
first_atlas_sprite_id	code/sui_pack.h	/^  U32 first_atlas_sprite_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
first_atlas_sprite_id	sui_pack.h	/^  U32 first_atlas_sprite_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
first_payload_index	code/game_gfx.h	/^  UMI first_payload_index;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
first_payload_index	code/game_renderer.h	/^  UMI first_payload_index;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
first_payload_index	game_gfx.h	/^  UMI first_payload_index;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
flags	code/momo_ttf.h	/^  U8 flags;$/;"	m	language:C++	struct:__anon54d1bdca0308	typeref:typename:U8
flags	momo_ttf.h	/^  U8 flags;$/;"	m	language:C++	struct:__anon4eb927a00308	typeref:typename:U8
floor_f32	code/momo_intrinsics.h	/^static F32 floor_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
floor_f32	code/momo_intrinsics.h	/^static F32 floor_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
floor_f32	momo_intrinsics.h	/^static F32 floor_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
floor_f32	momo_intrinsics.h	/^static F32 floor_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
floor_f64	code/momo_intrinsics.h	/^static F64 floor_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
floor_f64	code/momo_intrinsics.h	/^static F64 floor_f64(F64 value){$/;"	f	language:C++	typeref:typename:F64
floor_f64	momo_intrinsics.h	/^static F64 floor_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
floor_f64	momo_intrinsics.h	/^static F64 floor_f64(F64 value){$/;"	f	language:C++	typeref:typename:F64
fmt_chunk	code/momo_wav.h	/^  WAV_Fmt_Chunk fmt_chunk;$/;"	m	language:C++	struct:__anon54fde02a0408	typeref:typename:WAV_Fmt_Chunk
fmt_chunk	momo_wav.h	/^  WAV_Fmt_Chunk fmt_chunk;$/;"	m	language:C++	struct:__anon4ee54a000408	typeref:typename:WAV_Fmt_Chunk
font	code/sui_atlas.h	/^  Sui_Atlas_Font* font;$/;"	m	language:C++	struct:Sui_Atlas_Font_Glyph_Context	typeref:typename:Sui_Atlas_Font *
font	sui_atlas.h	/^  Sui_Atlas_Font* font;$/;"	m	language:C++	struct:Sui_Atlas_Font_Glyph_Context	typeref:typename:Sui_Atlas_Font *
fonts	code/game_assets.h	/^  Font_Asset* fonts;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Font_Asset *
fonts	code/sui_atlas.h	/^  Sui_Atlas_Font fonts[128];$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Sui_Atlas_Font[128]
fonts	code/sui_pack.h	/^  Sui_Packer_Font fonts[64];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font[64]
fonts	game_assets.h	/^  Font_Asset* fonts;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Font_Asset *
fonts	sui_atlas.h	/^  Sui_Atlas_Font fonts[128];$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Sui_Atlas_Font[128]
fonts	sui_pack.h	/^  Sui_Packer_Font fonts[64];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font[64]
Font_Asset	code/game_assets.h	/^struct Font_Asset {$/;"	s	language:C++
Font_Asset	game_assets.h	/^struct Font_Asset {$/;"	s	language:C++
font_count	code/game_assets.h	/^  U32 font_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
font_count	code/karu.h	/^  U32 font_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
font_count	code/sui_atlas.h	/^  U32 font_count;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:U32
font_count	code/sui_pack.h	/^  U32 font_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
font_count	game_assets.h	/^  U32 font_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
font_count	karu.h	/^  U32 font_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
font_count	sui_atlas.h	/^  U32 font_count;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:U32
font_count	sui_pack.h	/^  U32 font_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
FONT_DEBUG	code/generated_font_ids.h	/^FONT_DEBUG = PACK_DEFAULT << 16 | 1,$/;"	e	language:C++	enum:Font_ID
FONT_DEBUG	generated_font_ids.h	/^FONT_DEBUG = PACK_DEFAULT << 16 | 1,$/;"	e	language:C++	enum:Font_ID
FONT_DEFAULT	code/generated_font_ids.h	/^FONT_DEFAULT = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Font_ID
FONT_DEFAULT	generated_font_ids.h	/^FONT_DEFAULT = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Font_ID
font_file_name	code/sui_atlas.h	/^  const char* font_file_name;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:const char *
font_file_name	sui_atlas.h	/^  const char* font_file_name;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:const char *
font_glyph	code/sui_atlas.h	/^    Sui_Atlas_Font_Glyph_Context font_glyph;$/;"	m	language:C++	union:Sui_Atlas_Context::__anon2ac8214a010a	typeref:typename:Sui_Atlas_Font_Glyph_Context
font_glyph	sui_atlas.h	/^    Sui_Atlas_Font_Glyph_Context font_glyph;$/;"	m	language:C++	union:Sui_Atlas_Context::__anon619cc5e0010a	typeref:typename:Sui_Atlas_Font_Glyph_Context
font_glyphs	code/sui_pack.h	/^  Sui_Packer_Font_Glyph font_glyphs[256];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font_Glyph[256]
font_glyphs	sui_pack.h	/^  Sui_Packer_Font_Glyph font_glyphs[256];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Font_Glyph[256]
Font_Glyph_Asset	code/game_assets.h	/^struct Font_Glyph_Asset{$/;"	s	language:C++
Font_Glyph_Asset	game_assets.h	/^struct Font_Glyph_Asset{$/;"	s	language:C++
font_glyph_count	code/sui_pack.h	/^  U32 font_glyph_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
font_glyph_count	sui_pack.h	/^  U32 font_glyph_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
Font_ID	code/generated_font_ids.h	/^enum Font_ID {$/;"	g	language:C++
Font_ID	generated_font_ids.h	/^enum Font_ID {$/;"	g	language:C++
font_id_file	code/sui_pack.h	/^  FILE* font_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
font_id_file	sui_pack.h	/^  FILE* font_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
font_id_name	code/sui_atlas.h	/^  const char* font_id_name;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:const char *
font_id_name	sui_atlas.h	/^  const char* font_id_name;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:const char *
foo	build/meta_test.cpp	/^static int foo() {$/;"	f	language:C++	typeref:struct:Test_Struct int
foreach	code/momo_common.h	/^#define foreach(/;"	d	language:C++
foreach	momo_common.h	/^#define foreach(/;"	d	language:C++
format	code/momo_wav.h	/^  U32 format; \/\/ big endian$/;"	m	language:C++	struct:__anon54fde02a0108	typeref:typename:U32
format	momo_wav.h	/^  U32 format; \/\/ big endian$/;"	m	language:C++	struct:__anon4ee54a000108	typeref:typename:U32
framebufferHeight	test.c	/^        int framebufferHeight;              \/\/ Current framebuffer height$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
framebufferWidth	test.c	/^        int framebufferWidth;               \/\/ Current framebuffer width$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
frame_arena	code/game.h	/^  Bump_Allocator frame_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
frame_arena	game.h	/^  Bump_Allocator frame_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
free_files	code/w32.cpp	/^  U32 free_files[32];$/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:U32[32]	file:
free_files	code/win.cpp	/^  U32 free_files[32];$/;"	m	language:C++	struct:Win_File_Cabinet	typeref:typename:U32[32]	file:
free_files	w32.cpp	/^  U32 free_files[32];$/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:U32[32]	file:
free_file_count	code/w32.cpp	/^  U32 free_file_count;$/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:U32	file:
free_file_count	code/win.cpp	/^  U32 free_file_count;$/;"	m	language:C++	struct:Win_File_Cabinet	typeref:typename:U32	file:
free_file_count	w32.cpp	/^  U32 free_file_count;$/;"	m	language:C++	struct:W32_File_Cabinet	typeref:typename:U32	file:
func	code/game_console.h	/^  void (*func)(void*);$/;"	m	language:C++	struct:Console_Command	typeref:typename:void (*)(void *)
func	game_console.h	/^  void (*func)(void*);$/;"	m	language:C++	struct:Console_Command	typeref:typename:void (*)(void *)
functions	code/w32_loaded_code.h	/^  void** functions;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:void **
functions	code/win_loaded_code.h	/^  void** functions;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:void **
functions	w32_loaded_code.h	/^  void** functions;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:void **
function_count	code/w32_loaded_code.h	/^  U32 function_count;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:U32
function_count	code/win_loaded_code.h	/^  U32 function_count;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:U32
function_count	w32_loaded_code.h	/^  U32 function_count;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:U32
function_names	code/w32_loaded_code.h	/^  const char** function_names;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:const char **
function_names	code/win_loaded_code.h	/^  const char** function_names;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char **
function_names	w32_loaded_code.h	/^  const char** function_names;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char **
g	code/momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonb89fa6ae0308::__anonb89fa6ae040a::__anonb89fa6ae0508	typeref:typename:F32
g	code/momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonb89fa6ae0108	typeref:typename:F32
g	momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonf72fc8c40308::__anonf72fc8c4040a::__anonf72fc8c40508	typeref:typename:F32
g	momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonf72fc8c40108	typeref:typename:F32
ga	code/game_painter.h	/^  Game_Assets* ga;$/;"	m	language:C++	struct:Painter	typeref:typename:Game_Assets *
ga	game_painter.h	/^  Game_Assets* ga;$/;"	m	language:C++	struct:Painter	typeref:typename:Game_Assets *
Game	code/game.h	/^struct Game {$/;"	s	language:C++
game	code/game_platform.h	/^  void* game;$/;"	m	language:C++	struct:Platform	typeref:typename:void *
Game	game.h	/^struct Game {$/;"	s	language:C++
game	game_platform.h	/^  void* game;$/;"	m	language:C++	struct:Platform	typeref:typename:void *
game_allocate_mode	code/game.h	/^#define game_allocate_mode(/;"	d	language:C++
game_allocate_mode	game.h	/^#define game_allocate_mode(/;"	d	language:C++
game_allocate_mode_size	code/game.h	/^game_allocate_mode_size(Game* game, UMI size) {$/;"	f	language:C++	typeref:typename:void *
game_allocate_mode_size	game.h	/^game_allocate_mode_size(Game* game, UMI size) {$/;"	f	language:C++	typeref:typename:void *
game_arena	code/game_platform.h	/^  Bump_Allocator* game_arena; \/\/ Require 32MB$/;"	m	language:C++	struct:Platform	typeref:typename:Bump_Allocator *
game_arena	game_platform.h	/^  Bump_Allocator* game_arena; \/\/ Require 32MB$/;"	m	language:C++	struct:Platform	typeref:typename:Bump_Allocator *
GAME_ASPECT	code/game_platform.h	/^#define GAME_ASPECT /;"	d	language:C++
GAME_ASPECT	game_platform.h	/^#define GAME_ASPECT /;"	d	language:C++
game_assets	code/game.h	/^  Game_Assets game_assets;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Assets
Game_Assets	code/game_assets.h	/^struct Game_Assets {$/;"	s	language:C++
game_assets	game.h	/^  Game_Assets game_assets;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Assets
Game_Assets	game_assets.h	/^struct Game_Assets {$/;"	s	language:C++
GAME_ASSETS_H	code/game_assets.h	/^#define GAME_ASSETS_H$/;"	d	language:C++
GAME_ASSETS_H	game_assets.h	/^#define GAME_ASSETS_H$/;"	d	language:C++
GAME_ASSETS_RENDER_H	code/game_assets_rendering.h	/^#define GAME_ASSETS_RENDER_H$/;"	d	language:C++
GAME_ASSETS_RENDER_H	game_assets_rendering.h	/^#define GAME_ASSETS_RENDER_H$/;"	d	language:C++
GAME_ASSET_IDS_H	code/game_asset_ids.h	/^#define GAME_ASSET_IDS_H$/;"	d	language:C++
GAME_ASSET_IDS_H	game_asset_ids.h	/^#define GAME_ASSET_IDS_H$/;"	d	language:C++
GAME_CONSOLE_H	code/game_console.h	/^#define GAME_CONSOLE_H$/;"	d	language:C++
GAME_CONSOLE_H	game_console.h	/^#define GAME_CONSOLE_H$/;"	d	language:C++
GAME_DEBUG_H	code/game_debug.h	/^#define GAME_DEBUG_H$/;"	d	language:C++
GAME_DEBUG_H	game_debug.h	/^#define GAME_DEBUG_H$/;"	d	language:C++
Game_Debug_Update_And_Render	code/game_platform.h	/^typedef void Game_Debug_Update_And_Render(Platform* pf);$/;"	t	language:C++	typeref:typename:void ()(Platform * pf)
Game_Debug_Update_And_Render	game_platform.h	/^typedef void Game_Debug_Update_And_Render(Platform* pf);$/;"	t	language:C++	typeref:typename:void ()(Platform * pf)
GAME_DIMENSIONS	code/game_platform.h	/^#define GAME_DIMENSIONS /;"	d	language:C++
GAME_DIMENSIONS	game_platform.h	/^#define GAME_DIMENSIONS /;"	d	language:C++
Game_Functions	code/game_platform.h	/^struct Game_Functions {$/;"	s	language:C++
Game_Functions	game_platform.h	/^struct Game_Functions {$/;"	s	language:C++
game_function_names	code/game_platform.h	/^static const char* game_function_names[] {$/;"	v	language:C++	typeref:typename:const char * []
game_function_names	game_platform.h	/^static const char* game_function_names[] {$/;"	v	language:C++	typeref:typename:const char * []
game_goto_mode	code/game.h	/^game_goto_mode(Game* game, Game_Mode_Type type) {$/;"	f	language:C++	typeref:typename:void
game_goto_mode	game.h	/^game_goto_mode(Game* game, Game_Mode_Type type) {$/;"	f	language:C++	typeref:typename:void
GAME_H	code/game.h	/^#define GAME_H$/;"	d	language:C++
GAME_H	game.h	/^#define GAME_H$/;"	d	language:C++
GAME_HEIGHT	code/game_platform.h	/^#define GAME_HEIGHT /;"	d	language:C++
GAME_HEIGHT	game_platform.h	/^#define GAME_HEIGHT /;"	d	language:C++
GAME_INSPECTOR_H	code/game_inspector.h	/^#define GAME_INSPECTOR_H$/;"	d	language:C++
GAME_INSPECTOR_H	game_inspector.h	/^#define GAME_INSPECTOR_H$/;"	d	language:C++
GAME_INSPECTOR_RENDERING_H	code/game_inspector_rendering.h	/^#define GAME_INSPECTOR_RENDERING_H$/;"	d	language:C++
GAME_INSPECTOR_RENDERING_H	game_inspector_rendering.h	/^#define GAME_INSPECTOR_RENDERING_H$/;"	d	language:C++
game_log	code/game.h	/^#define game_log(/;"	d	language:C++
game_log	code/game.h	/^#define game_log(/;"	d	language:C++
game_log	game.h	/^#define game_log(/;"	d	language:C++
game_log	game.h	/^#define game_log(/;"	d	language:C++
GAME_MIDPOINT	code/game_platform.h	/^#define GAME_MIDPOINT /;"	d	language:C++
GAME_MIDPOINT	game_platform.h	/^#define GAME_MIDPOINT /;"	d	language:C++
game_modes	code/game.h	/^static Game_Mode_Tick game_modes[] = {$/;"	v	language:C++	typeref:typename:Game_Mode_Tick[]
game_modes	game.h	/^static Game_Mode_Tick game_modes[] = {$/;"	v	language:C++	typeref:typename:Game_Mode_Tick[]
GAME_MODE_COMPUTER	code/game_mode_computer.h	/^#define GAME_MODE_COMPUTER$/;"	d	language:C++
GAME_MODE_COMPUTER	game_mode_computer.h	/^#define GAME_MODE_COMPUTER$/;"	d	language:C++
game_mode_initialized	code/game.h	/^game_mode_initialized(Game* game) {$/;"	f	language:C++	typeref:typename:B32
game_mode_initialized	game.h	/^game_mode_initialized(Game* game) {$/;"	f	language:C++	typeref:typename:B32
GAME_MODE_LEVEL_EDITOR_H	code/game_mode_level_editor.h	/^#define GAME_MODE_LEVEL_EDITOR_H$/;"	d	language:C++
GAME_MODE_LEVEL_EDITOR_H	game_mode_level_editor.h	/^#define GAME_MODE_LEVEL_EDITOR_H$/;"	d	language:C++
GAME_MODE_LEVEL_H	code/game_mode_level.h	/^#define GAME_MODE_LEVEL_H$/;"	d	language:C++
GAME_MODE_LEVEL_LIGHT_H	code/game_mode_level_light.h	/^#define GAME_MODE_LEVEL_LIGHT_H$/;"	d	language:C++
GAME_MODE_LEVEL_LIGHT_H	game_mode_level_light.h	/^#define GAME_MODE_LEVEL_LIGHT_H$/;"	d	language:C++
GAME_MODE_LIT_H	code/game_mode_lit.h	/^#define GAME_MODE_LIT_H$/;"	d	language:C++
GAME_MODE_LIT_H	code/game_mode_sb1.h	/^#define GAME_MODE_LIT_H$/;"	d	language:C++
GAME_MODE_LIT_H	game_mode_lit.h	/^#define GAME_MODE_LIT_H$/;"	d	language:C++
GAME_MODE_SPLASH_H	code/game_mode_splash.h	/^#define GAME_MODE_SPLASH_H$/;"	d	language:C++
GAME_MODE_SPLASH_H	game_mode_splash.h	/^#define GAME_MODE_SPLASH_H$/;"	d	language:C++
Game_Mode_Tick	code/game.h	/^typedef void (*Game_Mode_Tick)(Game*, Painter*, Platform*);$/;"	t	language:C++	typeref:typename:void (*)(Game *,Painter *,Platform *)
Game_Mode_Tick	game.h	/^typedef void (*Game_Mode_Tick)(Game*, Painter*, Platform*);$/;"	t	language:C++	typeref:typename:void (*)(Game *,Painter *,Platform *)
Game_Mode_Type	code/game.h	/^enum Game_Mode_Type {$/;"	g	language:C++
Game_Mode_Type	game.h	/^enum Game_Mode_Type {$/;"	g	language:C++
GAME_MODE_TYPE_COMPUTER	code/game.h	/^  GAME_MODE_TYPE_COMPUTER,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_MODE_TYPE_COMPUTER	game.h	/^  GAME_MODE_TYPE_COMPUTER,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_MODE_TYPE_LIT	code/game.h	/^  GAME_MODE_TYPE_LIT,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_MODE_TYPE_LIT	game.h	/^  GAME_MODE_TYPE_LIT,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_MODE_TYPE_SPLASH	code/game.h	/^  GAME_MODE_TYPE_SPLASH,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_MODE_TYPE_SPLASH	game.h	/^  GAME_MODE_TYPE_SPLASH,$/;"	e	language:C++	enum:Game_Mode_Type
GAME_PAINTER_H	code/game_painter.h	/^#define GAME_PAINTER_H$/;"	d	language:C++
GAME_PAINTER_H	game_painter.h	/^#define GAME_PAINTER_H$/;"	d	language:C++
GAME_PLATFORM_H	code/game_platform.h	/^#define GAME_PLATFORM_H$/;"	d	language:C++
GAME_PLATFORM_H	game_platform.h	/^#define GAME_PLATFORM_H$/;"	d	language:C++
game_profiler_block	code/game.h	/^#define game_profiler_block(/;"	d	language:C++
game_profiler_block	game.h	/^#define game_profiler_block(/;"	d	language:C++
GAME_PROFILER_H	code/game_profiler.h	/^#define GAME_PROFILER_H$/;"	d	language:C++
GAME_PROFILER_H	game_profiler.h	/^#define GAME_PROFILER_H$/;"	d	language:C++
GAME_PROFILER_RENDERING_H	code/game_profiler_rendering.h	/^#define GAME_PROFILER_RENDERING_H$/;"	d	language:C++
GAME_PROFILER_RENDERING_H	game_profiler_rendering.h	/^#define GAME_PROFILER_RENDERING_H$/;"	d	language:C++
game_profile_block	code/game.h	/^#define game_profile_block(/;"	d	language:C++
game_profile_block	game.h	/^#define game_profile_block(/;"	d	language:C++
GAME_RENDERER_H	code/game_gfx.h	/^#define GAME_RENDERER_H$/;"	d	language:C++
GAME_RENDERER_H	code/game_renderer.h	/^#define GAME_RENDERER_H$/;"	d	language:C++
GAME_RENDERER_H	game_gfx.h	/^#define GAME_RENDERER_H$/;"	d	language:C++
GAME_SB1_H	.\code\game_sb1.h	2;"	d	language:C++
GAME_SHOW_DEBUG_CONSOLE	code/game.h	/^  GAME_SHOW_DEBUG_CONSOLE,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_CONSOLE	game.h	/^  GAME_SHOW_DEBUG_CONSOLE,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_INSPECTOR	code/game.h	/^  GAME_SHOW_DEBUG_INSPECTOR,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_INSPECTOR	game.h	/^  GAME_SHOW_DEBUG_INSPECTOR,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_MAX	code/game.h	/^  GAME_SHOW_DEBUG_MAX$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_MAX	game.h	/^  GAME_SHOW_DEBUG_MAX$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_NONE	code/game.h	/^  GAME_SHOW_DEBUG_NONE,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_NONE	game.h	/^  GAME_SHOW_DEBUG_NONE,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_PROFILER	code/game.h	/^  GAME_SHOW_DEBUG_PROFILER,$/;"	e	language:C++	enum:Game_Show_Debug_Type
GAME_SHOW_DEBUG_PROFILER	game.h	/^  GAME_SHOW_DEBUG_PROFILER,$/;"	e	language:C++	enum:Game_Show_Debug_Type
Game_Show_Debug_Type	code/game.h	/^enum Game_Show_Debug_Type {$/;"	g	language:C++
Game_Show_Debug_Type	game.h	/^enum Game_Show_Debug_Type {$/;"	g	language:C++
game_update_and_render	code/game.cpp	/^game_update_and_render(Platform* pf)$/;"	f	language:C++	typeref:typename:exported B32
Game_Update_And_Render	code/game_platform.h	/^typedef void Game_Update_And_Render(Platform* pf);$/;"	t	language:C++	typeref:typename:void ()(Platform * pf)
game_update_and_render	game.cpp	/^game_update_and_render(Platform* pf)$/;"	f	language:C++	typeref:typename:exported B32
Game_Update_And_Render	game_platform.h	/^typedef void Game_Update_And_Render(Platform* pf);$/;"	t	language:C++	typeref:typename:void ()(Platform * pf)
GAME_WIDTH	code/game_platform.h	/^#define GAME_WIDTH /;"	d	language:C++
GAME_WIDTH	game_platform.h	/^#define GAME_WIDTH /;"	d	language:C++
GB	code/momo_common.h	/^#define GB(/;"	d	language:C++
GB	momo_common.h	/^#define GB(/;"	d	language:C++
gen_light_intersections	code/game_mode_level_light.cpp	/^gen_light_intersections(Light* l, $/;"	f	language:C++	typeref:typename:void	file:
gen_light_intersections	game_mode_level_light.cpp	/^gen_light_intersections(Light* l, $/;"	f	language:C++	typeref:typename:void	file:
get_bitmap	code/game_assets.h	/^get_bitmap(Game_Assets* ga, Bitmap_ID id) {$/;"	f	language:C++	typeref:typename:Bitmap_Asset *
get_bitmap	game_assets.h	/^get_bitmap(Game_Assets* ga, Bitmap_ID id) {$/;"	f	language:C++	typeref:typename:Bitmap_Asset *
get_font	code/game_assets.h	/^get_font(Game_Assets* ga, Font_ID id) {$/;"	f	language:C++	typeref:typename:Font_Asset *
get_font	game_assets.h	/^get_font(Game_Assets* ga, Font_ID id) {$/;"	f	language:C++	typeref:typename:Font_Asset *
get_glyph	code/game_assets.h	/^get_glyph(Font_Asset* font, U32 codepoint) {$/;"	f	language:C++	typeref:typename:Font_Glyph_Asset *
get_glyph	game_assets.h	/^get_glyph(Font_Asset* font, U32 codepoint) {$/;"	f	language:C++	typeref:typename:Font_Glyph_Asset *
get_horizontal_advance	code/game_assets.h	/^get_horizontal_advance(Font_Asset* font,$/;"	f	language:C++	typeref:typename:F32
get_horizontal_advance	game_assets.h	/^get_horizontal_advance(Font_Asset* font,$/;"	f	language:C++	typeref:typename:F32
get_next_texture_handle	code/game_assets.h	/^get_next_texture_handle() {  $/;"	f	language:C++	typeref:typename:U32
get_next_texture_handle	game_assets.h	/^get_next_texture_handle() {  $/;"	f	language:C++	typeref:typename:U32
get_pack_id	code/game_asset_ids.h	/^static U32 get_pack_id(Bitmap_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_pack_id	code/game_asset_ids.h	/^static U32 get_pack_id(Font_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_pack_id	code/game_asset_ids.h	/^static U32 get_pack_id(Sprite_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_pack_id	game_asset_ids.h	/^static U32 get_pack_id(Bitmap_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_pack_id	game_asset_ids.h	/^static U32 get_pack_id(Font_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_pack_id	game_asset_ids.h	/^static U32 get_pack_id(Sprite_ID id) {return id >> 16;}$/;"	f	language:C++	typeref:typename:U32
get_performance_counter	code/game_platform.h	/^  Platform_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Get_Performance_Counter *
get_performance_counter	code/game_platform.h	/^  Platform_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Get_Performance_Counter *
get_performance_counter	code/game_profiler.h	/^  Profiler_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Get_Performance_Counter *
get_performance_counter	game_platform.h	/^  Platform_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Get_Performance_Counter *
get_performance_counter	game_platform.h	/^  Platform_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Get_Performance_Counter *
get_performance_counter	game_profiler.h	/^  Profiler_Get_Performance_Counter* get_performance_counter;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Get_Performance_Counter *
get_ray_intersection_time_wrt_edges	code/game_mode_level_light.cpp	/^get_ray_intersection_time_wrt_edges(Ray2 ray,$/;"	f	language:C++	typeref:typename:F32	file:
get_ray_intersection_time_wrt_edges	game_mode_level_light.cpp	/^get_ray_intersection_time_wrt_edges(Ray2 ray,$/;"	f	language:C++	typeref:typename:F32	file:
get_real_id	code/game_asset_ids.h	/^static U32 get_real_id(Bitmap_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_real_id	code/game_asset_ids.h	/^static U32 get_real_id(Font_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_real_id	code/game_asset_ids.h	/^static U32 get_real_id(Sprite_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_real_id	game_asset_ids.h	/^static U32 get_real_id(Bitmap_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_real_id	game_asset_ids.h	/^static U32 get_real_id(Font_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_real_id	game_asset_ids.h	/^static U32 get_real_id(Sprite_ID id) {return id & 0x0000FFFF;}$/;"	f	language:C++	typeref:typename:U32
get_sprite	code/game_assets.h	/^get_sprite(Game_Assets* ga, Sprite_ID id) {$/;"	f	language:C++	typeref:typename:Sprite_Asset *
get_sprite	game_assets.h	/^get_sprite(Game_Assets* ga, Sprite_ID id) {$/;"	f	language:C++	typeref:typename:Sprite_Asset *
Gfx	code/game_gfx.h	/^struct Gfx {	$/;"	s	language:C++
gfx	code/game_gfx_opengl.h	/^  Gfx gfx; \/\/ Must be first member$/;"	m	language:C++	struct:Opengl	typeref:typename:Gfx
gfx	code/game_painter.h	/^  Gfx* gfx;$/;"	m	language:C++	struct:Painter	typeref:typename:Gfx *
gfx	code/game_platform.h	/^  Gfx* gfx;$/;"	m	language:C++	struct:Platform	typeref:typename:Gfx *
Gfx	code/game_renderer.h	/^struct Gfx {	$/;"	s	language:C++
gfx	code/game_renderer_opengl.h	/^  Gfx gfx; \/\/ Must be first member$/;"	m	language:C++	struct:Opengl	typeref:typename:Gfx
Gfx	game_gfx.h	/^struct Gfx {	$/;"	s	language:C++
gfx	game_gfx_opengl.h	/^  Gfx gfx; \/\/ Must be first member$/;"	m	language:C++	struct:Opengl	typeref:typename:Gfx
gfx	game_painter.h	/^  Gfx* gfx;$/;"	m	language:C++	struct:Painter	typeref:typename:Gfx *
gfx	game_platform.h	/^  Gfx* gfx;$/;"	m	language:C++	struct:Platform	typeref:typename:Gfx *
gfx_advance_depth	code/game_gfx.h	/^gfx_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_advance_depth	code/game_gfx.h	/^static void gfx_advance_depth(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_advance_depth	code/game_renderer.h	/^gfx_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_advance_depth	code/game_renderer.h	/^static void gfx_advance_depth(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_advance_depth	game_gfx.h	/^gfx_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_advance_depth	game_gfx.h	/^static void gfx_advance_depth(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_begin_texture_transfer	code/game_gfx.h	/^gfx_begin_texture_transfer(Gfx* g, U32 required_space) {$/;"	f	language:C++	typeref:typename:Gfx_Texture_Payload *
gfx_begin_texture_transfer	code/game_gfx.h	/^static Gfx_Texture_Payload* gfx_begin_texture_transfer(Gfx* g, U32 required_space);$/;"	p	language:C++	typeref:typename:Gfx_Texture_Payload *
gfx_begin_texture_transfer	code/game_renderer.h	/^gfx_begin_texture_transfer(Gfx* g, U32 required_space) {$/;"	f	language:C++	typeref:typename:Gfx_Texture_Payload *
gfx_begin_texture_transfer	code/game_renderer.h	/^static Gfx_Texture_Payload* gfx_begin_texture_transfer(Gfx* g, U32 required_space);$/;"	p	language:C++	typeref:typename:Gfx_Texture_Payload *
gfx_begin_texture_transfer	game_gfx.h	/^gfx_begin_texture_transfer(Gfx* g, U32 required_space) {$/;"	f	language:C++	typeref:typename:Gfx_Texture_Payload *
gfx_begin_texture_transfer	game_gfx.h	/^static Gfx_Texture_Payload* gfx_begin_texture_transfer(Gfx* g, U32 required_space);$/;"	p	language:C++	typeref:typename:Gfx_Texture_Payload *
Gfx_Blend_Type	code/game_gfx.h	/^enum Gfx_Blend_Type {$/;"	g	language:C++
Gfx_Blend_Type	code/game_renderer.h	/^enum Gfx_Blend_Type {$/;"	g	language:C++
Gfx_Blend_Type	game_gfx.h	/^enum Gfx_Blend_Type {$/;"	g	language:C++
GFX_BLEND_TYPE_DST_ALPHA	code/game_gfx.h	/^  GFX_BLEND_TYPE_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_DST_ALPHA	code/game_renderer.h	/^  GFX_BLEND_TYPE_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_DST_ALPHA	game_gfx.h	/^  GFX_BLEND_TYPE_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_DST_COLOR	code/game_gfx.h	/^  GFX_BLEND_TYPE_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_DST_COLOR	code/game_renderer.h	/^  GFX_BLEND_TYPE_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_DST_COLOR	game_gfx.h	/^  GFX_BLEND_TYPE_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_ALPHA	code/game_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_ALPHA	code/game_renderer.h	/^  GFX_BLEND_TYPE_INV_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_ALPHA	game_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_COLOR	code/game_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_COLOR	code/game_renderer.h	/^  GFX_BLEND_TYPE_INV_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_DST_COLOR	game_gfx.h	/^  GFX_BLEND_TYPE_INV_DST_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_ALPHA	code/game_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_ALPHA	code/game_renderer.h	/^  GFX_BLEND_TYPE_INV_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_ALPHA	game_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_COLOR	code/game_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_COLOR	code/game_renderer.h	/^  GFX_BLEND_TYPE_INV_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_INV_SRC_COLOR	game_gfx.h	/^  GFX_BLEND_TYPE_INV_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ONE	code/game_gfx.h	/^  GFX_BLEND_TYPE_ONE,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ONE	code/game_renderer.h	/^  GFX_BLEND_TYPE_ONE,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ONE	game_gfx.h	/^  GFX_BLEND_TYPE_ONE,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_ALPHA	code/game_gfx.h	/^  GFX_BLEND_TYPE_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_ALPHA	code/game_renderer.h	/^  GFX_BLEND_TYPE_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_ALPHA	game_gfx.h	/^  GFX_BLEND_TYPE_SRC_ALPHA,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_COLOR	code/game_gfx.h	/^  GFX_BLEND_TYPE_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_COLOR	code/game_renderer.h	/^  GFX_BLEND_TYPE_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_SRC_COLOR	game_gfx.h	/^  GFX_BLEND_TYPE_SRC_COLOR,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ZERO	code/game_gfx.h	/^  GFX_BLEND_TYPE_ZERO,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ZERO	code/game_renderer.h	/^  GFX_BLEND_TYPE_ZERO,$/;"	e	language:C++	enum:Gfx_Blend_Type
GFX_BLEND_TYPE_ZERO	game_gfx.h	/^  GFX_BLEND_TYPE_ZERO,$/;"	e	language:C++	enum:Gfx_Blend_Type
gfx_cancel_texture_transfer	code/game_gfx.h	/^gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	code/game_gfx.h	/^static void gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	code/game_renderer.h	/^gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	code/game_renderer.h	/^static void gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	game_gfx.h	/^gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_cancel_texture_transfer	game_gfx.h	/^static void gfx_cancel_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_clear_commands	code/game_gfx.h	/^gfx_clear_commands(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_clear_commands	code/game_gfx.h	/^static void gfx_clear_commands(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_clear_commands	code/game_renderer.h	/^gfx_clear_commands(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_clear_commands	code/game_renderer.h	/^static void gfx_clear_commands(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_clear_commands	game_gfx.h	/^gfx_clear_commands(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_clear_commands	game_gfx.h	/^static void gfx_clear_commands(Gfx* g);$/;"	p	language:C++	typeref:typename:void
Gfx_Command	code/game_gfx.h	/^struct Gfx_Command {$/;"	s	language:C++
Gfx_Command	code/game_renderer.h	/^struct Gfx_Command {$/;"	s	language:C++
Gfx_Command	game_gfx.h	/^struct Gfx_Command {$/;"	s	language:C++
Gfx_Command_Advance_Depth	code/game_gfx.h	/^struct Gfx_Command_Advance_Depth {};$/;"	s	language:C++
Gfx_Command_Advance_Depth	code/game_renderer.h	/^struct Gfx_Command_Advance_Depth {};$/;"	s	language:C++
Gfx_Command_Advance_Depth	game_gfx.h	/^struct Gfx_Command_Advance_Depth {};$/;"	s	language:C++
Gfx_Command_Blend	code/game_gfx.h	/^struct Gfx_Command_Blend {$/;"	s	language:C++
Gfx_Command_Blend	code/game_renderer.h	/^struct Gfx_Command_Blend {$/;"	s	language:C++
Gfx_Command_Blend	game_gfx.h	/^struct Gfx_Command_Blend {$/;"	s	language:C++
Gfx_Command_Clear	code/game_gfx.h	/^struct Gfx_Command_Clear {$/;"	s	language:C++
Gfx_Command_Clear	code/game_renderer.h	/^struct Gfx_Command_Clear {$/;"	s	language:C++
Gfx_Command_Clear	game_gfx.h	/^struct Gfx_Command_Clear {$/;"	s	language:C++
Gfx_Command_Delete_All_Textures	code/game_gfx.h	/^struct Gfx_Command_Delete_All_Textures {};$/;"	s	language:C++
Gfx_Command_Delete_All_Textures	code/game_renderer.h	/^struct Gfx_Command_Delete_All_Textures {};$/;"	s	language:C++
Gfx_Command_Delete_All_Textures	game_gfx.h	/^struct Gfx_Command_Delete_All_Textures {};$/;"	s	language:C++
Gfx_Command_Delete_Texture	code/game_gfx.h	/^struct Gfx_Command_Delete_Texture {$/;"	s	language:C++
Gfx_Command_Delete_Texture	code/game_renderer.h	/^struct Gfx_Command_Delete_Texture {$/;"	s	language:C++
Gfx_Command_Delete_Texture	game_gfx.h	/^struct Gfx_Command_Delete_Texture {$/;"	s	language:C++
Gfx_Command_Queue	code/game_gfx.h	/^struct Gfx_Command_Queue {$/;"	s	language:C++
Gfx_Command_Queue	code/game_renderer.h	/^struct Gfx_Command_Queue {$/;"	s	language:C++
Gfx_Command_Queue	game_gfx.h	/^struct Gfx_Command_Queue {$/;"	s	language:C++
Gfx_Command_Rect	code/game_gfx.h	/^struct Gfx_Command_Rect {$/;"	s	language:C++
Gfx_Command_Rect	code/game_renderer.h	/^struct Gfx_Command_Rect {$/;"	s	language:C++
Gfx_Command_Rect	game_gfx.h	/^struct Gfx_Command_Rect {$/;"	s	language:C++
Gfx_Command_Sprite	code/game_gfx.h	/^struct Gfx_Command_Sprite{$/;"	s	language:C++
Gfx_Command_Sprite	code/game_renderer.h	/^struct Gfx_Command_Sprite{$/;"	s	language:C++
Gfx_Command_Sprite	game_gfx.h	/^struct Gfx_Command_Sprite{$/;"	s	language:C++
Gfx_Command_Triangle	code/game_gfx.h	/^struct Gfx_Command_Triangle {$/;"	s	language:C++
Gfx_Command_Triangle	code/game_renderer.h	/^struct Gfx_Command_Triangle {$/;"	s	language:C++
Gfx_Command_Triangle	game_gfx.h	/^struct Gfx_Command_Triangle {$/;"	s	language:C++
Gfx_Command_Type	code/game_gfx.h	/^enum Gfx_Command_Type {$/;"	g	language:C++
Gfx_Command_Type	code/game_renderer.h	/^enum Gfx_Command_Type {$/;"	g	language:C++
Gfx_Command_Type	game_gfx.h	/^enum Gfx_Command_Type {$/;"	g	language:C++
GFX_COMMAND_TYPE_ADVANCE_DEPTH	code/game_gfx.h	/^  GFX_COMMAND_TYPE_ADVANCE_DEPTH,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_ADVANCE_DEPTH	code/game_renderer.h	/^  GFX_COMMAND_TYPE_ADVANCE_DEPTH,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_ADVANCE_DEPTH	game_gfx.h	/^  GFX_COMMAND_TYPE_ADVANCE_DEPTH,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_BLEND	code/game_gfx.h	/^  GFX_COMMAND_TYPE_BLEND,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_BLEND	code/game_renderer.h	/^  GFX_COMMAND_TYPE_BLEND,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_BLEND	game_gfx.h	/^  GFX_COMMAND_TYPE_BLEND,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_CLEAR	code/game_gfx.h	/^  GFX_COMMAND_TYPE_CLEAR,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_CLEAR	code/game_renderer.h	/^  GFX_COMMAND_TYPE_CLEAR,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_CLEAR	game_gfx.h	/^  GFX_COMMAND_TYPE_CLEAR,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES	code/game_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES	code/game_renderer.h	/^  GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES	game_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_ALL_TEXTURES,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_TEXTURE	code/game_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_TEXTURE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_TEXTURE	code/game_renderer.h	/^  GFX_COMMAND_TYPE_DELETE_TEXTURE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_DELETE_TEXTURE	game_gfx.h	/^  GFX_COMMAND_TYPE_DELETE_TEXTURE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_LINE	code/game_gfx.h	/^  GFX_COMMAND_TYPE_LINE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_LINE	code/game_renderer.h	/^  GFX_COMMAND_TYPE_LINE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_LINE	game_gfx.h	/^  GFX_COMMAND_TYPE_LINE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_RECT	code/game_gfx.h	/^  GFX_COMMAND_TYPE_RECT,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_RECT	code/game_renderer.h	/^  GFX_COMMAND_TYPE_RECT,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_RECT	game_gfx.h	/^  GFX_COMMAND_TYPE_RECT,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_SPRITE	code/game_gfx.h	/^  GFX_COMMAND_TYPE_SPRITE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_SPRITE	code/game_renderer.h	/^  GFX_COMMAND_TYPE_SPRITE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_SPRITE	game_gfx.h	/^  GFX_COMMAND_TYPE_SPRITE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_TRIANGLE	code/game_gfx.h	/^  GFX_COMMAND_TYPE_TRIANGLE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_TRIANGLE	code/game_renderer.h	/^  GFX_COMMAND_TYPE_TRIANGLE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_TRIANGLE	game_gfx.h	/^  GFX_COMMAND_TYPE_TRIANGLE,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_VIEW	code/game_gfx.h	/^  GFX_COMMAND_TYPE_VIEW,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_VIEW	code/game_renderer.h	/^  GFX_COMMAND_TYPE_VIEW,$/;"	e	language:C++	enum:Gfx_Command_Type
GFX_COMMAND_TYPE_VIEW	game_gfx.h	/^  GFX_COMMAND_TYPE_VIEW,$/;"	e	language:C++	enum:Gfx_Command_Type
Gfx_Command_View	code/game_gfx.h	/^struct Gfx_Command_View {$/;"	s	language:C++
Gfx_Command_View	code/game_renderer.h	/^struct Gfx_Command_View {$/;"	s	language:C++
Gfx_Command_View	game_gfx.h	/^struct Gfx_Command_View {$/;"	s	language:C++
gfx_complete_texture_transfer	code/game_gfx.h	/^gfx_complete_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_complete_texture_transfer	code/game_gfx.h	/^static void gfx_complete_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_complete_texture_transfer	code/game_renderer.h	/^gfx_complete_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_complete_texture_transfer	code/game_renderer.h	/^static void gfx_complete_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_complete_texture_transfer	game_gfx.h	/^gfx_complete_texture_transfer(Gfx_Texture_Payload* entry) {$/;"	f	language:C++	typeref:typename:void
gfx_complete_texture_transfer	game_gfx.h	/^static void gfx_complete_texture_transfer(Gfx_Texture_Payload* entry);$/;"	p	language:C++	typeref:typename:void
gfx_foreach_command	code/game_gfx.h	/^#define gfx_foreach_command(/;"	d	language:C++
gfx_foreach_command	code/game_renderer.h	/^#define gfx_foreach_command(/;"	d	language:C++
gfx_foreach_command	game_gfx.h	/^#define gfx_foreach_command(/;"	d	language:C++
gfx_get_command	code/game_gfx.h	/^gfx_get_command(Gfx* g, U32 index) {$/;"	f	language:C++	typeref:typename:Gfx_Command *
gfx_get_command	code/game_gfx.h	/^static Gfx_Command* gfx_get_command(Gfx* g, U32 index);$/;"	p	language:C++	typeref:typename:Gfx_Command *
gfx_get_command	code/game_renderer.h	/^gfx_get_command(Gfx* g, U32 index) {$/;"	f	language:C++	typeref:typename:Gfx_Command *
gfx_get_command	code/game_renderer.h	/^static Gfx_Command* gfx_get_command(Gfx* g, U32 index);$/;"	p	language:C++	typeref:typename:Gfx_Command *
gfx_get_command	game_gfx.h	/^gfx_get_command(Gfx* g, U32 index) {$/;"	f	language:C++	typeref:typename:Gfx_Command *
gfx_get_command	game_gfx.h	/^static Gfx_Command* gfx_get_command(Gfx* g, U32 index);$/;"	p	language:C++	typeref:typename:Gfx_Command *
gfx_init_command_queue	code/game_gfx.h	/^gfx_init_command_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_command_queue	code/game_gfx.h	/^static void gfx_init_command_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
gfx_init_command_queue	code/game_renderer.h	/^gfx_init_command_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_command_queue	code/game_renderer.h	/^static void gfx_init_command_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
gfx_init_command_queue	game_gfx.h	/^gfx_init_command_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_command_queue	game_gfx.h	/^static void gfx_init_command_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
gfx_init_texture_queue	code/game_gfx.h	/^gfx_init_texture_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_texture_queue	code/game_gfx.h	/^static void gfx_init_texture_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
gfx_init_texture_queue	code/game_renderer.h	/^gfx_init_texture_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_texture_queue	code/game_renderer.h	/^static void gfx_init_texture_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
gfx_init_texture_queue	game_gfx.h	/^gfx_init_texture_queue(Gfx* g, void* data, UMI size) {$/;"	f	language:C++	typeref:typename:void
gfx_init_texture_queue	game_gfx.h	/^static void gfx_init_texture_queue(Gfx* g, void* data, UMI size);$/;"	p	language:C++	typeref:typename:void
GFX_OGL_H	code/game_gfx_opengl.h	/^#define GFX_OGL_H$/;"	d	language:C++
GFX_OGL_H	game_gfx_opengl.h	/^#define GFX_OGL_H$/;"	d	language:C++
GFX_OPENGL_H	code/game_renderer_opengl.h	/^#define GFX_OPENGL_H$/;"	d	language:C++
gfx_push_advance_depth	code/game_gfx.h	/^gfx_push_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_advance_depth	code/game_gfx.h	/^static void gfx_push_advance_depth(Gfx* g); $/;"	p	language:C++	typeref:typename:void
gfx_push_advance_depth	code/game_renderer.h	/^gfx_push_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_advance_depth	code/game_renderer.h	/^static void gfx_push_advance_depth(Gfx* g); $/;"	p	language:C++	typeref:typename:void
gfx_push_advance_depth	game_gfx.h	/^gfx_push_advance_depth(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_advance_depth	game_gfx.h	/^static void gfx_push_advance_depth(Gfx* g); $/;"	p	language:C++	typeref:typename:void
gfx_push_blend	code/game_gfx.h	/^gfx_push_blend(Gfx* g, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
gfx_push_blend	code/game_gfx.h	/^static void gfx_push_blend(Gfx* g, Gfx_Blend_Type blend_type);$/;"	p	language:C++	typeref:typename:void
gfx_push_blend	code/game_renderer.h	/^gfx_push_blend(Gfx* g, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
gfx_push_blend	code/game_renderer.h	/^static void gfx_push_blend(Gfx* g, Gfx_Blend_Type blend_type);$/;"	p	language:C++	typeref:typename:void
gfx_push_blend	game_gfx.h	/^gfx_push_blend(Gfx* g, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
gfx_push_blend	game_gfx.h	/^static void gfx_push_blend(Gfx* g, Gfx_Blend_Type blend_type);$/;"	p	language:C++	typeref:typename:void
gfx_push_circle_outline	code/game_gfx.h	/^gfx_push_circle_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_circle_outline	code/game_gfx.h	/^static void gfx_push_circle_outline(Gfx* g, Circ2 circle, F32 thickness, U32 line_count, RGBA co/;"	p	language:C++	typeref:typename:void
gfx_push_circle_outline	code/game_renderer.h	/^gfx_push_circle_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_circle_outline	code/game_renderer.h	/^static void gfx_push_circle_outline(Gfx* g, Circ2 circle, F32 thickness, U32 line_count, RGBA co/;"	p	language:C++	typeref:typename:void
gfx_push_circle_outline	game_gfx.h	/^gfx_push_circle_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_circle_outline	game_gfx.h	/^static void gfx_push_circle_outline(Gfx* g, Circ2 circle, F32 thickness, U32 line_count, RGBA co/;"	p	language:C++	typeref:typename:void
gfx_push_colors	code/game_gfx.h	/^gfx_push_colors(Gfx* g, RGBA colors) {$/;"	f	language:C++	typeref:typename:void
gfx_push_colors	code/game_gfx.h	/^static void gfx_push_colors(Gfx* g, RGBA colors); $/;"	p	language:C++	typeref:typename:void
gfx_push_colors	code/game_renderer.h	/^gfx_push_colors(Gfx* g, RGBA colors) {$/;"	f	language:C++	typeref:typename:void
gfx_push_colors	code/game_renderer.h	/^static void gfx_push_colors(Gfx* g, RGBA colors); $/;"	p	language:C++	typeref:typename:void
gfx_push_colors	game_gfx.h	/^gfx_push_colors(Gfx* g, RGBA colors) {$/;"	f	language:C++	typeref:typename:void
gfx_push_colors	game_gfx.h	/^static void gfx_push_colors(Gfx* g, RGBA colors); $/;"	p	language:C++	typeref:typename:void
gfx_push_delete_all_textures	code/game_gfx.h	/^gfx_push_delete_all_textures(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_all_textures	code/game_gfx.h	/^static void gfx_push_delete_all_textures(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_all_textures	code/game_renderer.h	/^gfx_push_delete_all_textures(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_all_textures	code/game_renderer.h	/^static void gfx_push_delete_all_textures(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_all_textures	game_gfx.h	/^gfx_push_delete_all_textures(Gfx* g) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_all_textures	game_gfx.h	/^static void gfx_push_delete_all_textures(Gfx* g);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_texture	code/game_gfx.h	/^gfx_push_delete_texture(Gfx* g, U32 texture_index) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_texture	code/game_gfx.h	/^static void gfx_push_delete_texture(Gfx* g, U32 texture_index);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_texture	code/game_renderer.h	/^gfx_push_delete_texture(Gfx* g, U32 texture_index) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_texture	code/game_renderer.h	/^static void gfx_push_delete_texture(Gfx* g, U32 texture_index);$/;"	p	language:C++	typeref:typename:void
gfx_push_delete_texture	game_gfx.h	/^gfx_push_delete_texture(Gfx* g, U32 texture_index) {$/;"	f	language:C++	typeref:typename:void
gfx_push_delete_texture	game_gfx.h	/^static void gfx_push_delete_texture(Gfx* g, U32 texture_index);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_circle	code/game_gfx.h	/^gfx_push_filled_circle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_circle	code/game_renderer.h	/^gfx_push_filled_circle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_circle	game_gfx.h	/^gfx_push_filled_circle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	code/game_gfx.h	/^gfx_push_filled_rect(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	code/game_gfx.h	/^static void gfx_push_filled_rect(Gfx* g, RGBA colors, V2 pos, F32 rot, V2 size);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_rect	code/game_renderer.h	/^gfx_push_filled_rect(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	code/game_renderer.h	/^static void gfx_push_filled_rect(Gfx* g, RGBA colors, V2 pos, F32 rot, V2 size);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_rect	game_gfx.h	/^gfx_push_filled_rect(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_filled_rect	game_gfx.h	/^static void gfx_push_filled_rect(Gfx* g, RGBA colors, V2 pos, F32 rot, V2 size);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_triangle	code/game_gfx.h	/^gfx_push_filled_triangle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_triangle	code/game_gfx.h	/^static void gfx_push_filled_triangle(Gfx* g, RGBA colors, V2 p0, V2 p1, V2 p2);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_triangle	code/game_renderer.h	/^gfx_push_filled_triangle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_triangle	code/game_renderer.h	/^static void gfx_push_filled_triangle(Gfx* g, RGBA colors, V2 p0, V2 p1, V2 p2);$/;"	p	language:C++	typeref:typename:void
gfx_push_filled_triangle	game_gfx.h	/^gfx_push_filled_triangle(Gfx* g,$/;"	f	language:C++	typeref:typename:void
gfx_push_filled_triangle	game_gfx.h	/^static void gfx_push_filled_triangle(Gfx* g, RGBA colors, V2 p0, V2 p1, V2 p2);$/;"	p	language:C++	typeref:typename:void
gfx_push_line	code/game_gfx.h	/^gfx_push_line(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_line	code/game_gfx.h	/^static void gfx_push_line(Gfx* g, Line2 line, F32 thickness, RGBA colors);$/;"	p	language:C++	typeref:typename:void
gfx_push_line	code/game_renderer.h	/^gfx_push_line(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_line	code/game_renderer.h	/^static void gfx_push_line(Gfx* g, Line2 line, F32 thickness, RGBA colors);$/;"	p	language:C++	typeref:typename:void
gfx_push_line	game_gfx.h	/^gfx_push_line(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_line	game_gfx.h	/^static void gfx_push_line(Gfx* g, Line2 line, F32 thickness, RGBA colors);$/;"	p	language:C++	typeref:typename:void
gfx_push_rect_outline	code/game_gfx.h	/^gfx_push_rect_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_rect_outline	code/game_gfx.h	/^static void gfx_push_rect_outline(Gfx* g, Rect2 rect, F32 thickness, RGBA colors, F32 pos_z);$/;"	p	language:C++	typeref:typename:void
gfx_push_rect_outline	code/game_renderer.h	/^gfx_push_rect_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_rect_outline	code/game_renderer.h	/^static void gfx_push_rect_outline(Gfx* g, Rect2 rect, F32 thickness, RGBA colors, F32 pos_z);$/;"	p	language:C++	typeref:typename:void
gfx_push_rect_outline	game_gfx.h	/^gfx_push_rect_outline(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_rect_outline	game_gfx.h	/^static void gfx_push_rect_outline(Gfx* g, Rect2 rect, F32 thickness, RGBA colors, F32 pos_z);$/;"	p	language:C++	typeref:typename:void
gfx_push_sprite	code/game_gfx.h	/^gfx_push_sprite(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_sprite	code/game_gfx.h	/^static void gfx_push_sprite(Gfx* g, RGBA colors, V2 pos, V2 size, V2 anchor, U32 texture_index, /;"	p	language:C++	typeref:typename:void
gfx_push_sprite	code/game_renderer.h	/^gfx_push_sprite(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_sprite	code/game_renderer.h	/^static void gfx_push_sprite(Gfx* g, RGBA colors, V2 pos, V2 size, V2 anchor, U32 texture_index, /;"	p	language:C++	typeref:typename:void
gfx_push_sprite	game_gfx.h	/^gfx_push_sprite(Gfx* g, $/;"	f	language:C++	typeref:typename:void
gfx_push_sprite	game_gfx.h	/^static void gfx_push_sprite(Gfx* g, RGBA colors, V2 pos, V2 size, V2 anchor, U32 texture_index, /;"	p	language:C++	typeref:typename:void
gfx_push_view	code/game_gfx.h	/^gfx_push_view(Gfx* g, F32 min_x, F32 max_x, F32 min_y, F32 max_y, F32 pos_x, F32 pos_y) {$/;"	f	language:C++	typeref:typename:void
gfx_push_view	code/game_gfx.h	/^static void gfx_push_view(Gfx* g, V2 pos, F32 width, F32 height, U32 layers);$/;"	p	language:C++	typeref:typename:void
gfx_push_view	code/game_renderer.h	/^gfx_push_view(Gfx* g, V2 pos, F32 width, F32 height, U32 layers) {$/;"	f	language:C++	typeref:typename:void
gfx_push_view	code/game_renderer.h	/^static void gfx_push_view(Gfx* g, V2 pos, F32 width, F32 height, U32 layers);$/;"	p	language:C++	typeref:typename:void
gfx_push_view	game_gfx.h	/^gfx_push_view(Gfx* g, V2 pos, F32 width, F32 height, U32 layers) {$/;"	f	language:C++	typeref:typename:void
gfx_push_view	game_gfx.h	/^static void gfx_push_view(Gfx* g, V2 pos, F32 width, F32 height, U32 layers);$/;"	p	language:C++	typeref:typename:void
Gfx_Texture_Payload	code/game_gfx.h	/^struct Gfx_Texture_Payload {$/;"	s	language:C++
Gfx_Texture_Payload	code/game_renderer.h	/^struct Gfx_Texture_Payload {$/;"	s	language:C++
Gfx_Texture_Payload	game_gfx.h	/^struct Gfx_Texture_Payload {$/;"	s	language:C++
Gfx_Texture_Payload_State	code/game_gfx.h	/^enum Gfx_Texture_Payload_State {$/;"	g	language:C++
Gfx_Texture_Payload_State	code/game_renderer.h	/^enum Gfx_Texture_Payload_State {$/;"	g	language:C++
Gfx_Texture_Payload_State	game_gfx.h	/^enum Gfx_Texture_Payload_State {$/;"	g	language:C++
GFX_TEXTURE_PAYLOAD_STATE_EMPTY	code/game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_EMPTY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_EMPTY	code/game_renderer.h	/^  GFX_TEXTURE_PAYLOAD_STATE_EMPTY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_EMPTY	game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_EMPTY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_LOADING	code/game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_LOADING,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_LOADING	code/game_renderer.h	/^  GFX_TEXTURE_PAYLOAD_STATE_LOADING,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_LOADING	game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_LOADING,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_READY	code/game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_READY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_READY	code/game_renderer.h	/^  GFX_TEXTURE_PAYLOAD_STATE_READY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
GFX_TEXTURE_PAYLOAD_STATE_READY	game_gfx.h	/^  GFX_TEXTURE_PAYLOAD_STATE_READY,$/;"	e	language:C++	enum:Gfx_Texture_Payload_State
Gfx_Texture_Queue	code/game_gfx.h	/^struct Gfx_Texture_Queue {$/;"	s	language:C++
Gfx_Texture_Queue	code/game_renderer.h	/^struct Gfx_Texture_Queue {$/;"	s	language:C++
Gfx_Texture_Queue	game_gfx.h	/^struct Gfx_Texture_Queue {$/;"	s	language:C++
GLAD_FREE	test.c	/^    #define GLAD_FREE /;"	d	language:C	file:
GLAD_GL_IMPLEMENTATION	test.c	/^    #define GLAD_GL_IMPLEMENTATION$/;"	d	language:C	file:
GLAD_MALLOC	test.c	/^    #define GLAD_MALLOC /;"	d	language:C	file:
glAttachShader	code/game_gfx_opengl.h	/^  OGL_glAttachShader* glAttachShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glAttachShader *
glAttachShader	code/game_renderer_opengl.h	/^  GL_glAttachShader* glAttachShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glAttachShader *
glAttachShader	game_gfx_opengl.h	/^  OGL_glAttachShader* glAttachShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glAttachShader *
glBindTexture	code/game_gfx_opengl.h	/^  OGL_glBindTexture* glBindTexture ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindTexture *
glBindTexture	code/game_renderer_opengl.h	/^  GL_glBindTexture* glBindTexture ;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glBindTexture *
glBindTexture	game_gfx_opengl.h	/^  OGL_glBindTexture* glBindTexture ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindTexture *
glBindVertexArray	code/game_gfx_opengl.h	/^  OGL_glBindVertexArray* glBindVertexArray;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindVertexArray *
glBindVertexArray	code/game_renderer_opengl.h	/^  GL_glBindVertexArray* glBindVertexArray;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glBindVertexArray *
glBindVertexArray	game_gfx_opengl.h	/^  OGL_glBindVertexArray* glBindVertexArray;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBindVertexArray *
glBindVertexArray	test.c	/^static PFNGLBINDVERTEXARRAYOESPROC glBindVertexArray = NULL;$/;"	v	language:C	typeref:typename:PFNGLBINDVERTEXARRAYOESPROC	file:
GLbitfield	code/game_gfx_opengl.h	/^typedef U32  GLbitfield;$/;"	t	language:C++	typeref:typename:U32
GLbitfield	code/game_renderer_opengl.h	/^typedef U32  GLbitfield;$/;"	t	language:C++	typeref:typename:U32
GLbitfield	game_gfx_opengl.h	/^typedef U32  GLbitfield;$/;"	t	language:C++	typeref:typename:U32
glBlendDestFactorAlpha	test.c	/^        int glBlendDestFactorAlpha;         \/\/ Blending destination alpha factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendDestFactorRGB	test.c	/^        int glBlendDestFactorRGB;           \/\/ Blending destination RGB factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendDstFactor	test.c	/^        int glBlendDstFactor;               \/\/ Blending destination factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendEquation	test.c	/^        int glBlendEquation;                \/\/ Blending equation$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendEquationAlpha	test.c	/^        int glBlendEquationAlpha;           \/\/ Blending equation for alpha$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendEquationRGB	test.c	/^        int glBlendEquationRGB;             \/\/ Blending equation for RGB$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendFunc	code/game_gfx_opengl.h	/^  OGL_glBlendFunc* glBlendFunc;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFunc *
glBlendFunc	code/game_renderer_opengl.h	/^  GL_glBlendFunc* glBlendFunc;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glBlendFunc *
glBlendFunc	game_gfx_opengl.h	/^  OGL_glBlendFunc* glBlendFunc;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFunc *
glBlendFuncSeparate	code/game_gfx_opengl.h	/^  OGL_glBlendFuncSeparate* glBlendFuncSeparate;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFuncSeparate *
glBlendFuncSeparate	code/game_renderer_opengl.h	/^  GL_glBlendFuncSeparate* glBlendFuncSeparate;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glBlendFuncSeparate *
glBlendFuncSeparate	game_gfx_opengl.h	/^  OGL_glBlendFuncSeparate* glBlendFuncSeparate;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glBlendFuncSeparate *
glBlendSrcFactor	test.c	/^        int glBlendSrcFactor;               \/\/ Blending source factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendSrcFactorAlpha	test.c	/^        int glBlendSrcFactorAlpha;          \/\/ Blending source alpha factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
glBlendSrcFactorRGB	test.c	/^        int glBlendSrcFactorRGB;            \/\/ Blending source RGB factor$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
GLboolean	code/game_gfx_opengl.h	/^typedef B8   GLboolean;$/;"	t	language:C++	typeref:typename:B8
GLboolean	code/game_renderer_opengl.h	/^typedef B8   GLboolean;$/;"	t	language:C++	typeref:typename:B8
GLboolean	game_gfx_opengl.h	/^typedef B8   GLboolean;$/;"	t	language:C++	typeref:typename:B8
GLchar	code/game_gfx_opengl.h	/^typedef C8   GLchar;$/;"	t	language:C++	typeref:typename:C8
GLchar	code/game_renderer_opengl.h	/^typedef C8   GLchar;$/;"	t	language:C++	typeref:typename:C8
GLchar	game_gfx_opengl.h	/^typedef C8   GLchar;$/;"	t	language:C++	typeref:typename:C8
GLclampf	code/game_gfx_opengl.h	/^typedef F32  GLclampf;$/;"	t	language:C++	typeref:typename:F32
GLclampf	code/game_renderer_opengl.h	/^typedef F32  GLclampf;$/;"	t	language:C++	typeref:typename:F32
GLclampf	game_gfx_opengl.h	/^typedef F32  GLclampf;$/;"	t	language:C++	typeref:typename:F32
glClear	code/game_gfx_opengl.h	/^  OGL_glClear* glClear;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClear *
glClear	code/game_renderer_opengl.h	/^  GL_glClear* glClear;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glClear *
glClear	game_gfx_opengl.h	/^  OGL_glClear* glClear;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClear *
glClearColor	code/game_gfx_opengl.h	/^  OGL_glClearColor* glClearColor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClearColor *
glClearColor	code/game_renderer_opengl.h	/^  GL_glClearColor* glClearColor;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glClearColor *
glClearColor	game_gfx_opengl.h	/^  OGL_glClearColor* glClearColor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glClearColor *
glClearDepth	test.c	/^    #define glClearDepth /;"	d	language:C	file:
glCompileShader	code/game_gfx_opengl.h	/^  OGL_glCompileShader* glCompileShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCompileShader *
glCompileShader	code/game_renderer_opengl.h	/^  GL_glCompileShader* glCompileShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCompileShader *
glCompileShader	game_gfx_opengl.h	/^  OGL_glCompileShader* glCompileShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCompileShader *
glCreateBuffers	code/game_gfx_opengl.h	/^  OGL_glCreateBuffers* glCreateBuffers;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateBuffers *
glCreateBuffers	code/game_renderer_opengl.h	/^  GL_glCreateBuffers* glCreateBuffers;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCreateBuffers *
glCreateBuffers	game_gfx_opengl.h	/^  OGL_glCreateBuffers* glCreateBuffers;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateBuffers *
glCreateProgram	code/game_gfx_opengl.h	/^  OGL_glCreateProgram* glCreateProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateProgram *
glCreateProgram	code/game_renderer_opengl.h	/^  GL_glCreateProgram* glCreateProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCreateProgram *
glCreateProgram	game_gfx_opengl.h	/^  OGL_glCreateProgram* glCreateProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateProgram *
glCreateShader	code/game_gfx_opengl.h	/^  OGL_glCreateShader* glCreateShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateShader *
glCreateShader	code/game_renderer_opengl.h	/^  GL_glCreateShader* glCreateShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCreateShader *
glCreateShader	game_gfx_opengl.h	/^  OGL_glCreateShader* glCreateShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateShader *
glCreateTextures	code/game_gfx_opengl.h	/^  OGL_glCreateTextures* glCreateTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateTextures *
glCreateTextures	code/game_renderer_opengl.h	/^  GL_glCreateTextures* glCreateTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCreateTextures *
glCreateTextures	game_gfx_opengl.h	/^  OGL_glCreateTextures* glCreateTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateTextures *
glCreateVertexArrays	code/game_gfx_opengl.h	/^  OGL_glCreateVertexArrays* glCreateVertexArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateVertexArrays *
glCreateVertexArrays	code/game_renderer_opengl.h	/^  GL_glCreateVertexArrays* glCreateVertexArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glCreateVertexArrays *
glCreateVertexArrays	game_gfx_opengl.h	/^  OGL_glCreateVertexArrays* glCreateVertexArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glCreateVertexArrays *
glCustomBlendModeModified	test.c	/^        bool glCustomBlendModeModified;     \/\/ Custom blending factor and equation modificatio/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:bool	file:
glDebugMessageCallbackARB	code/game_gfx_opengl.h	/^  OGL_glDebugMessageCallbackARB* glDebugMessageCallbackARB;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDebugMessageCallbackARB *
glDebugMessageCallbackARB	code/game_renderer_opengl.h	/^  GL_glDebugMessageCallbackARB* glDebugMessageCallbackARB;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDebugMessageCallbackARB *
glDebugMessageCallbackARB	game_gfx_opengl.h	/^  OGL_glDebugMessageCallbackARB* glDebugMessageCallbackARB;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDebugMessageCallbackARB *
GLDEBUGPROC	code/game_gfx_opengl.h	/^typedef void (GLDEBUGPROC)(GLenum source,$/;"	t	language:C++	typeref:typename:void ()(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,GLchar * msg,const void * userParam)
GLDEBUGPROC	code/game_renderer_opengl.h	/^typedef void (GLDEBUGPROC)(GLenum source,$/;"	t	language:C++	typeref:typename:void ()(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,GLchar * msg,const void * userParam)
GLDEBUGPROC	game_gfx_opengl.h	/^typedef void (GLDEBUGPROC)(GLenum source,$/;"	t	language:C++	typeref:typename:void ()(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,GLchar * msg,const void * userParam)
glDeleteShader	code/game_gfx_opengl.h	/^  OGL_glDeleteShader* glDeleteShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteShader *
glDeleteShader	code/game_renderer_opengl.h	/^  GL_glDeleteShader* glDeleteShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDeleteShader *
glDeleteShader	game_gfx_opengl.h	/^  OGL_glDeleteShader* glDeleteShader;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteShader *
glDeleteTextures	code/game_gfx_opengl.h	/^  OGL_glDeleteTextures* glDeleteTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteTextures *
glDeleteTextures	code/game_renderer_opengl.h	/^  GL_glDeleteTextures* glDeleteTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDeleteTextures *
glDeleteTextures	game_gfx_opengl.h	/^  OGL_glDeleteTextures* glDeleteTextures;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDeleteTextures *
glDeleteVertexArrays	test.c	/^static PFNGLDELETEVERTEXARRAYSOESPROC glDeleteVertexArrays = NULL;$/;"	v	language:C	typeref:typename:PFNGLDELETEVERTEXARRAYSOESPROC	file:
glDisable	code/game_gfx_opengl.h	/^  OGL_glDisable* glDisable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDisable *
glDisable	code/game_renderer_opengl.h	/^  GL_glDisable* glDisable;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDisable *
glDisable	game_gfx_opengl.h	/^  OGL_glDisable* glDisable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDisable *
glDrawArrays	code/game_gfx_opengl.h	/^  OGL_glDrawArrays* glDrawArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawArrays *
glDrawArrays	code/game_renderer_opengl.h	/^  GL_glDrawArrays* glDrawArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDrawArrays *
glDrawArrays	game_gfx_opengl.h	/^  OGL_glDrawArrays* glDrawArrays;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawArrays *
glDrawArraysInstanced	test.c	/^static PFNGLDRAWARRAYSINSTANCEDEXTPROC glDrawArraysInstanced = NULL;$/;"	v	language:C	typeref:typename:PFNGLDRAWARRAYSINSTANCEDEXTPROC	file:
glDrawElementsInstanced	test.c	/^static PFNGLDRAWELEMENTSINSTANCEDEXTPROC glDrawElementsInstanced = NULL;$/;"	v	language:C	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDEXTPROC	file:
glDrawElementsInstancedBaseInstance	code/game_gfx_opengl.h	/^  OGL_glDrawElementsInstancedBaseInstance* glDrawElementsInstancedBaseInstance;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawElementsInstancedBaseInstance *
glDrawElementsInstancedBaseInstance	code/game_renderer_opengl.h	/^  GL_glDrawElementsInstancedBaseInstance* glDrawElementsInstancedBaseInstance;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glDrawElementsInstancedBaseInstance *
glDrawElementsInstancedBaseInstance	game_gfx_opengl.h	/^  OGL_glDrawElementsInstancedBaseInstance* glDrawElementsInstancedBaseInstance;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glDrawElementsInstancedBaseInstance *
glEnable	code/game_gfx_opengl.h	/^  OGL_glEnable* glEnable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnable *
glEnable	code/game_renderer_opengl.h	/^  GL_glEnable* glEnable;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glEnable *
glEnable	game_gfx_opengl.h	/^  OGL_glEnable* glEnable;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnable *
glEnableVertexArrayAttrib	code/game_gfx_opengl.h	/^  OGL_glEnableVertexArrayAttrib* glEnableVertexArrayAttrib;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnableVertexArrayAttrib *
glEnableVertexArrayAttrib	code/game_renderer_opengl.h	/^  GL_glEnableVertexArrayAttrib* glEnableVertexArrayAttrib;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glEnableVertexArrayAttrib *
glEnableVertexArrayAttrib	game_gfx_opengl.h	/^  OGL_glEnableVertexArrayAttrib* glEnableVertexArrayAttrib;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glEnableVertexArrayAttrib *
GLenum	code/game_gfx_opengl.h	/^typedef S32  GLenum;$/;"	t	language:C++	typeref:typename:S32
GLenum	code/game_renderer_opengl.h	/^typedef S32  GLenum;$/;"	t	language:C++	typeref:typename:S32
GLenum	game_gfx_opengl.h	/^typedef S32  GLenum;$/;"	t	language:C++	typeref:typename:S32
GLfloat	code/game_gfx_opengl.h	/^typedef F32  GLfloat;$/;"	t	language:C++	typeref:typename:F32
GLfloat	code/game_renderer_opengl.h	/^typedef F32  GLfloat;$/;"	t	language:C++	typeref:typename:F32
GLfloat	game_gfx_opengl.h	/^typedef F32  GLfloat;$/;"	t	language:C++	typeref:typename:F32
glGenVertexArrays	test.c	/^static PFNGLGENVERTEXARRAYSOESPROC glGenVertexArrays = NULL;$/;"	v	language:C	typeref:typename:PFNGLGENVERTEXARRAYSOESPROC	file:
glGetProgramInfoLog	code/game_gfx_opengl.h	/^  OGL_glGetProgramInfoLog* glGetProgramInfoLog;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramInfoLog *
glGetProgramInfoLog	code/game_renderer_opengl.h	/^  GL_glGetProgramInfoLog* glGetProgramInfoLog;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glGetProgramInfoLog *
glGetProgramInfoLog	game_gfx_opengl.h	/^  OGL_glGetProgramInfoLog* glGetProgramInfoLog;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramInfoLog *
glGetProgramiv	code/game_gfx_opengl.h	/^  OGL_glGetProgramiv* glGetProgramiv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramiv *
glGetProgramiv	code/game_renderer_opengl.h	/^  GL_glGetProgramiv* glGetProgramiv;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glGetProgramiv *
glGetProgramiv	game_gfx_opengl.h	/^  OGL_glGetProgramiv* glGetProgramiv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetProgramiv *
glGetUniformLocation	code/game_gfx_opengl.h	/^  OGL_glGetUniformLocation* glGetUniformLocation;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetUniformLocation *
glGetUniformLocation	code/game_renderer_opengl.h	/^  GL_glGetUniformLocation* glGetUniformLocation;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glGetUniformLocation *
glGetUniformLocation	game_gfx_opengl.h	/^  OGL_glGetUniformLocation* glGetUniformLocation;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glGetUniformLocation *
GLint	code/game_gfx_opengl.h	/^typedef S32  GLint; $/;"	t	language:C++	typeref:typename:S32
GLint	code/game_renderer_opengl.h	/^typedef S32  GLint; $/;"	t	language:C++	typeref:typename:S32
GLint	game_gfx_opengl.h	/^typedef S32  GLint; $/;"	t	language:C++	typeref:typename:S32
GLintptr	code/game_gfx_opengl.h	/^typedef SMI  GLintptr;$/;"	t	language:C++	typeref:typename:SMI
GLintptr	code/game_renderer_opengl.h	/^typedef SMI  GLintptr;$/;"	t	language:C++	typeref:typename:SMI
GLintptr	game_gfx_opengl.h	/^typedef SMI  GLintptr;$/;"	t	language:C++	typeref:typename:SMI
glLinkProgram	code/game_gfx_opengl.h	/^  OGL_glLinkProgram* glLinkProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glLinkProgram *
glLinkProgram	code/game_renderer_opengl.h	/^  GL_glLinkProgram* glLinkProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glLinkProgram *
glLinkProgram	game_gfx_opengl.h	/^  OGL_glLinkProgram* glLinkProgram;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glLinkProgram *
glNamedBufferStorage	code/game_gfx_opengl.h	/^  OGL_glNamedBufferStorage* glNamedBufferStorage;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferStorage *
glNamedBufferStorage	code/game_renderer_opengl.h	/^  GL_glNamedBufferStorage* glNamedBufferStorage;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glNamedBufferStorage *
glNamedBufferStorage	game_gfx_opengl.h	/^  OGL_glNamedBufferStorage* glNamedBufferStorage;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferStorage *
glNamedBufferSubData	code/game_gfx_opengl.h	/^  OGL_glNamedBufferSubData* glNamedBufferSubData;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferSubData *
glNamedBufferSubData	code/game_renderer_opengl.h	/^  GL_glNamedBufferSubData* glNamedBufferSubData;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glNamedBufferSubData *
glNamedBufferSubData	game_gfx_opengl.h	/^  OGL_glNamedBufferSubData* glNamedBufferSubData;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glNamedBufferSubData *
glProgramUniform4fv	code/game_gfx_opengl.h	/^  OGL_glProgramUniform4fv* glProgramUniform4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniform4fv *
glProgramUniform4fv	code/game_renderer_opengl.h	/^  GL_glProgramUniform4fv* glProgramUniform4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glProgramUniform4fv *
glProgramUniform4fv	game_gfx_opengl.h	/^  OGL_glProgramUniform4fv* glProgramUniform4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniform4fv *
glProgramUniformMatrix4fv	code/game_gfx_opengl.h	/^  OGL_glProgramUniformMatrix4fv* glProgramUniformMatrix4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniformMatrix4fv *
glProgramUniformMatrix4fv	code/game_renderer_opengl.h	/^  GL_glProgramUniformMatrix4fv* glProgramUniformMatrix4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glProgramUniformMatrix4fv *
glProgramUniformMatrix4fv	game_gfx_opengl.h	/^  OGL_glProgramUniformMatrix4fv* glProgramUniformMatrix4fv;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glProgramUniformMatrix4fv *
glScissor	code/game_gfx_opengl.h	/^  OGL_glScissor* glScissor ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glScissor *
glScissor	code/game_renderer_opengl.h	/^  GL_glScissor* glScissor ;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glScissor *
glScissor	game_gfx_opengl.h	/^  OGL_glScissor* glScissor ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glScissor *
glShaderSource	code/game_gfx_opengl.h	/^  OGL_glShaderSource* glShaderSource;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glShaderSource *
glShaderSource	code/game_renderer_opengl.h	/^  GL_glShaderSource* glShaderSource;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glShaderSource *
glShaderSource	game_gfx_opengl.h	/^  OGL_glShaderSource* glShaderSource;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glShaderSource *
GLsizei	code/game_gfx_opengl.h	/^typedef S32  GLsizei;$/;"	t	language:C++	typeref:typename:S32
GLsizei	code/game_renderer_opengl.h	/^typedef S32  GLsizei;$/;"	t	language:C++	typeref:typename:S32
GLsizei	game_gfx_opengl.h	/^typedef S32  GLsizei;$/;"	t	language:C++	typeref:typename:S32
GLsizeiptr	code/game_gfx_opengl.h	/^typedef SMI  GLsizeiptr; $/;"	t	language:C++	typeref:typename:SMI
GLsizeiptr	code/game_renderer_opengl.h	/^typedef SMI  GLsizeiptr; $/;"	t	language:C++	typeref:typename:SMI
GLsizeiptr	game_gfx_opengl.h	/^typedef SMI  GLsizeiptr; $/;"	t	language:C++	typeref:typename:SMI
glTexParameteri	code/game_gfx_opengl.h	/^  OGL_glTexParameteri*  glTexParameteri ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTexParameteri *
glTexParameteri	code/game_renderer_opengl.h	/^  GL_glTexParameteri*  glTexParameteri ;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glTexParameteri *
glTexParameteri	game_gfx_opengl.h	/^  OGL_glTexParameteri*  glTexParameteri ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTexParameteri *
glTextureStorage2D	code/game_gfx_opengl.h	/^  OGL_glTextureStorage2D* glTextureStorage2D ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureStorage2D *
glTextureStorage2D	code/game_renderer_opengl.h	/^  GL_glTextureStorage2D* glTextureStorage2D ;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glTextureStorage2D *
glTextureStorage2D	game_gfx_opengl.h	/^  OGL_glTextureStorage2D* glTextureStorage2D ;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureStorage2D *
glTextureSubImage2D	code/game_gfx_opengl.h	/^  OGL_glTextureSubImage2D*  glTextureSubImage2D;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureSubImage2D *
glTextureSubImage2D	code/game_renderer_opengl.h	/^  GL_glTextureSubImage2D*  glTextureSubImage2D;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glTextureSubImage2D *
glTextureSubImage2D	game_gfx_opengl.h	/^  OGL_glTextureSubImage2D*  glTextureSubImage2D;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glTextureSubImage2D *
glue	code/momo_common.h	/^#define glue(/;"	d	language:C++
glue	momo_common.h	/^#define glue(/;"	d	language:C++
glue_	code/momo_common.h	/^#define glue_(/;"	d	language:C++
glue_	momo_common.h	/^#define glue_(/;"	d	language:C++
GLuint	code/game_gfx_opengl.h	/^typedef U32  GLuint;$/;"	t	language:C++	typeref:typename:U32
GLuint	code/game_renderer_opengl.h	/^typedef U32  GLuint;$/;"	t	language:C++	typeref:typename:U32
GLuint	game_gfx_opengl.h	/^typedef U32  GLuint;$/;"	t	language:C++	typeref:typename:U32
glUseProgram	code/game_gfx_opengl.h	/^  OGL_glUseProgram* glUseProgram;  $/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glUseProgram *
glUseProgram	code/game_renderer_opengl.h	/^  GL_glUseProgram* glUseProgram;  $/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glUseProgram *
glUseProgram	game_gfx_opengl.h	/^  OGL_glUseProgram* glUseProgram;  $/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glUseProgram *
glVertexArrayAttribBinding	code/game_gfx_opengl.h	/^  OGL_glVertexArrayAttribBinding* glVertexArrayAttribBinding;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribBinding *
glVertexArrayAttribBinding	code/game_renderer_opengl.h	/^  GL_glVertexArrayAttribBinding* glVertexArrayAttribBinding;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glVertexArrayAttribBinding *
glVertexArrayAttribBinding	game_gfx_opengl.h	/^  OGL_glVertexArrayAttribBinding* glVertexArrayAttribBinding;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribBinding *
glVertexArrayAttribFormat	code/game_gfx_opengl.h	/^  OGL_glVertexArrayAttribFormat* glVertexArrayAttribFormat;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribFormat *
glVertexArrayAttribFormat	code/game_renderer_opengl.h	/^  GL_glVertexArrayAttribFormat* glVertexArrayAttribFormat;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glVertexArrayAttribFormat *
glVertexArrayAttribFormat	game_gfx_opengl.h	/^  OGL_glVertexArrayAttribFormat* glVertexArrayAttribFormat;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayAttribFormat *
glVertexArrayBindingDivisor	code/game_gfx_opengl.h	/^  OGL_glVertexArrayBindingDivisor* glVertexArrayBindingDivisor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayBindingDivisor *
glVertexArrayBindingDivisor	code/game_renderer_opengl.h	/^  GL_glVertexArrayBindingDivisor* glVertexArrayBindingDivisor;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glVertexArrayBindingDivisor *
glVertexArrayBindingDivisor	game_gfx_opengl.h	/^  OGL_glVertexArrayBindingDivisor* glVertexArrayBindingDivisor;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayBindingDivisor *
glVertexArrayElementBuffer	code/game_gfx_opengl.h	/^  OGL_glVertexArrayElementBuffer* glVertexArrayElementBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayElementBuffer *
glVertexArrayElementBuffer	code/game_renderer_opengl.h	/^  GL_glVertexArrayElementBuffer* glVertexArrayElementBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glVertexArrayElementBuffer *
glVertexArrayElementBuffer	game_gfx_opengl.h	/^  OGL_glVertexArrayElementBuffer* glVertexArrayElementBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayElementBuffer *
glVertexArrayVertexBuffer	code/game_gfx_opengl.h	/^  OGL_glVertexArrayVertexBuffer* glVertexArrayVertexBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayVertexBuffer *
glVertexArrayVertexBuffer	code/game_renderer_opengl.h	/^  GL_glVertexArrayVertexBuffer* glVertexArrayVertexBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glVertexArrayVertexBuffer *
glVertexArrayVertexBuffer	game_gfx_opengl.h	/^  OGL_glVertexArrayVertexBuffer* glVertexArrayVertexBuffer;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glVertexArrayVertexBuffer *
glVertexAttribDivisor	test.c	/^static PFNGLVERTEXATTRIBDIVISOREXTPROC glVertexAttribDivisor = NULL;$/;"	v	language:C	typeref:typename:PFNGLVERTEXATTRIBDIVISOREXTPROC	file:
glViewport	code/game_gfx_opengl.h	/^  OGL_glViewport* glViewport;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glViewport *
glViewport	code/game_renderer_opengl.h	/^  GL_glViewport* glViewport;$/;"	m	language:C++	struct:Opengl	typeref:typename:GL_glViewport *
glViewport	game_gfx_opengl.h	/^  OGL_glViewport* glViewport;$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_glViewport *
glyf	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
glyf	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
glyphs	code/game_assets.h	/^  Font_Glyph_Asset* glyphs;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:Font_Glyph_Asset *
glyphs	game_assets.h	/^  Font_Glyph_Asset* glyphs;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:Font_Glyph_Asset *
glyph_count	code/game_assets.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32
glyph_count	code/karu.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
glyph_count	code/momo_ttf.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
glyph_count	game_assets.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32
glyph_count	karu.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
glyph_count	momo_ttf.h	/^  U32 glyph_count;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
glyph_height	code/sui_pack.h	/^  F32 glyph_height;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:F32
glyph_height	sui_pack.h	/^  F32 glyph_height;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:F32
glyph_rects	code/sui_atlas.h	/^  RP_Rect* glyph_rects;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:RP_Rect *
glyph_rects	sui_atlas.h	/^  RP_Rect* glyph_rects;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:RP_Rect *
glyph_rect_contexts	code/sui_atlas.h	/^  Sui_Atlas_Context* glyph_rect_contexts;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:Sui_Atlas_Context *
glyph_rect_contexts	sui_atlas.h	/^  Sui_Atlas_Context* glyph_rect_contexts;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:Sui_Atlas_Context *
GL_BLEND	code/game_gfx_opengl.h	/^#define GL_BLEND /;"	d	language:C++
GL_BLEND	code/game_renderer_opengl.h	/^#define GL_BLEND /;"	d	language:C++
GL_BLEND	game_gfx_opengl.h	/^#define GL_BLEND /;"	d	language:C++
GL_COLOR_BUFFER_BIT	code/game_gfx_opengl.h	/^#define GL_COLOR_BUFFER_BIT /;"	d	language:C++
GL_COLOR_BUFFER_BIT	code/game_renderer_opengl.h	/^#define GL_COLOR_BUFFER_BIT /;"	d	language:C++
GL_COLOR_BUFFER_BIT	game_gfx_opengl.h	/^#define GL_COLOR_BUFFER_BIT /;"	d	language:C++
GL_COMPRESSED_RGB8_ETC2	test.c	/^    #define GL_COMPRESSED_RGB8_ETC2 /;"	d	language:C	file:
GL_COMPRESSED_RGBA8_ETC2_EAC	test.c	/^    #define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d	language:C	file:
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	test.c	/^    #define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d	language:C	file:
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	test.c	/^    #define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d	language:C	file:
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	test.c	/^    #define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG /;"	d	language:C	file:
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	test.c	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d	language:C	file:
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	test.c	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d	language:C	file:
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	test.c	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d	language:C	file:
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	test.c	/^    #define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG /;"	d	language:C	file:
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	test.c	/^    #define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d	language:C	file:
GL_DEBUG_OUTPUT	code/game_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT /;"	d	language:C++
GL_DEBUG_OUTPUT	code/game_renderer_opengl.h	/^#define GL_DEBUG_OUTPUT /;"	d	language:C++
GL_DEBUG_OUTPUT	game_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT /;"	d	language:C++
GL_DEBUG_OUTPUT_SYNCHRONOUS	code/game_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d	language:C++
GL_DEBUG_OUTPUT_SYNCHRONOUS	code/game_renderer_opengl.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d	language:C++
GL_DEBUG_OUTPUT_SYNCHRONOUS	game_gfx_opengl.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d	language:C++
GL_DEBUG_SEVERITY_HIGH	code/game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d	language:C++
GL_DEBUG_SEVERITY_HIGH	code/game_renderer_opengl.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d	language:C++
GL_DEBUG_SEVERITY_HIGH	game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d	language:C++
GL_DEBUG_SEVERITY_LOW	code/game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d	language:C++
GL_DEBUG_SEVERITY_LOW	code/game_renderer_opengl.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d	language:C++
GL_DEBUG_SEVERITY_LOW	game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d	language:C++
GL_DEBUG_SEVERITY_MEDIUM	code/game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d	language:C++
GL_DEBUG_SEVERITY_MEDIUM	code/game_renderer_opengl.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d	language:C++
GL_DEBUG_SEVERITY_MEDIUM	game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d	language:C++
GL_DEBUG_SEVERITY_NOTIFICATION	code/game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d	language:C++
GL_DEBUG_SEVERITY_NOTIFICATION	code/game_renderer_opengl.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d	language:C++
GL_DEBUG_SEVERITY_NOTIFICATION	game_gfx_opengl.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d	language:C++
GL_DEBUG_SOURCE_API	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_API /;"	d	language:C++
GL_DEBUG_SOURCE_API	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_API /;"	d	language:C++
GL_DEBUG_SOURCE_API	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_API /;"	d	language:C++
GL_DEBUG_SOURCE_APPLICATION	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d	language:C++
GL_DEBUG_SOURCE_APPLICATION	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d	language:C++
GL_DEBUG_SOURCE_APPLICATION	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d	language:C++
GL_DEBUG_SOURCE_OTHER	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d	language:C++
GL_DEBUG_SOURCE_OTHER	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d	language:C++
GL_DEBUG_SOURCE_OTHER	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d	language:C++
GL_DEBUG_SOURCE_SHADER_COMPILER	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d	language:C++
GL_DEBUG_SOURCE_SHADER_COMPILER	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d	language:C++
GL_DEBUG_SOURCE_SHADER_COMPILER	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d	language:C++
GL_DEBUG_SOURCE_THIRD_PARTY	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d	language:C++
GL_DEBUG_SOURCE_THIRD_PARTY	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d	language:C++
GL_DEBUG_SOURCE_THIRD_PARTY	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d	language:C++
GL_DEBUG_SOURCE_WINDOW_SYSTEM	code/game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d	language:C++
GL_DEBUG_SOURCE_WINDOW_SYSTEM	code/game_renderer_opengl.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d	language:C++
GL_DEBUG_SOURCE_WINDOW_SYSTEM	game_gfx_opengl.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d	language:C++
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_ERROR	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d	language:C++
GL_DEBUG_TYPE_ERROR	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d	language:C++
GL_DEBUG_TYPE_ERROR	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d	language:C++
GL_DEBUG_TYPE_MARKER	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d	language:C++
GL_DEBUG_TYPE_MARKER	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d	language:C++
GL_DEBUG_TYPE_MARKER	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d	language:C++
GL_DEBUG_TYPE_OTHER	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d	language:C++
GL_DEBUG_TYPE_OTHER	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d	language:C++
GL_DEBUG_TYPE_OTHER	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d	language:C++
GL_DEBUG_TYPE_PERFORMANCE	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d	language:C++
GL_DEBUG_TYPE_PERFORMANCE	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d	language:C++
GL_DEBUG_TYPE_PERFORMANCE	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d	language:C++
GL_DEBUG_TYPE_PORTABILITY	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d	language:C++
GL_DEBUG_TYPE_PORTABILITY	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d	language:C++
GL_DEBUG_TYPE_PORTABILITY	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d	language:C++
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	code/game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	code/game_renderer_opengl.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d	language:C++
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	game_gfx_opengl.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d	language:C++
GL_DEPTH_BUFFER_BIT	code/game_gfx_opengl.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d	language:C++
GL_DEPTH_BUFFER_BIT	code/game_renderer_opengl.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d	language:C++
GL_DEPTH_BUFFER_BIT	game_gfx_opengl.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d	language:C++
GL_DEPTH_TEST	code/game_gfx_opengl.h	/^#define GL_DEPTH_TEST /;"	d	language:C++
GL_DEPTH_TEST	code/game_renderer_opengl.h	/^#define GL_DEPTH_TEST /;"	d	language:C++
GL_DEPTH_TEST	game_gfx_opengl.h	/^#define GL_DEPTH_TEST /;"	d	language:C++
GL_DRAW_FRAMEBUFFER	test.c	/^    #define GL_DRAW_FRAMEBUFFER /;"	d	language:C	file:
GL_DST_ALPHA	code/game_gfx_opengl.h	/^#define GL_DST_ALPHA /;"	d	language:C++
GL_DST_ALPHA	code/game_renderer_opengl.h	/^#define GL_DST_ALPHA /;"	d	language:C++
GL_DST_ALPHA	game_gfx_opengl.h	/^#define GL_DST_ALPHA /;"	d	language:C++
GL_DST_COLOR	code/game_gfx_opengl.h	/^#define GL_DST_COLOR /;"	d	language:C++
GL_DST_COLOR	code/game_renderer_opengl.h	/^#define GL_DST_COLOR /;"	d	language:C++
GL_DST_COLOR	game_gfx_opengl.h	/^#define GL_DST_COLOR /;"	d	language:C++
GL_DYNAMIC_STORAGE_BIT	code/game_gfx_opengl.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d	language:C++
GL_DYNAMIC_STORAGE_BIT	code/game_renderer_opengl.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d	language:C++
GL_DYNAMIC_STORAGE_BIT	game_gfx_opengl.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d	language:C++
GL_ETC1_RGB8_OES	test.c	/^    #define GL_ETC1_RGB8_OES /;"	d	language:C	file:
GL_FALSE	code/game_gfx_opengl.h	/^#define GL_FALSE /;"	d	language:C++
GL_FALSE	code/game_renderer_opengl.h	/^#define GL_FALSE /;"	d	language:C++
GL_FALSE	game_gfx_opengl.h	/^#define GL_FALSE /;"	d	language:C++
GL_FLOAT	code/game_gfx_opengl.h	/^#define GL_FLOAT /;"	d	language:C++
GL_FLOAT	code/game_renderer_opengl.h	/^#define GL_FLOAT /;"	d	language:C++
GL_FLOAT	game_gfx_opengl.h	/^#define GL_FLOAT /;"	d	language:C++
GL_FRAGMENT_SHADER	code/game_gfx_opengl.h	/^#define GL_FRAGMENT_SHADER /;"	d	language:C++
GL_FRAGMENT_SHADER	code/game_renderer_opengl.h	/^#define GL_FRAGMENT_SHADER /;"	d	language:C++
GL_FRAGMENT_SHADER	game_gfx_opengl.h	/^#define GL_FRAGMENT_SHADER /;"	d	language:C++
GL_glAttachShader	code/game_renderer_opengl.h	/^typedef void    GL_glAttachShader(GLuint program, GLuint shader);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLuint shader)
GL_glBindTexture	code/game_renderer_opengl.h	/^typedef void    GL_glBindTexture(GLenum target, GLuint texture);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLuint texture)
GL_glBindVertexArray	code/game_renderer_opengl.h	/^typedef void    GL_glBindVertexArray(GLuint array);$/;"	t	language:C++	typeref:typename:void ()(GLuint array)
GL_glBlendFunc	code/game_renderer_opengl.h	/^typedef void    GL_glBlendFunc(GLenum sfactor, GLenum dfactor);$/;"	t	language:C++	typeref:typename:void ()(GLenum sfactor,GLenum dfactor)
GL_glBlendFuncSeparate	code/game_renderer_opengl.h	/^typedef void    GL_glBlendFuncSeparate(GLenum srcRGB, $/;"	t	language:C++	typeref:typename:void ()(GLenum srcRGB,GLenum destRGB,GLenum srcAlpha,GLenum destAlpha)
GL_glClear	code/game_renderer_opengl.h	/^typedef void    GL_glClear(GLbitfield mask);$/;"	t	language:C++	typeref:typename:void ()(GLbitfield mask)
GL_glClearColor	code/game_renderer_opengl.h	/^typedef void    GL_glClearColor(GLclampf r, $/;"	t	language:C++	typeref:typename:void ()(GLclampf r,GLclampf g,GLclampf b,GLclampf a)
GL_glCompileShader	code/game_renderer_opengl.h	/^typedef void    GL_glCompileShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
GL_glCreateBuffers	code/game_renderer_opengl.h	/^typedef void    GL_glCreateBuffers(GLsizei n, GLuint* buffers);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * buffers)
GL_glCreateProgram	code/game_renderer_opengl.h	/^typedef GLuint  GL_glCreateProgram();$/;"	t	language:C++	typeref:typename:GLuint ()()
GL_glCreateShader	code/game_renderer_opengl.h	/^typedef GLuint  GL_glCreateShader(GLenum type);$/;"	t	language:C++	typeref:typename:GLuint ()(GLenum type)
GL_glCreateTextures	code/game_renderer_opengl.h	/^typedef void    GL_glCreateTextures(GLenum target, $/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLsizei n,GLuint * textures)
GL_glCreateVertexArrays	code/game_renderer_opengl.h	/^typedef void    GL_glCreateVertexArrays(GLsizei n, GLuint* arrays);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * arrays)
GL_glDebugMessageCallbackARB	code/game_renderer_opengl.h	/^typedef void    GL_glDebugMessageCallbackARB(GLDEBUGPROC *callback, $/;"	t	language:C++	typeref:typename:void ()(GLDEBUGPROC * callback,const void * userParams)
GL_glDeleteShader	code/game_renderer_opengl.h	/^typedef void    GL_glDeleteShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
GL_glDeleteTextures	code/game_renderer_opengl.h	/^typedef void    GL_glDeleteTextures(GLsizei n, $/;"	t	language:C++	typeref:typename:void ()(GLsizei n,const GLuint * textures)
GL_glDisable	code/game_renderer_opengl.h	/^typedef void    GL_glDisable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
GL_glDrawArrays	code/game_renderer_opengl.h	/^typedef void    GL_glDrawArrays(GLenum mode,$/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLint first,GLsizei count)
GL_glDrawElementsInstancedBaseInstance	code/game_renderer_opengl.h	/^typedef void    GL_glDrawElementsInstancedBaseInstance(GLenum mode,$/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
GL_glEnable	code/game_renderer_opengl.h	/^typedef void    GL_glEnable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
GL_glEnableVertexArrayAttrib	code/game_renderer_opengl.h	/^typedef void    GL_glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint index)
GL_GLEXT_PROTOTYPES	test.c	/^    #define GL_GLEXT_PROTOTYPES$/;"	d	language:C	file:
GL_glGetProgramInfoLog	code/game_renderer_opengl.h	/^typedef void    GL_glGetProgramInfoLog(GLuint program, $/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLsizei maxLength,GLsizei * length,GLchar * infoLog)
GL_glGetProgramiv	code/game_renderer_opengl.h	/^typedef void    GL_glGetProgramiv(GLuint program, GLenum pname, GLint* params);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLenum pname,GLint * params)
GL_glGetUniformLocation	code/game_renderer_opengl.h	/^typedef GLint   GL_glGetUniformLocation(GLuint program,$/;"	t	language:C++	typeref:typename:GLint ()(GLuint program,const GLchar * name)
GL_glLinkProgram	code/game_renderer_opengl.h	/^typedef void    GL_glLinkProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
GL_glNamedBufferStorage	code/game_renderer_opengl.h	/^typedef void    GL_glNamedBufferStorage(GLuint buffer, $/;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
GL_glNamedBufferSubData	code/game_renderer_opengl.h	/^typedef void    GL_glNamedBufferSubData(GLuint buffer,$/;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
GL_glProgramUniform4fv	code/game_renderer_opengl.h	/^typedef void    GL_glProgramUniform4fv(GLuint program,$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,const GLfloat * value)
GL_glProgramUniformMatrix4fv	code/game_renderer_opengl.h	/^typedef void    GL_glProgramUniformMatrix4fv(GLuint program,$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,GLboolean m44_transpose,const GLfloat * value)
GL_glScissor	code/game_renderer_opengl.h	/^typedef void    GL_glScissor(GLint x, $/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
GL_glShaderSource	code/game_renderer_opengl.h	/^typedef void    GL_glShaderSource(GLuint shader, $/;"	t	language:C++	typeref:typename:void ()(GLuint shader,GLsizei count,GLchar ** string,GLint * length)
GL_glTexParameteri	code/game_renderer_opengl.h	/^typedef void    GL_glTexParameteri(GLenum target ,GLenum pname, GLint param);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLenum pname,GLint param)
GL_glTextureStorage2D	code/game_renderer_opengl.h	/^typedef void    GL_glTextureStorage2D(GLuint texture,$/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
GL_glTextureSubImage2D	code/game_renderer_opengl.h	/^typedef void    GL_glTextureSubImage2D(GLuint texture,$/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
GL_glUseProgram	code/game_renderer_opengl.h	/^typedef void    GL_glUseProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
GL_glVertexArrayAttribBinding	code/game_renderer_opengl.h	/^typedef void    GL_glVertexArrayAttribBinding(GLuint vaobj,$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
GL_glVertexArrayAttribFormat	code/game_renderer_opengl.h	/^typedef void    GL_glVertexArrayAttribFormat(GLuint vaobj,$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
GL_glVertexArrayBindingDivisor	code/game_renderer_opengl.h	/^typedef void    GL_glVertexArrayBindingDivisor(GLuint vaobj,$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint divisor)
GL_glVertexArrayElementBuffer	code/game_renderer_opengl.h	/^typedef void    GL_glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint buffer)
GL_glVertexArrayVertexBuffer	code/game_renderer_opengl.h	/^typedef void    GL_glVertexArrayVertexBuffer(GLuint vaobj, $/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
GL_glViewport	code/game_renderer_opengl.h	/^typedef void    GL_glViewport(GLint x, $/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
GL_LINEAR	code/game_gfx_opengl.h	/^#define GL_LINEAR /;"	d	language:C++
GL_LINEAR	code/game_renderer_opengl.h	/^#define GL_LINEAR /;"	d	language:C++
GL_LINEAR	game_gfx_opengl.h	/^#define GL_LINEAR /;"	d	language:C++
GL_LINK_STATUS	code/game_gfx_opengl.h	/^#define GL_LINK_STATUS /;"	d	language:C++
GL_LINK_STATUS	code/game_renderer_opengl.h	/^#define GL_LINK_STATUS /;"	d	language:C++
GL_LINK_STATUS	game_gfx_opengl.h	/^#define GL_LINK_STATUS /;"	d	language:C++
GL_LUMINANCE	test.c	/^    #define GL_LUMINANCE /;"	d	language:C	file:
GL_LUMINANCE_ALPHA	test.c	/^    #define GL_LUMINANCE_ALPHA /;"	d	language:C	file:
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	test.c	/^        #define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d	language:C	file:
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	test.c	/^    #define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d	language:C	file:
GL_NEAREST	code/game_gfx_opengl.h	/^#define GL_NEAREST /;"	d	language:C++
GL_NEAREST	code/game_renderer_opengl.h	/^#define GL_NEAREST /;"	d	language:C++
GL_NEAREST	game_gfx_opengl.h	/^#define GL_NEAREST /;"	d	language:C++
GL_ONE	code/game_gfx_opengl.h	/^#define GL_ONE /;"	d	language:C++
GL_ONE	code/game_renderer_opengl.h	/^#define GL_ONE /;"	d	language:C++
GL_ONE	game_gfx_opengl.h	/^#define GL_ONE /;"	d	language:C++
GL_ONE_MINUS_DST_ALPHA	code/game_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d	language:C++
GL_ONE_MINUS_DST_ALPHA	code/game_renderer_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d	language:C++
GL_ONE_MINUS_DST_ALPHA	game_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d	language:C++
GL_ONE_MINUS_DST_COLOR	code/game_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d	language:C++
GL_ONE_MINUS_DST_COLOR	code/game_renderer_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d	language:C++
GL_ONE_MINUS_DST_COLOR	game_gfx_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d	language:C++
GL_ONE_MINUS_SRC_ALPHA	code/game_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d	language:C++
GL_ONE_MINUS_SRC_ALPHA	code/game_renderer_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d	language:C++
GL_ONE_MINUS_SRC_ALPHA	game_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d	language:C++
GL_ONE_MINUS_SRC_COLOR	code/game_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d	language:C++
GL_ONE_MINUS_SRC_COLOR	code/game_renderer_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d	language:C++
GL_ONE_MINUS_SRC_COLOR	game_gfx_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d	language:C++
GL_READ_FRAMEBUFFER	test.c	/^    #define GL_READ_FRAMEBUFFER /;"	d	language:C	file:
GL_RGBA	code/game_gfx_opengl.h	/^#define GL_RGBA /;"	d	language:C++
GL_RGBA	code/game_renderer_opengl.h	/^#define GL_RGBA /;"	d	language:C++
GL_RGBA	game_gfx_opengl.h	/^#define GL_RGBA /;"	d	language:C++
GL_RGBA8	code/game_gfx_opengl.h	/^#define GL_RGBA8 /;"	d	language:C++
GL_RGBA8	code/game_renderer_opengl.h	/^#define GL_RGBA8 /;"	d	language:C++
GL_RGBA8	game_gfx_opengl.h	/^#define GL_RGBA8 /;"	d	language:C++
GL_SCISSOR_TEST	code/game_gfx_opengl.h	/^#define GL_SCISSOR_TEST /;"	d	language:C++
GL_SCISSOR_TEST	code/game_renderer_opengl.h	/^#define GL_SCISSOR_TEST /;"	d	language:C++
GL_SCISSOR_TEST	game_gfx_opengl.h	/^#define GL_SCISSOR_TEST /;"	d	language:C++
GL_SHADING_LANGUAGE_VERSION	test.c	/^    #define GL_SHADING_LANGUAGE_VERSION /;"	d	language:C	file:
GL_SRC_ALPHA	code/game_gfx_opengl.h	/^#define GL_SRC_ALPHA /;"	d	language:C++
GL_SRC_ALPHA	code/game_renderer_opengl.h	/^#define GL_SRC_ALPHA /;"	d	language:C++
GL_SRC_ALPHA	game_gfx_opengl.h	/^#define GL_SRC_ALPHA /;"	d	language:C++
GL_SRC_COLOR	code/game_gfx_opengl.h	/^#define GL_SRC_COLOR /;"	d	language:C++
GL_SRC_COLOR	code/game_renderer_opengl.h	/^#define GL_SRC_COLOR /;"	d	language:C++
GL_SRC_COLOR	game_gfx_opengl.h	/^#define GL_SRC_COLOR /;"	d	language:C++
GL_TEXTURE_2D	code/game_gfx_opengl.h	/^#define GL_TEXTURE_2D /;"	d	language:C++
GL_TEXTURE_2D	code/game_renderer_opengl.h	/^#define GL_TEXTURE_2D /;"	d	language:C++
GL_TEXTURE_2D	game_gfx_opengl.h	/^#define GL_TEXTURE_2D /;"	d	language:C++
GL_TEXTURE_MAG_FILTER	code/game_gfx_opengl.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d	language:C++
GL_TEXTURE_MAG_FILTER	code/game_renderer_opengl.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d	language:C++
GL_TEXTURE_MAG_FILTER	game_gfx_opengl.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d	language:C++
GL_TEXTURE_MAX_ANISOTROPY_EXT	test.c	/^    #define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d	language:C	file:
GL_TEXTURE_MIN_FILTER	code/game_gfx_opengl.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d	language:C++
GL_TEXTURE_MIN_FILTER	code/game_renderer_opengl.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d	language:C++
GL_TEXTURE_MIN_FILTER	game_gfx_opengl.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d	language:C++
GL_TRIANGLES	code/game_gfx_opengl.h	/^#define GL_TRIANGLES /;"	d	language:C++
GL_TRIANGLES	code/game_renderer_opengl.h	/^#define GL_TRIANGLES /;"	d	language:C++
GL_TRIANGLES	game_gfx_opengl.h	/^#define GL_TRIANGLES /;"	d	language:C++
GL_TRUE	code/game_gfx_opengl.h	/^#define GL_TRUE /;"	d	language:C++
GL_TRUE	code/game_renderer_opengl.h	/^#define GL_TRUE /;"	d	language:C++
GL_TRUE	game_gfx_opengl.h	/^#define GL_TRUE /;"	d	language:C++
GL_UNSIGNED_BYTE	code/game_gfx_opengl.h	/^#define GL_UNSIGNED_BYTE /;"	d	language:C++
GL_UNSIGNED_BYTE	code/game_renderer_opengl.h	/^#define GL_UNSIGNED_BYTE /;"	d	language:C++
GL_UNSIGNED_BYTE	game_gfx_opengl.h	/^#define GL_UNSIGNED_BYTE /;"	d	language:C++
GL_UNSIGNED_SHORT_4_4_4_4	test.c	/^    #define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d	language:C	file:
GL_UNSIGNED_SHORT_5_5_5_1	test.c	/^    #define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d	language:C	file:
GL_UNSIGNED_SHORT_5_6_5	test.c	/^    #define GL_UNSIGNED_SHORT_5_6_5 /;"	d	language:C	file:
GL_VERTEX_SHADER	code/game_gfx_opengl.h	/^#define GL_VERTEX_SHADER /;"	d	language:C++
GL_VERTEX_SHADER	code/game_renderer_opengl.h	/^#define GL_VERTEX_SHADER /;"	d	language:C++
GL_VERTEX_SHADER	game_gfx_opengl.h	/^#define GL_VERTEX_SHADER /;"	d	language:C++
GL_ZERO	code/game_gfx_opengl.h	/^#define GL_ZERO /;"	d	language:C++
GL_ZERO	code/game_renderer_opengl.h	/^#define GL_ZERO /;"	d	language:C++
GL_ZERO	game_gfx_opengl.h	/^#define GL_ZERO /;"	d	language:C++
GOLD_32	code/momo_common.h	/^#define GOLD_32 /;"	d	language:C++
GOLD_32	momo_common.h	/^#define GOLD_32 /;"	d	language:C++
GOLD_64	code/momo_common.h	/^#define GOLD_64 /;"	d	language:C++
GOLD_64	momo_common.h	/^#define GOLD_64 /;"	d	language:C++
gpos	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
gpos	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
GRAPHICS_API_OPENGL_33	test.c	/^        #define GRAPHICS_API_OPENGL_33$/;"	d	language:C	file:
GRAPHICS_API_OPENGL_33	test.c	/^    #define GRAPHICS_API_OPENGL_33$/;"	d	language:C	file:
GRAPHICS_API_OPENGL_33	test.c	/^    #define GRAPHICS_API_OPENGL_33$/;"	d	language:C	file:
g_platform	code/game.h	/^Platform* g_platform;$/;"	v	language:C++	typeref:typename:Platform *
g_platform	game.h	/^Platform* g_platform;$/;"	v	language:C++	typeref:typename:Platform *
g_profiler	code/game.h	/^Profiler* g_profiler;$/;"	v	language:C++	typeref:typename:Profiler *
g_profiler	code/w32.cpp	/^Profiler* g_profiler = &_g_profiler; $/;"	v	language:C++	typeref:typename:Profiler *
g_profiler	code/win.cpp	/^Profiler* g_profiler = &_g_profiler; $/;"	v	language:C++	typeref:typename:Profiler *
g_profiler	game.h	/^Profiler* g_profiler;$/;"	v	language:C++	typeref:typename:Profiler *
g_profiler	w32.cpp	/^Profiler* g_profiler = &_g_profiler; $/;"	v	language:C++	typeref:typename:Profiler *
g_w32_state	code/w32.cpp	/^static W32_State g_w32_state;$/;"	v	language:C++	typeref:typename:W32_State	file:
g_w32_state	w32.cpp	/^static W32_State g_w32_state;$/;"	v	language:C++	typeref:typename:W32_State	file:
g_win_state	code/win.cpp	/^static Win_State g_win_state;$/;"	v	language:C++	typeref:typename:Win_State	file:
h	code/momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonb89fa6ae0208	typeref:typename:F32
h	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80208	typeref:typename:U32
h	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80308	typeref:typename:U32
h	code/momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20d08	typeref:typename:F32
h	code/momo_vectors.h	/^	struct { F32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20908	typeref:typename:F32
h	code/momo_vectors.h	/^	struct { S32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2040a::__anon8de67fa20608	typeref:typename:S32
h	code/momo_vectors.h	/^	struct { U32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2010a::__anon8de67fa20308	typeref:typename:U32
h	momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonf72fc8c40208	typeref:typename:F32
h	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0208	typeref:typename:U32
h	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0308	typeref:typename:U32
h	momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780d08	typeref:typename:F32
h	momo_vectors.h	/^	struct { F32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780908	typeref:typename:F32
h	momo_vectors.h	/^	struct { S32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478040a::__anon9e7ae4780608	typeref:typename:S32
h	momo_vectors.h	/^	struct { U32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478010a::__anon9e7ae4780308	typeref:typename:U32
half_angle	.\code\game_sb1.h	/^  F32 half_angle;$/;"	m	language:C++	struct:SB1_Light
half_angle	code/game_mode_lit_light.h	/^  F32 half_angle;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:F32
half_angle	game_mode_lit_light.h	/^  F32 half_angle;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:F32
handle	code/game_gfx_opengl.h	/^  GLuint handle;$/;"	m	language:C++	struct:__anon1d4ae8470708	typeref:typename:GLuint
handle	code/game_renderer_opengl.h	/^  GLuint handle;$/;"	m	language:C++	struct:Texture	typeref:typename:GLuint
handle	code/w32.cpp	/^  HANDLE handle;$/;"	m	language:C++	struct:W32_File	typeref:typename:HANDLE	file:
handle	code/win.cpp	/^  HANDLE handle;$/;"	m	language:C++	struct:Win_File	typeref:typename:HANDLE	file:
handle	game_gfx_opengl.h	/^  GLuint handle;$/;"	m	language:C++	struct:__anon8caa255d0708	typeref:typename:GLuint
handle	w32.cpp	/^  HANDLE handle;$/;"	m	language:C++	struct:W32_File	typeref:typename:HANDLE	file:
head	code/momo_json.h	/^  struct _JSON_Array_Node* head;  $/;"	m	language:C++	struct:JSON_Array	typeref:struct:_JSON_Array_Node *
head	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
head	momo_json.h	/^  struct _JSON_Array_Node* head;  $/;"	m	language:C++	struct:JSON_Array	typeref:struct:_JSON_Array_Node *
head	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
height	code/game_assets.h	/^  U32 height;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
height	code/game_gfx_opengl.h	/^  U32 height;$/;"	m	language:C++	struct:__anon1d4ae8470708	typeref:typename:U32
height	code/game_renderer.h	/^  F32 height;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
height	code/game_renderer_opengl.h	/^  U32 height;$/;"	m	language:C++	struct:Texture	typeref:typename:U32
height	code/karu.h	/^  U32 width, height;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
height	code/momo_image.h	/^  U32 width, height;$/;"	m	language:C++	struct:__anon70e8603f0108	typeref:typename:U32
height	code/momo_png.h	/^  U32 height;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U32
height	code/momo_png.h	/^  U32 height;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U32
height	code/sui_pack.h	/^  U32 height;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32
height	game_assets.h	/^  U32 height;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
height	game_gfx.h	/^  F32 height;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
height	game_gfx_opengl.h	/^  U32 height;$/;"	m	language:C++	struct:__anon8caa255d0708	typeref:typename:U32
height	karu.h	/^  U32 width, height;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
height	momo_image.h	/^  U32 width, height;$/;"	m	language:C++	struct:__anon825197950108	typeref:typename:U32
height	momo_png.h	/^  U32 height;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U32
height	momo_png.h	/^  U32 height;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U32
height	sui_pack.h	/^  U32 height;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32
held_light	.\code\game_sb1.h	/^  SB1_Light* held_light;$/;"	m	language:C++	struct:SB1_Player
held_light	code/game_mode_level.h	/^  Light* held_light;$/;"	m	language:C++	struct:Player	typeref:typename:Light *
held_light	code/game_mode_lit_player.h	/^  Lit_Light* held_light;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:Lit_Light *
held_light	game_mode_lit_player.h	/^  Lit_Light* held_light;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:Lit_Light *
hex_to_rgba	code/momo_colors.h	/^hex_to_rgba(U32 hex) {$/;"	f	language:C++	typeref:typename:RGBA
hex_to_rgba	code/momo_colors.h	/^static RGBA hex_to_rgba(U32 hex);  $/;"	p	language:C++	typeref:typename:RGBA
hex_to_rgba	momo_colors.h	/^hex_to_rgba(U32 hex) {$/;"	f	language:C++	typeref:typename:RGBA
hex_to_rgba	momo_colors.h	/^static RGBA hex_to_rgba(U32 hex);  $/;"	p	language:C++	typeref:typename:RGBA
hhea	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
hhea	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
highest_codepoint	code/game_assets.h	/^  U32 highest_codepoint;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32
highest_codepoint	code/karu.h	/^  U32 highest_codepoint;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
highest_codepoint	code/sui_pack.h	/^  U32 highest_codepoint; \/\/ TODO: we should get rid of this?$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
highest_codepoint	game_assets.h	/^  U32 highest_codepoint;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:U32
highest_codepoint	karu.h	/^  U32 highest_codepoint;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
highest_codepoint	sui_pack.h	/^  U32 highest_codepoint; \/\/ TODO: we should get rid of this?$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
hits	code/game_profiler.h	/^  U32 hits;$/;"	m	language:C++	struct:Profiler_Snapshot	typeref:typename:U32
hits	game_profiler.h	/^  U32 hits;$/;"	m	language:C++	struct:Profiler_Snapshot	typeref:typename:U32
hits_and_cycles	code/game_profiler.h	/^  U64 hits_and_cycles;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U64
hits_and_cycles	game_profiler.h	/^  U64 hits_and_cycles;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U64
hmtx	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
hmtx	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
horizontal_advances	code/game_assets.h	/^  F32* horizontal_advances;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:F32 *
horizontal_advances	game_assets.h	/^  F32* horizontal_advances;$/;"	m	language:C++	struct:Font_Asset	typeref:typename:F32 *
hsl	code/momo_colors.h	/^hsl(F32 h, F32 s, F32 l) {$/;"	f	language:C++	typeref:typename:HSL
hsl	code/momo_colors.h	/^static HSL  hsl(F32 h, F32 s, F32 l);$/;"	p	language:C++	typeref:typename:HSL
HSL	code/momo_colors.h	/^} HSL;$/;"	t	language:C++	typeref:struct:__anonb89fa6ae0208
hsl	momo_colors.h	/^hsl(F32 h, F32 s, F32 l) {$/;"	f	language:C++	typeref:typename:HSL
hsl	momo_colors.h	/^static HSL  hsl(F32 h, F32 s, F32 l);$/;"	p	language:C++	typeref:typename:HSL
HSL	momo_colors.h	/^} HSL;$/;"	t	language:C++	typeref:struct:__anonf72fc8c40208
hsl_to_rgb	code/momo_colors.h	/^hsl_to_rgb(HSL c) {$/;"	f	language:C++	typeref:typename:RGB
hsl_to_rgb	code/momo_colors.h	/^static RGB  hsl_to_rgb(HSL c);$/;"	p	language:C++	typeref:typename:RGB
hsl_to_rgb	momo_colors.h	/^hsl_to_rgb(HSL c) {$/;"	f	language:C++	typeref:typename:RGB
hsl_to_rgb	momo_colors.h	/^static RGB  hsl_to_rgb(HSL c);$/;"	p	language:C++	typeref:typename:RGB
id	code/game_gfx.h	/^  U32 id; \/\/ type id from user$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:U32
id	code/game_renderer.h	/^  U32 id; \/\/ type id from user$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:U32
id	code/momo_wav.h	/^  U32 id; \/\/ big endian$/;"	m	language:C++	struct:__anon54fde02a0108	typeref:typename:U32
id	code/momo_wav.h	/^  U32 id;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U32
id	code/momo_wav.h	/^  U32 id;$/;"	m	language:C++	struct:__anon54fde02a0308	typeref:typename:U32
id	game_gfx.h	/^  U32 id; \/\/ type id from user$/;"	m	language:C++	struct:Gfx_Command	typeref:typename:U32
id	momo_wav.h	/^  U32 id; \/\/ big endian$/;"	m	language:C++	struct:__anon4ee54a000108	typeref:typename:U32
id	momo_wav.h	/^  U32 id;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U32
id	momo_wav.h	/^  U32 id;$/;"	m	language:C++	struct:__anon4ee54a000308	typeref:typename:U32
id_name	code/sui_pack.h	/^  const C8* id_name;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:const C8 *
id_name	code/sui_pack.h	/^  const C8* id_name;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:const C8 *
id_name	code/sui_pack.h	/^  const char* id_name;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:const char *
id_name	sui_pack.h	/^  const C8* id_name;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:const C8 *
id_name	sui_pack.h	/^  const C8* id_name;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:const C8 *
id_name	sui_pack.h	/^  const char* id_name;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:const char *
Image32	code/momo_image.h	/^}Image32;$/;"	t	language:C++	typeref:struct:__anon70e8603f0108
Image32	momo_image.h	/^}Image32;$/;"	t	language:C++	typeref:struct:__anon825197950108
image_height	code/momo_png.h	/^  U32 image_height;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
image_height	momo_png.h	/^  U32 image_height;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
image_stream	code/momo_png.h	/^  Stream image_stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
image_stream	momo_png.h	/^  Stream image_stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
image_width	code/momo_png.h	/^  U32 image_width;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
image_width	momo_png.h	/^  U32 image_width;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:U32
img32_bad	code/momo_image.h	/^img32_bad() {$/;"	f	language:C++	typeref:typename:Image32
img32_bad	momo_image.h	/^img32_bad() {$/;"	f	language:C++	typeref:typename:Image32
img32_ok	code/momo_image.h	/^img32_ok(Image32 img) {$/;"	f	language:C++	typeref:typename:B32
img32_ok	momo_image.h	/^img32_ok(Image32 img) {$/;"	f	language:C++	typeref:typename:B32
imm_notifs	code/w32_audio_wasapi.h	/^  IMMNotificationClient imm_notifs;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:IMMNotificationClient
imm_notifs	code/win_audio_wasapi.h	/^  IMMNotificationClient imm_notifs;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:IMMNotificationClient
imm_notifs	w32_audio_wasapi.h	/^  IMMNotificationClient imm_notifs;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:IMMNotificationClient
in	code/test_png.h	/^    const char* in;$/;"	m	language:C++	struct:test_png::__anonee61d0a90108	typeref:typename:const char *
in	test_png.h	/^    const char* in;$/;"	m	language:C++	struct:test_png::__anone8493a7f0108	typeref:typename:const char *
index	code/momo_rng.h	/^  U32 index;$/;"	m	language:C++	struct:__anon54aa46c30108	typeref:typename:U32
index	code/momo_sort.h	/^  U32 index;$/;"	m	language:C++	struct:__anonec618b240108	typeref:typename:U32
index	momo_rng.h	/^  U32 index;$/;"	m	language:C++	struct:__anon4e91b0990108	typeref:typename:U32
index	momo_sort.h	/^  U32 index;$/;"	m	language:C++	struct:__anon23362fba0108	typeref:typename:U32
indices	test.c	/^    unsigned int *indices;      \/\/ Vertex indices (in case vertex data comes indexed) (6 indic/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:unsigned int *	file:
indices	test.c	/^    unsigned short *indices;    \/\/ Vertex indices (in case vertex data comes indexed) (6 indic/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:unsigned short *	file:
info_lines	code/game_console.h	/^  String8_Builder info_lines[9];$/;"	m	language:C++	struct:Console	typeref:typename:String8_Builder[9]
info_lines	game_console.h	/^  String8_Builder info_lines[9];$/;"	m	language:C++	struct:Console	typeref:typename:String8_Builder[9]
INITGUID	code/w32.h	/^#define INITGUID$/;"	d	language:C++
INITGUID	code/win.h	/^#define INITGUID$/;"	d	language:C++
INITGUID	w32.h	/^#define INITGUID$/;"	d	language:C++
init_console	code/game_console.h	/^init_console(Console* dc, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:void
init_console	game_console.h	/^init_console(Console* dc, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:void
init_editor	code/game_mode_level_editor.cpp	/^init_editor(Editor* e, V2 pos) {$/;"	f	language:C++	typeref:typename:void	file:
init_editor	game_mode_level_editor.cpp	/^init_editor(Editor* e, V2 pos) {$/;"	f	language:C++	typeref:typename:void	file:
init_editor_toolbar_button	code/game_mode_level_editor.cpp	/^init_editor_toolbar_button(Editor* e, Editor_State state, $/;"	f	language:C++	typeref:typename:void	file:
init_editor_toolbar_button	game_mode_level_editor.cpp	/^init_editor_toolbar_button(Editor* e, Editor_State state, $/;"	f	language:C++	typeref:typename:void	file:
input_line	code/game_console.h	/^  String8_Builder input_line;$/;"	m	language:C++	struct:Console	typeref:typename:String8_Builder
input_line	game_console.h	/^  String8_Builder input_line;$/;"	m	language:C++	struct:Console	typeref:typename:String8_Builder
inspector	code/game.h	/^  Inspector inspector;$/;"	m	language:C++	struct:Game	typeref:typename:Inspector
Inspector	code/game_inspector.h	/^struct Inspector {$/;"	s	language:C++
inspector	game.h	/^  Inspector inspector;$/;"	m	language:C++	struct:Game	typeref:typename:Inspector
Inspector	game_inspector.h	/^struct Inspector {$/;"	s	language:C++
Inspector_Entry	code/game_inspector.h	/^struct Inspector_Entry {$/;"	s	language:C++
Inspector_Entry	game_inspector.h	/^struct Inspector_Entry {$/;"	s	language:C++
Inspector_Entry_List	code/game_inspector.h	/^struct Inspector_Entry_List {$/;"	s	language:C++
Inspector_Entry_List	game_inspector.h	/^struct Inspector_Entry_List {$/;"	s	language:C++
Inspector_Entry_Type	code/game_inspector.h	/^enum Inspector_Entry_Type {$/;"	g	language:C++
Inspector_Entry_Type	game_inspector.h	/^enum Inspector_Entry_Type {$/;"	g	language:C++
INSPECTOR_ENTRY_TYPE_F32	code/game_inspector.h	/^  INSPECTOR_ENTRY_TYPE_F32,$/;"	e	language:C++	enum:Inspector_Entry_Type
INSPECTOR_ENTRY_TYPE_F32	game_inspector.h	/^  INSPECTOR_ENTRY_TYPE_F32,$/;"	e	language:C++	enum:Inspector_Entry_Type
INSPECTOR_ENTRY_TYPE_U32	code/game_inspector.h	/^  INSPECTOR_ENTRY_TYPE_U32,$/;"	e	language:C++	enum:Inspector_Entry_Type
INSPECTOR_ENTRY_TYPE_U32	game_inspector.h	/^  INSPECTOR_ENTRY_TYPE_U32,$/;"	e	language:C++	enum:Inspector_Entry_Type
instances_to_draw	code/game_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLsizei
instances_to_draw	code/game_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLsizei
instances_to_draw	code/game_renderer_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLsizei
instances_to_draw	game_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLsizei
instances_to_draw	game_gfx_opengl.h	/^  GLsizei instances_to_draw;$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLsizei
instancing	test.c	/^        bool instancing;                    \/\/ Instancing supported (GL_ANGLE_instanced_arrays/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
interlace_method	code/momo_png.h	/^  U8 interlace_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
interlace_method	code/momo_png.h	/^  U8 interlace_method;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U8
interlace_method	momo_png.h	/^  U8 interlace_method;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U8
interlace_method	momo_png.h	/^  U8 interlace_method;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U8
INTERNAL	code/momo_common.h	/^#define INTERNAL /;"	d	language:C++
INTERNAL	momo_common.h	/^#define INTERNAL /;"	d	language:C++
intersections	.\code\game_sb1.h	/^  SB1_Light_Intersection_List intersections;$/;"	m	language:C++	struct:SB1_Light
intersections	code/game_mode_lit_light.h	/^  Lit_Light_Intersection_List intersections;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Intersection_List
intersections	game_mode_lit_light.h	/^  Lit_Light_Intersection_List intersections;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Intersection_List
int_to_ptr	code/momo_common.h	/^int_to_ptr(UMI u) { $/;"	f	language:C++	typeref:typename:U8 *
int_to_ptr	momo_common.h	/^int_to_ptr(UMI u) { $/;"	f	language:C++	typeref:typename:U8 *
is_alpha	code/momo_common.h	/^is_alpha(C8 c) {$/;"	f	language:C++	typeref:typename:B32
is_alpha	momo_common.h	/^is_alpha(C8 c) {$/;"	f	language:C++	typeref:typename:B32
is_close_f32	code/momo_common.h	/^is_close_f32(F32 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:B32
is_close_f32	momo_common.h	/^is_close_f32(F32 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:B32
is_close_f64	code/momo_common.h	/^is_close_f64(F64 lhs, F64 rhs) {$/;"	f	language:C++	typeref:typename:B32
is_close_f64	momo_common.h	/^is_close_f64(F64 lhs, F64 rhs) {$/;"	f	language:C++	typeref:typename:B32
IS_CPP	code/momo_common.h	/^# define IS_CPP /;"	d	language:C++
IS_CPP	code/momo_common.h	/^# define IS_CPP /;"	d	language:C++
IS_CPP	momo_common.h	/^# define IS_CPP /;"	d	language:C++
IS_CPP	momo_common.h	/^# define IS_CPP /;"	d	language:C++
is_device_changed	code/w32_audio_wasapi.h	/^	B32 is_device_changed;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_device_changed	code/win_audio_wasapi.h	/^	B32 is_device_changed;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_device_changed	w32_audio_wasapi.h	/^	B32 is_device_changed;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_device_ready	code/w32_audio_wasapi.h	/^	B32 is_device_ready;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_device_ready	code/win_audio_wasapi.h	/^	B32 is_device_ready;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_device_ready	w32_audio_wasapi.h	/^	B32 is_device_ready;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:B32
is_digit	code/momo_common.h	/^is_digit(U8 c) {$/;"	f	language:C++	typeref:typename:B32
is_digit	momo_common.h	/^is_digit(U8 c) {$/;"	f	language:C++	typeref:typename:B32
is_disabled	.\code\game_sb1.h	/^  B32 is_disabled;$/;"	m	language:C++	struct:SB1_Edge
is_disabled	code/game_mode_lit.h	/^  B32 is_disabled;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:B32
is_disabled	code/game_mode_sb1.h	/^  B32 is_disabled;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:B32
is_disabled	game_mode_lit.h	/^  B32 is_disabled;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:B32
is_done	code/game.h	/^  B32 is_done;$/;"	m	language:C++	struct:Game	typeref:typename:B32
is_done	game.h	/^  B32 is_done;$/;"	m	language:C++	struct:Game	typeref:typename:B32
is_inverted	code/momo_ttf.h	/^  B32 is_inverted;$/;"	m	language:C++	struct:__anon54d1bdca0608	typeref:typename:B32
is_inverted	momo_ttf.h	/^  B32 is_inverted;$/;"	m	language:C++	struct:__anon4eb927a00608	typeref:typename:B32
is_memory_same	code/momo_common.h	/^is_memory_same(const void* lhs, const void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:B32
is_memory_same	code/momo_common.h	/^is_memory_same(const void* lhs, const void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:B32
is_memory_same	momo_common.h	/^is_memory_same(const void* lhs, const void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:B32
is_memory_same	momo_common.h	/^is_memory_same(const void* lhs, const void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:B32
is_mode_changed	code/game.h	/^  B32 is_mode_changed;$/;"	m	language:C++	struct:Game	typeref:typename:B32
is_mode_changed	game.h	/^  B32 is_mode_changed;$/;"	m	language:C++	struct:Game	typeref:typename:B32
is_nan_f32	code/momo_common.h	/^is_nan_f32(F32 f) {$/;"	f	language:C++	typeref:typename:B32
is_nan_f32	momo_common.h	/^is_nan_f32(F32 f) {$/;"	f	language:C++	typeref:typename:B32
is_nan_f64	code/momo_common.h	/^is_nan_f64(F64 f) {$/;"	f	language:C++	typeref:typename:B32
is_nan_f64	momo_common.h	/^is_nan_f64(F64 f) {$/;"	f	language:C++	typeref:typename:B32
is_point_in_editor_toolbar_state_button	code/game_mode_level_editor.cpp	/^is_point_in_editor_toolbar_state_button(Editor* e, UMI btn_index, V2 pt) {$/;"	f	language:C++	typeref:typename:B32	file:
is_point_in_editor_toolbar_state_button	game_mode_level_editor.cpp	/^is_point_in_editor_toolbar_state_button(Editor* e, UMI btn_index, V2 pt) {$/;"	f	language:C++	typeref:typename:B32	file:
is_point_on_editor_toolbar	code/game_mode_level_editor.cpp	/^is_point_on_editor_toolbar(Editor* e, V2 pt) {$/;"	f	language:C++	typeref:typename:B32	file:
is_point_on_editor_toolbar	game_mode_level_editor.cpp	/^is_point_on_editor_toolbar(Editor* e, V2 pt) {$/;"	f	language:C++	typeref:typename:B32	file:
is_pow2	code/momo_common.h	/^#define is_pow2(/;"	d	language:C++
is_pow2	momo_common.h	/^#define is_pow2(/;"	d	language:C++
is_running	code/w32.cpp	/^  B32 is_running;$/;"	m	language:C++	struct:W32_State	typeref:typename:B32	file:
is_running	code/win.cpp	/^  B32 is_running;$/;"	m	language:C++	struct:Win_State	typeref:typename:B32	file:
is_running	w32.cpp	/^  B32 is_running;$/;"	m	language:C++	struct:W32_State	typeref:typename:B32	file:
is_selecting_pt	code/game_mode_level_editor.h	/^  B32 is_selecting_pt;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
is_selecting_pt	game_mode_level_editor.h	/^  B32 is_selecting_pt;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
is_shell	.\code\game_sb1.h	/^  B32 is_shell;$/;"	m	language:C++	struct:SB1_Light_Intersection
is_shell	code/game_mode_lit_light.h	/^  B32 is_shell;$/;"	m	language:C++	struct:Lit_Light_Intersection	typeref:typename:B32
is_shell	game_mode_lit_light.h	/^  B32 is_shell;$/;"	m	language:C++	struct:Lit_Light_Intersection	typeref:typename:B32
is_valid	code/w32_loaded_code.h	/^  B32 is_valid;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:B32
is_valid	code/win_loaded_code.h	/^  B32 is_valid;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:B32
is_valid	w32_loaded_code.h	/^  B32 is_valid;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:B32
is_whitespace	code/momo_common.h	/^is_whitespace(C8 c) {$/;"	f	language:C++	typeref:typename:B32
is_whitespace	momo_common.h	/^is_whitespace(C8 c) {$/;"	f	language:C++	typeref:typename:B32
is_win_reached	.\code\game_sb1.h	/^  B32 is_win_reached;$/;"	m	language:C++	struct:SB1
is_win_reached	code/game_mode_lit.h	/^  B32 is_win_reached;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:B32
is_win_reached	code/game_mode_sb1.h	/^  B32 is_win_reached;$/;"	m	language:C++	struct:Lit	typeref:typename:B32
is_win_reached	game_mode_lit.h	/^  B32 is_win_reached;$/;"	m	language:C++	struct:Lit	typeref:typename:B32
item	code/game_inspector.h	/^  void* item;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:void *
item	game_inspector.h	/^  void* item;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:void *
item1	build/test_json.json	/^      "item1":null,$/;"	z	language:JSON	object:obj.more_obj
item1	build/test_json.json	/^    "item1":null,$/;"	z	language:JSON	object:next_obj
item1	build/test_json.json	/^    "item1":null,$/;"	z	language:JSON	object:obj
item2	build/test_json.json	/^      "item2":"hello",$/;"	s	language:JSON	object:obj.more_obj
item2	build/test_json.json	/^    "item2":"hello",$/;"	s	language:JSON	object:next_obj
item2	build/test_json.json	/^    "item2":"hello",$/;"	s	language:JSON	object:obj
item3	build/test_json.json	/^      "item3":123$/;"	n	language:JSON	object:obj.more_obj
item3	build/test_json.json	/^    "item3":123,$/;"	n	language:JSON	object:obj
JSON_Array	code/momo_json.h	/^typedef struct JSON_Array {$/;"	s	language:C++
JSON_Array	code/momo_json.h	/^} JSON_Array;$/;"	t	language:C++	typeref:struct:JSON_Array
JSON_Array	momo_json.h	/^typedef struct JSON_Array {$/;"	s	language:C++
JSON_Array	momo_json.h	/^} JSON_Array;$/;"	t	language:C++	typeref:struct:JSON_Array
JSON_DEBUG	code/json_test.cpp	/^#define JSON_DEBUG /;"	d	language:C++	file:
JSON_DEBUG	json_test.cpp	/^#define JSON_DEBUG /;"	d	language:C++	file:
json_get_array	code/momo_json.h	/^json_get_array(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:JSON_Array *
json_get_array	code/momo_json.h	/^static JSON_Array* json_get_array(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:JSON_Array *
json_get_array	momo_json.h	/^json_get_array(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:JSON_Array *
json_get_array	momo_json.h	/^static JSON_Array* json_get_array(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:JSON_Array *
json_get_b32	code/momo_json.h	/^json_get_b32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:B32 *
json_get_b32	code/momo_json.h	/^static B32* json_get_b32(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:B32 *
json_get_b32	momo_json.h	/^json_get_b32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:B32 *
json_get_b32	momo_json.h	/^static B32* json_get_b32(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:B32 *
json_get_f32	code/momo_json.h	/^json_get_f32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:F32 *
json_get_f32	code/momo_json.h	/^static F32* json_get_f32(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:F32 *
json_get_f32	momo_json.h	/^json_get_f32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:F32 *
json_get_f32	momo_json.h	/^static F32* json_get_f32(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:F32 *
json_get_object	code/momo_json.h	/^json_get_object(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:JSON_Object *
json_get_object	code/momo_json.h	/^static JSON_Object* json_get_object(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:JSON_Object *
json_get_object	momo_json.h	/^json_get_object(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:JSON_Object *
json_get_object	momo_json.h	/^static JSON_Object* json_get_object(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:JSON_Object *
json_get_s32	code/momo_json.h	/^json_get_s32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:S32 *
json_get_s32	code/momo_json.h	/^static S32* json_get_s32(JSON_Object* j, String8 key); $/;"	p	language:C++	typeref:typename:S32 *
json_get_s32	momo_json.h	/^json_get_s32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:S32 *
json_get_s32	momo_json.h	/^static S32* json_get_s32(JSON_Object* j, String8 key); $/;"	p	language:C++	typeref:typename:S32 *
json_get_str8	code/momo_json.h	/^json_get_str8(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:String8 *
json_get_str8	code/momo_json.h	/^static String8* json_get_str8(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:String8 *
json_get_str8	momo_json.h	/^json_get_str8(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:String8 *
json_get_str8	momo_json.h	/^static String8* json_get_str8(JSON_Object* j, String8 key);$/;"	p	language:C++	typeref:typename:String8 *
json_get_u32	code/momo_json.h	/^json_get_u32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:U32 *
json_get_u32	code/momo_json.h	/^static U32* json_get_u32(JSON_Object* j, String8 key); $/;"	p	language:C++	typeref:typename:U32 *
json_get_u32	momo_json.h	/^json_get_u32(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:U32 *
json_get_u32	momo_json.h	/^static U32* json_get_u32(JSON_Object* j, String8 key); $/;"	p	language:C++	typeref:typename:U32 *
JSON_Object	code/momo_json.h	/^} JSON_Object;$/;"	t	language:C++	typeref:struct:__anond7a9c0d60108
JSON_Object	momo_json.h	/^} JSON_Object;$/;"	t	language:C++	typeref:struct:__anon0e7e656c0108
json_read	code/momo_json.h	/^json_read(JSON_Object* j, void* memory, UMI size, Bump_Allocator* ba) $/;"	f	language:C++	typeref:typename:B32
json_read	code/momo_json.h	/^static B32 json_read(JSON_Object* j, void* memory, UMI size) ;$/;"	p	language:C++	typeref:typename:B32
json_read	momo_json.h	/^json_read(JSON_Object* j, void* memory, UMI size, Bump_Allocator* ba) $/;"	f	language:C++	typeref:typename:B32
json_read	momo_json.h	/^static B32 json_read(JSON_Object* j, void* memory, UMI size) ;$/;"	p	language:C++	typeref:typename:B32
json_read_from_blk	code/momo_json.h	/^json_read_from_blk(JSON_Object* j, Block blk, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
json_read_from_blk	code/momo_json.h	/^static B32 json_read_from_blk(JSON_Object* j, Block blk);$/;"	p	language:C++	typeref:typename:B32
json_read_from_blk	momo_json.h	/^json_read_from_blk(JSON_Object* j, Block blk, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
json_read_from_blk	momo_json.h	/^static B32 json_read_from_blk(JSON_Object* j, Block blk);$/;"	p	language:C++	typeref:typename:B32
Karu_Asset_Group	code/karu.h	/^struct Karu_Asset_Group {$/;"	s	language:C++
Karu_Asset_Group	karu.h	/^struct Karu_Asset_Group {$/;"	s	language:C++
Karu_Bitmap	code/karu.h	/^struct Karu_Bitmap {$/;"	s	language:C++
Karu_Bitmap	karu.h	/^struct Karu_Bitmap {$/;"	s	language:C++
KARU_CODE	code/karu.h	/^#define KARU_CODE(/;"	d	language:C++
KARU_CODE	karu.h	/^#define KARU_CODE(/;"	d	language:C++
Karu_Font	code/karu.h	/^struct Karu_Font {$/;"	s	language:C++
Karu_Font	karu.h	/^struct Karu_Font {$/;"	s	language:C++
Karu_Font_Glyph	code/karu.h	/^struct Karu_Font_Glyph {$/;"	s	language:C++
Karu_Font_Glyph	karu.h	/^struct Karu_Font_Glyph {$/;"	s	language:C++
KARU_H	code/karu.h	/^#define KARU_H$/;"	d	language:C++
KARU_H	karu.h	/^#define KARU_H$/;"	d	language:C++
Karu_Header	code/karu.h	/^struct Karu_Header {$/;"	s	language:C++
Karu_Header	karu.h	/^struct Karu_Header {$/;"	s	language:C++
KARU_SIGNATURE	code/karu.h	/^#define KARU_SIGNATURE /;"	d	language:C++
KARU_SIGNATURE	karu.h	/^#define KARU_SIGNATURE /;"	d	language:C++
Karu_Sound	code/karu.h	/^struct Karu_Sound {$/;"	s	language:C++
Karu_Sound	karu.h	/^struct Karu_Sound {$/;"	s	language:C++
Karu_Sprite	code/karu.h	/^struct Karu_Sprite {$/;"	s	language:C++
Karu_Sprite	karu.h	/^struct Karu_Sprite {$/;"	s	language:C++
KB	code/momo_common.h	/^#define KB(/;"	d	language:C++
KB	momo_common.h	/^#define KB(/;"	d	language:C++
kern	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
kern	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
key	code/game_console.h	/^  String8 key;$/;"	m	language:C++	struct:Console_Command	typeref:typename:String8
key	code/momo_json.h	/^  String8 key;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:typename:String8
key	code/momo_sort.h	/^  F32 key;$/;"	m	language:C++	struct:__anonec618b240108	typeref:typename:F32
key	game_console.h	/^  String8 key;$/;"	m	language:C++	struct:Console_Command	typeref:typename:String8
key	momo_json.h	/^  String8 key;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:typename:String8
key	momo_sort.h	/^  F32 key;$/;"	m	language:C++	struct:__anon23362fba0108	typeref:typename:F32
l	code/momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonb89fa6ae0208	typeref:typename:F32
l	momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonf72fc8c40208	typeref:typename:F32
last	code/game_profiler.h	/^  Profiler_Entry* last;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry *
last	game_profiler.h	/^  Profiler_Entry* last;$/;"	m	language:C++	struct:Profiler	typeref:typename:Profiler_Entry *
last_drawn_instance_index	code/game_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLsizei
last_drawn_instance_index	code/game_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLsizei
last_drawn_instance_index	code/game_renderer_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLsizei
last_drawn_instance_index	game_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLsizei
last_drawn_instance_index	game_gfx_opengl.h	/^  GLsizei last_drawn_instance_index;$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLsizei
latency_sample_count	code/w32_audio_wasapi.h	/^  U32 latency_sample_count;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
latency_sample_count	code/win_audio_wasapi.h	/^  U32 latency_sample_count;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
latency_sample_count	w32_audio_wasapi.h	/^  U32 latency_sample_count;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
layers	code/game_renderer.h	/^  U32 layers;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:U32
layers	game_gfx.h	/^  U32 layers;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:U32
left	code/momo_json.h	/^  struct _JSON_Object_Node* left;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:struct:_JSON_Object_Node *
left	momo_json.h	/^  struct _JSON_Object_Node* left;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:struct:_JSON_Object_Node *
left_side_bearing	code/momo_ttf.h	/^  S16 left_side_bearing;$/;"	m	language:C++	struct:__anon54d1bdca0208	typeref:typename:S16
left_side_bearing	momo_ttf.h	/^  S16 left_side_bearing;$/;"	m	language:C++	struct:__anon4eb927a00208	typeref:typename:S16
length	code/momo_png.h	/^  U32 length;$/;"	m	language:C++	struct:_PNG_Chunk_Header	typeref:typename:U32
length	momo_png.h	/^  U32 length;$/;"	m	language:C++	struct:_PNG_Chunk_Header	typeref:typename:U32
lengths	code/momo_png.h	/^  U16* lengths;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U16 *
lengths	momo_png.h	/^  U16* lengths;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U16 *
length_count	code/momo_png.h	/^  U32 length_count;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U32
length_count	momo_png.h	/^  U32 length_count;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U32
lerp_f32	code/momo_common.h	/^lerp_f32(F32 s, F32 e, F32 f) { $/;"	f	language:C++	typeref:typename:F32
lerp_f32	momo_common.h	/^lerp_f32(F32 s, F32 e, F32 f) { $/;"	f	language:C++	typeref:typename:F32
lerp_f64	code/momo_common.h	/^lerp_f64(F64 s, F64 e, F64 f) { $/;"	f	language:C++	typeref:typename:F64
lerp_f64	momo_common.h	/^lerp_f64(F64 s, F64 e, F64 f) { $/;"	f	language:C++	typeref:typename:F64
Level_Mode	code/game_mode_level.h	/^struct Level_Mode {$/;"	s	language:C++
Level_State	code/game_mode_level.h	/^enum Level_State {$/;"	g	language:C++
LEVEL_STATE_EDITOR	code/game_mode_level.h	/^  LEVEL_STATE_EDITOR,$/;"	e	language:C++	enum:Level_State
LEVEL_STATE_NORMAL	code/game_mode_level.h	/^  LEVEL_STATE_NORMAL,$/;"	e	language:C++	enum:Level_State
lifespan	code/game_mode_lit_particles.h	/^  F32 lifespan;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:F32
lifespan	game_mode_lit_particles.h	/^  F32 lifespan;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:F32
lifespan_now	code/game_mode_lit_particles.h	/^  F32 lifespan_now;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:F32
lifespan_now	game_mode_lit_particles.h	/^  F32 lifespan_now;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:F32
lights	.\code\game_sb1.h	/^  SB1_Light_List lights;$/;"	m	language:C++	struct:SB1
lights	code/game_mode_level.h	/^  Array_List<Light> lights;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Array_List<Light>
lights	code/game_mode_lit.h	/^  Lit_Light_List lights;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_Light_List
lights	code/game_mode_sb1.h	/^  Lit_Light_List lights;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Light_List
lights	game_mode_lit.h	/^  Lit_Light_List lights;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Light_List
LIGHT_BLUE	code/game_mode_level.h	/^#define LIGHT_BLUE /;"	d	language:C++
LIGHT_GREEN	code/game_mode_level.h	/^#define LIGHT_GREEN /;"	d	language:C++
LIGHT_RED	code/game_mode_level.h	/^#define LIGHT_RED /;"	d	language:C++
light_retrival_time	code/game_mode_lit_player.h	/^  F32 light_retrival_time;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:F32
light_retrival_time	game_mode_lit_player.h	/^  F32 light_retrival_time;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:F32
line	code/game_profiler.h	/^  U32 line;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
line	game_profiler.h	/^  U32 line;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
line2	code/momo_shapes.h	/^line2(V2 min, V2 max) {$/;"	f	language:C++	typeref:typename:Line2
Line2	code/momo_shapes.h	/^}Line2;$/;"	t	language:C++	typeref:struct:__anon484784200708
line2	momo_shapes.h	/^line2(V2 min, V2 max) {$/;"	f	language:C++	typeref:typename:Line2
Line2	momo_shapes.h	/^}Line2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360708
Lit	code/game_mode_lit.h	/^} Lit;$/;"	t	language:C++	typeref:struct:__anonfc57340b0208
Lit	code/game_mode_sb1.h	/^struct Lit {$/;"	s	language:C++
Lit	game_mode_lit.h	/^struct Lit {$/;"	s	language:C++
lit_are_all_sensors_activated	code/game_mode_lit_sensors.h	/^lit_are_all_sensors_activated(Lit_Sensor_List* sensors) {$/;"	f	language:C++	typeref:typename:B32
lit_calc_ghost_edge_line	code/game_mode_lit.h	/^lit_calc_ghost_edge_line(Lit_Edge* e) {$/;"	f	language:C++	typeref:typename:Line2
lit_calc_ghost_edge_line	code/game_mode_sb1.h	/^lit_calc_ghost_edge_line(Lit_Point_List* points, Lit_Edge* e) {$/;"	f	language:C++	typeref:typename:Line2
lit_calc_ghost_edge_line	game_mode_lit.h	/^lit_calc_ghost_edge_line(Lit_Point_List* points, Lit_Edge* e) {$/;"	f	language:C++	typeref:typename:Line2
LIT_DEBUG_EDGES	code/game_mode_lit.h	/^#define LIT_DEBUG_EDGES /;"	d	language:C++
LIT_DEBUG_EDGES	code/game_mode_sb1.h	/^#define LIT_DEBUG_EDGES /;"	d	language:C++
LIT_DEBUG_EDGES	game_mode_lit.h	/^#define LIT_DEBUG_EDGES /;"	d	language:C++
LIT_DEBUG_LIGHT	code/game_mode_lit.h	/^#define LIT_DEBUG_LIGHT /;"	d	language:C++
LIT_DEBUG_LIGHT	code/game_mode_sb1.h	/^#define LIT_DEBUG_LIGHT /;"	d	language:C++
LIT_DEBUG_LIGHT	game_mode_lit.h	/^#define LIT_DEBUG_LIGHT /;"	d	language:C++
Lit_Edge	code/game_mode_lit.h	/^struct Lit_Edge{$/;"	s	language:C++
Lit_Edge	code/game_mode_sb1.h	/^struct Lit_Edge{$/;"	s	language:C++
Lit_Edge	game_mode_lit.h	/^struct Lit_Edge{$/;"	s	language:C++
Lit_Edge_List	code/game_mode_lit.h	/^struct Lit_Edge_List {$/;"	s	language:C++
Lit_Edge_List	code/game_mode_sb1.h	/^struct Lit_Edge_List {$/;"	s	language:C++
Lit_Edge_List	game_mode_lit.h	/^struct Lit_Edge_List {$/;"	s	language:C++
lit_gen_lights	code/game_mode_lit_light.h	/^lit_gen_lights(Lit_Light_List* lights, $/;"	f	language:C++	typeref:typename:void
lit_gen_lights	game_mode_lit_light.h	/^lit_gen_lights(Lit_Light_List* lights, $/;"	f	language:C++	typeref:typename:void
lit_gen_light_intersections	code/game_mode_lit_light.h	/^lit_gen_light_intersections(Lit_Light* l,$/;"	f	language:C++	typeref:typename:void
lit_gen_light_intersections	game_mode_lit_light.h	/^lit_gen_light_intersections(Lit_Light* l,$/;"	f	language:C++	typeref:typename:void
lit_get_ray_intersection_time_wrt_edges	code/game_mode_lit_light.h	/^lit_get_ray_intersection_time_wrt_edges(Ray2 ray,$/;"	f	language:C++	typeref:typename:F32
lit_get_ray_intersection_time_wrt_edges	game_mode_lit_light.h	/^lit_get_ray_intersection_time_wrt_edges(Ray2 ray,$/;"	f	language:C++	typeref:typename:F32
lit_init_player	code/game_mode_lit_player.h	/^lit_init_player(Lit_Player* player, F32 x, F32 y) {$/;"	f	language:C++	typeref:typename:void
lit_init_player	game_mode_lit_player.h	/^lit_init_player(Lit_Player* player, F32 x, F32 y) {$/;"	f	language:C++	typeref:typename:void
Lit_Level	code/game_mode_lit_levels.h	/^typedef void (*Lit_Level)(Lit* mode); $/;"	t	language:C++	typeref:typename:void (*)(Lit * mode)
Lit_Level	code/game_mode_sb1_levels.h	/^typedef void (*Lit_Level)(Lit* mode); $/;"	t	language:C++	typeref:typename:void (*)(Lit * mode)
Lit_Level	game_mode_lit_levels.h	/^typedef void (*Lit_Level)(Lit* mode); $/;"	t	language:C++	typeref:typename:void (*)(Lit * mode)
lit_levels	code/game_mode_lit_levels.h	/^static Lit_Level lit_levels[] = {$/;"	v	language:C++	typeref:typename:Lit_Level[]
lit_levels	code/game_mode_sb1_levels.h	/^static Lit_Level lit_levels[] = {$/;"	v	language:C++	typeref:typename:Lit_Level[]
lit_levels	game_mode_lit_levels.h	/^static Lit_Level lit_levels[] = {$/;"	v	language:C++	typeref:typename:Lit_Level[]
lit_level_0	code/game_mode_lit_levels.h	/^lit_level_0(Lit* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0	code/game_mode_sb1_levels.h	/^lit_level_0(Lit* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_0	game_mode_lit_levels.h	/^lit_level_0(Lit* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_1	code/game_mode_lit_levels.h	/^lit_level_1(Lit* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_1	code/game_mode_sb1_levels.h	/^lit_level_1(Lit* m) {$/;"	f	language:C++	typeref:typename:void
lit_level_1	game_mode_lit_levels.h	/^lit_level_1(Lit* m) {$/;"	f	language:C++	typeref:typename:void
Lit_Light	code/game_mode_lit_light.h	/^struct Lit_Light {$/;"	s	language:C++
Lit_Light	game_mode_lit_light.h	/^struct Lit_Light {$/;"	s	language:C++
Lit_Light_Debug_Ray_List	code/game_mode_lit_light.h	/^struct Lit_Light_Debug_Ray_List {$/;"	s	language:C++
Lit_Light_Debug_Ray_List	game_mode_lit_light.h	/^struct Lit_Light_Debug_Ray_List {$/;"	s	language:C++
Lit_Light_Intersection	code/game_mode_lit_light.h	/^struct Lit_Light_Intersection {$/;"	s	language:C++
Lit_Light_Intersection	game_mode_lit_light.h	/^struct Lit_Light_Intersection {$/;"	s	language:C++
Lit_Light_Intersection_List	code/game_mode_lit_light.h	/^struct Lit_Light_Intersection_List {$/;"	s	language:C++
Lit_Light_Intersection_List	game_mode_lit_light.h	/^struct Lit_Light_Intersection_List {$/;"	s	language:C++
Lit_Light_List	code/game_mode_lit_light.h	/^struct Lit_Light_List {$/;"	s	language:C++
Lit_Light_List	game_mode_lit_light.h	/^struct Lit_Light_List {$/;"	s	language:C++
Lit_Light_Triangle_List	code/game_mode_lit_light.h	/^struct Lit_Light_Triangle_List {$/;"	s	language:C++
Lit_Light_Triangle_List	game_mode_lit_light.h	/^struct Lit_Light_Triangle_List {$/;"	s	language:C++
Lit_Light_Type	code/game_mode_lit_light.h	/^enum Lit_Light_Type {$/;"	g	language:C++
Lit_Light_Type	game_mode_lit_light.h	/^enum Lit_Light_Type {$/;"	g	language:C++
Lit_LIGHT_TYPE_DIRECTIONAL	code/game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_DIRECTIONAL,$/;"	e	language:C++	enum:Lit_Light_Type
Lit_LIGHT_TYPE_DIRECTIONAL	game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_DIRECTIONAL,$/;"	e	language:C++	enum:Lit_Light_Type
Lit_LIGHT_TYPE_POINT	code/game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_POINT,$/;"	e	language:C++	enum:Lit_Light_Type
Lit_LIGHT_TYPE_POINT	game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_POINT,$/;"	e	language:C++	enum:Lit_Light_Type
Lit_LIGHT_TYPE_WEIRD	code/game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_WEIRD$/;"	e	language:C++	enum:Lit_Light_Type
Lit_LIGHT_TYPE_WEIRD	game_mode_lit_light.h	/^  Lit_LIGHT_TYPE_WEIRD$/;"	e	language:C++	enum:Lit_Light_Type
lit_load_level	code/game_mode_lit_levels.h	/^lit_load_level(Lit* m, U32 level_id) {$/;"	f	language:C++	typeref:typename:void
lit_load_level	code/game_mode_sb1_levels.h	/^lit_load_level(Lit* m, U32 level_id) {$/;"	f	language:C++	typeref:typename:void
lit_load_level	game_mode_lit_levels.h	/^lit_load_level(Lit* m, U32 level_id) {$/;"	f	language:C++	typeref:typename:void
lit_load_next_level	code/game_mode_lit_levels.h	/^lit_load_next_level(Lit* m){$/;"	f	language:C++	typeref:typename:void
lit_load_next_level	code/game_mode_sb1_levels.h	/^lit_load_next_level(Lit* m){$/;"	f	language:C++	typeref:typename:void
lit_load_next_level	game_mode_lit_levels.h	/^lit_load_next_level(Lit* m){$/;"	f	language:C++	typeref:typename:void
Lit_Particle	code/game_mode_lit_particles.h	/^struct Lit_Particle {$/;"	s	language:C++
Lit_Particle	game_mode_lit_particles.h	/^struct Lit_Particle {$/;"	s	language:C++
Lit_Particle_Pool	code/game_mode_lit_particles.h	/^struct Lit_Particle_Pool {$/;"	s	language:C++
Lit_Particle_Pool	game_mode_lit_particles.h	/^struct Lit_Particle_Pool {$/;"	s	language:C++
Lit_Player	code/game_mode_lit_player.h	/^struct Lit_Player {$/;"	s	language:C++
Lit_Player	game_mode_lit_player.h	/^struct Lit_Player {$/;"	s	language:C++
LIT_PLAYER_LIGHT_RETRIEVE_DURATION	code/game_mode_lit_player.h	/^#define LIT_PLAYER_LIGHT_RETRIEVE_DURATION /;"	d	language:C++
LIT_PLAYER_LIGHT_RETRIEVE_DURATION	game_mode_lit_player.h	/^#define LIT_PLAYER_LIGHT_RETRIEVE_DURATION /;"	d	language:C++
LIT_PLAYER_RADIUS	code/game_mode_lit_player.h	/^#define LIT_PLAYER_RADIUS /;"	d	language:C++
LIT_PLAYER_RADIUS	game_mode_lit_player.h	/^#define LIT_PLAYER_RADIUS /;"	d	language:C++
Lit_Point_List	code/game_mode_sb1.h	/^struct Lit_Point_List {$/;"	s	language:C++
Lit_Point_List	game_mode_lit.h	/^struct Lit_Point_List {$/;"	s	language:C++
lit_push_edge	code/game_mode_lit.h	/^lit_push_edge(Lit* m, F32 min_x, F32 min_y, F32 max_x, F32 max_y) {$/;"	f	language:C++	typeref:typename:Lit_Edge *
lit_push_edge	code/game_mode_sb1.h	/^lit_push_edge(Lit* m, UMI min_pt_id, UMI max_pt_id) {$/;"	f	language:C++	typeref:typename:Lit_Edge *
lit_push_edge	game_mode_lit.h	/^lit_push_edge(Lit* m, UMI min_pt_id, UMI max_pt_id) {$/;"	f	language:C++	typeref:typename:Lit_Edge *
lit_push_light	code/game_mode_lit.h	/^lit_push_light(Lit* m, F32 pos_x, F32 pos_y, U32 color, F32 angle, F32 turn) {$/;"	f	language:C++	typeref:typename:Lit_Light *
lit_push_light	code/game_mode_sb1.h	/^lit_push_light(Lit* m, V2 pos, U32 color, F32 angle, F32 facing) {$/;"	f	language:C++	typeref:typename:Lit_Light *
lit_push_light	game_mode_lit.h	/^lit_push_light(Lit* m, V2 pos, U32 color, F32 angle, F32 facing) {$/;"	f	language:C++	typeref:typename:Lit_Light *
lit_push_point	code/game_mode_sb1.h	/^lit_push_point(Lit* m, V2 pt) {$/;"	f	language:C++	typeref:typename:U32
lit_push_point	game_mode_lit.h	/^lit_push_point(Lit* m, V2 pt) {$/;"	f	language:C++	typeref:typename:U32
lit_push_sensor	code/game_mode_lit_sensors.h	/^lit_push_sensor(Lit_Sensor_List* sensors, F32 pos_x, F32 pos_y, U32 target_color) $/;"	f	language:C++	typeref:typename:void
lit_push_sensor	code/game_mode_sb1.h	/^lit_push_sensor(Lit* m, V2 pos, U32 target_color) $/;"	f	language:C++	typeref:typename:void
lit_push_sensor	game_mode_lit_sensors.h	/^lit_push_sensor(Lit_Sensor_List* sensors, V2 pos, U32 target_color) $/;"	f	language:C++	typeref:typename:void
lit_push_triangle	code/game_mode_lit_light.h	/^lit_push_triangle(Lit_Light* l, V2 p0, V2 p1, V2 p2, U32 color) {$/;"	f	language:C++	typeref:typename:void
lit_push_triangle	game_mode_lit_light.h	/^lit_push_triangle(Lit_Light* l, V2 p0, V2 p1, V2 p2, U32 color) {$/;"	f	language:C++	typeref:typename:void
lit_render_particles	code/game_mode_lit_particles.h	/^lit_render_particles(Lit_Particle_Pool* ps, Painter* painter) {$/;"	f	language:C++	typeref:typename:void
lit_render_particles	game_mode_lit_particles.h	/^lit_render_particles(Lit_Particle_Pool* ps, Painter* painter) {$/;"	f	language:C++	typeref:typename:void
lit_render_sensors	code/game_mode_lit_sensors.h	/^lit_render_sensors(Lit_Sensor_List* sensors, Painter* painter) {$/;"	f	language:C++	typeref:typename:void
lit_render_sensors	game_mode_lit_sensors.h	/^lit_render_sensors(Lit_Sensor_List* sensors, Painter* painter) {$/;"	f	language:C++	typeref:typename:void
Lit_Sensor	code/game_mode_lit_sensors.h	/^struct Lit_Sensor {$/;"	s	language:C++
Lit_Sensor	game_mode_lit_sensors.h	/^struct Lit_Sensor {$/;"	s	language:C++
LIT_SENSOR_COLOR_MASK	code/game_mode_lit_sensors.h	/^#define LIT_SENSOR_COLOR_MASK /;"	d	language:C++
LIT_SENSOR_COLOR_MASK	game_mode_lit_sensors.h	/^#define LIT_SENSOR_COLOR_MASK /;"	d	language:C++
Lit_Sensor_List	code/game_mode_lit_sensors.h	/^struct Lit_Sensor_List {$/;"	s	language:C++
Lit_Sensor_List	game_mode_lit_sensors.h	/^struct Lit_Sensor_List {$/;"	s	language:C++
LIT_SENSOR_PARTICLE_CD	code/game_mode_lit_sensors.h	/^#define LIT_SENSOR_PARTICLE_CD /;"	d	language:C++
LIT_SENSOR_PARTICLE_CD	game_mode_lit_sensors.h	/^#define LIT_SENSOR_PARTICLE_CD /;"	d	language:C++
LIT_SENSOR_RADIUS	code/game_mode_lit_sensors.h	/^#define LIT_SENSOR_RADIUS /;"	d	language:C++
LIT_SENSOR_RADIUS	game_mode_lit_sensors.h	/^#define LIT_SENSOR_RADIUS /;"	d	language:C++
lit_set_win_point	code/game_mode_sb1.h	/^lit_set_win_point(Lit* m, V2 pos) {$/;"	f	language:C++	typeref:typename:void
lit_spawn_particle	code/game_mode_lit_particles.h	/^lit_spawn_particle(Lit_Particle_Pool* ps,$/;"	f	language:C++	typeref:typename:void
lit_spawn_particle	game_mode_lit_particles.h	/^lit_spawn_particle(Lit_Particle_Pool* ps,$/;"	f	language:C++	typeref:typename:void
Lit_State_Type	code/game_mode_lit.h	/^} Lit_State_Type;$/;"	t	language:C++	typeref:enum:__anonfc57340b0103
Lit_State_Type	game_mode_lit.h	/^enum Lit_State_Type {$/;"	g	language:C++
LIT_STATE_TYPE_NORMAL	code/game_mode_lit.h	/^  LIT_STATE_TYPE_NORMAL,$/;"	e	language:C++	enum:__anonfc57340b0103
LIT_STATE_TYPE_NORMAL	game_mode_lit.h	/^  LIT_STATE_TYPE_NORMAL,$/;"	e	language:C++	enum:Lit_State_Type
LIT_STATE_TYPE_TRANSITION_IN	code/game_mode_lit.h	/^  LIT_STATE_TYPE_TRANSITION_IN,$/;"	e	language:C++	enum:__anonfc57340b0103
LIT_STATE_TYPE_TRANSITION_IN	game_mode_lit.h	/^  LIT_STATE_TYPE_TRANSITION_IN,$/;"	e	language:C++	enum:Lit_State_Type
LIT_STATE_TYPE_TRANSITION_OUT	code/game_mode_lit.h	/^  LIT_STATE_TYPE_TRANSITION_OUT,$/;"	e	language:C++	enum:__anonfc57340b0103
LIT_STATE_TYPE_TRANSITION_OUT	game_mode_lit.h	/^  LIT_STATE_TYPE_TRANSITION_OUT,$/;"	e	language:C++	enum:Lit_State_Type
lit_tick	code/game_mode_lit.h	/^lit_tick(Game* game, Painter* painter, Platform* pf) $/;"	f	language:C++	typeref:typename:void
lit_tick	code/game_mode_sb1.h	/^lit_tick(Game* game,$/;"	f	language:C++	typeref:typename:void
lit_tick	game_mode_lit.h	/^lit_tick(Game* game, Painter* painter, Platform* pf) $/;"	f	language:C++	typeref:typename:void
lit_update_particles	code/game_mode_lit_particles.h	/^lit_update_particles(Lit_Particle_Pool* ps, F32 dt) {$/;"	f	language:C++	typeref:typename:void
lit_update_particles	game_mode_lit_particles.h	/^lit_update_particles(Lit_Particle_Pool* ps, F32 dt) {$/;"	f	language:C++	typeref:typename:void
lit_update_player	code/game_mode_lit_player.h	/^lit_update_player(Lit_Player* player, $/;"	f	language:C++	typeref:typename:void
lit_update_player	game_mode_lit_player.h	/^lit_update_player(Lit_Player* player, $/;"	f	language:C++	typeref:typename:void
lit_update_sensors	code/game_mode_lit_sensors.h	/^lit_update_sensors(Lit_Sensor_List* sensors, $/;"	f	language:C++	typeref:typename:void
lit_update_sensors	game_mode_lit_sensors.h	/^lit_update_sensors(Lit_Sensor_List* sensors, $/;"	f	language:C++	typeref:typename:void
load	code/win_renderer.h	/^  Win_Gfx_Load* load;$/;"	m	language:C++	struct:Win_Gfx_Functions	typeref:typename:Win_Gfx_Load *
load_game_assets	code/game_assets.h	/^load_game_assets(Game_Assets* ga, $/;"	f	language:C++	typeref:typename:B32
load_game_assets	game_assets.h	/^load_game_assets(Game_Assets* ga, $/;"	f	language:C++	typeref:typename:B32
loca	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
loca	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
loca_format	code/momo_ttf.h	/^  U16 loca_format;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U16
loca_format	momo_ttf.h	/^  U16 loca_format;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U16
m0	test.c	/^    float m0, m4, m8, m12;      \/\/ Matrix first row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m1	test.c	/^    float m1, m5, m9, m13;      \/\/ Matrix second row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m10	test.c	/^    float m2, m6, m10, m14;     \/\/ Matrix third row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m11	test.c	/^    float m3, m7, m11, m15;     \/\/ Matrix fourth row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m12	test.c	/^    float m0, m4, m8, m12;      \/\/ Matrix first row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m13	test.c	/^    float m1, m5, m9, m13;      \/\/ Matrix second row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m14	test.c	/^    float m2, m6, m10, m14;     \/\/ Matrix third row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m15	test.c	/^    float m3, m7, m11, m15;     \/\/ Matrix fourth row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m2	test.c	/^    float m2, m6, m10, m14;     \/\/ Matrix third row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m3	test.c	/^    float m3, m7, m11, m15;     \/\/ Matrix fourth row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m4	test.c	/^    float m0, m4, m8, m12;      \/\/ Matrix first row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
M44	code/momo_matrix.h	/^}M44;$/;"	t	language:C++	typeref:struct:__anond05d59510108
M44	momo_matrix.h	/^}M44;$/;"	t	language:C++	typeref:struct:__anon0eed7b670108
m44_concat	code/momo_matrix.h	/^static M44 m44_concat(M44 lhs, M44 rhs) {$/;"	f	language:C++	typeref:typename:M44
m44_concat	code/momo_matrix.h	/^static M44 m44_concat(M44 lhs, M44 rhs);$/;"	p	language:C++	typeref:typename:M44
m44_concat	momo_matrix.h	/^static M44 m44_concat(M44 lhs, M44 rhs) {$/;"	f	language:C++	typeref:typename:M44
m44_concat	momo_matrix.h	/^static M44 m44_concat(M44 lhs, M44 rhs);$/;"	p	language:C++	typeref:typename:M44
m44_frustum	code/momo_matrix.h	/^static M44 m44_frustum(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far) {$/;"	f	language:C++	typeref:typename:M44
m44_frustum	code/momo_matrix.h	/^static M44 m44_frustum(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_frustum	momo_matrix.h	/^static M44 m44_frustum(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far) {$/;"	f	language:C++	typeref:typename:M44
m44_frustum	momo_matrix.h	/^static M44 m44_frustum(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_identity	code/momo_matrix.h	/^static M44 m44_identity() {$/;"	f	language:C++	typeref:typename:M44
m44_identity	code/momo_matrix.h	/^static M44 m44_identity();$/;"	p	language:C++	typeref:typename:M44
m44_identity	momo_matrix.h	/^static M44 m44_identity() {$/;"	f	language:C++	typeref:typename:M44
m44_identity	momo_matrix.h	/^static M44 m44_identity();$/;"	p	language:C++	typeref:typename:M44
m44_orthographic	code/momo_matrix.h	/^static M44 m44_orthographic(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far) {$/;"	f	language:C++	typeref:typename:M44
m44_orthographic	code/momo_matrix.h	/^static M44 m44_orthographic(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_orthographic	momo_matrix.h	/^static M44 m44_orthographic(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far) {$/;"	f	language:C++	typeref:typename:M44
m44_orthographic	momo_matrix.h	/^static M44 m44_orthographic(F32 left, F32 right, F32 bottom, F32 top, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_perspective	code/momo_matrix.h	/^static M44 m44_perspective(F32 fov, F32 aspect, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_perspective	code/momo_matrix.h	/^static M44 m44_perspective(F32 fov, F32 aspect, F32 near, F32 far){$/;"	f	language:C++	typeref:typename:M44
m44_perspective	momo_matrix.h	/^static M44 m44_perspective(F32 fov, F32 aspect, F32 near, F32 far);$/;"	p	language:C++	typeref:typename:M44
m44_perspective	momo_matrix.h	/^static M44 m44_perspective(F32 fov, F32 aspect, F32 near, F32 far){$/;"	f	language:C++	typeref:typename:M44
m44_rotation_x	code/momo_matrix.h	/^static M44 m44_rotation_x(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_x	code/momo_matrix.h	/^static M44 m44_rotation_x(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_rotation_x	momo_matrix.h	/^static M44 m44_rotation_x(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_x	momo_matrix.h	/^static M44 m44_rotation_x(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_rotation_y	code/momo_matrix.h	/^static M44 m44_rotation_y(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_y	code/momo_matrix.h	/^static M44 m44_rotation_y(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_rotation_y	momo_matrix.h	/^static M44 m44_rotation_y(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_y	momo_matrix.h	/^static M44 m44_rotation_y(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_rotation_z	code/momo_matrix.h	/^static M44 m44_rotation_z(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_z	code/momo_matrix.h	/^static M44 m44_rotation_z(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_rotation_z	momo_matrix.h	/^static M44 m44_rotation_z(F32 rad) {$/;"	f	language:C++	typeref:typename:M44
m44_rotation_z	momo_matrix.h	/^static M44 m44_rotation_z(F32 radians);$/;"	p	language:C++	typeref:typename:M44
m44_scale	code/momo_matrix.h	/^static M44 m44_scale(F32 x, F32 y, F32 z = 1.f) {$/;"	f	language:C++	typeref:typename:M44
m44_scale	code/momo_matrix.h	/^static M44 m44_scale(F32 x, F32 y, F32 z);$/;"	p	language:C++	typeref:typename:M44
m44_scale	momo_matrix.h	/^static M44 m44_scale(F32 x, F32 y, F32 z = 1.f) {$/;"	f	language:C++	typeref:typename:M44
m44_scale	momo_matrix.h	/^static M44 m44_scale(F32 x, F32 y, F32 z);$/;"	p	language:C++	typeref:typename:M44
m44_translation	code/momo_matrix.h	/^static M44 m44_translation(F32 x, F32 y, F32 z = 0.f) {$/;"	f	language:C++	typeref:typename:M44
m44_translation	code/momo_matrix.h	/^static M44 m44_translation(F32 x, F32 y, F32 z);$/;"	p	language:C++	typeref:typename:M44
m44_translation	momo_matrix.h	/^static M44 m44_translation(F32 x, F32 y, F32 z = 0.f) {$/;"	f	language:C++	typeref:typename:M44
m44_translation	momo_matrix.h	/^static M44 m44_translation(F32 x, F32 y, F32 z);$/;"	p	language:C++	typeref:typename:M44
m44_transpose	code/momo_matrix.h	/^static M44 m44_transpose(M44 m) {$/;"	f	language:C++	typeref:typename:M44
m44_transpose	code/momo_matrix.h	/^static M44 m44_transpose(M44 m);$/;"	p	language:C++	typeref:typename:M44
m44_transpose	momo_matrix.h	/^static M44 m44_transpose(M44 m) {$/;"	f	language:C++	typeref:typename:M44
m44_transpose	momo_matrix.h	/^static M44 m44_transpose(M44 m);$/;"	p	language:C++	typeref:typename:M44
m5	test.c	/^    float m1, m5, m9, m13;      \/\/ Matrix second row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m6	test.c	/^    float m2, m6, m10, m14;     \/\/ Matrix third row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m7	test.c	/^    float m3, m7, m11, m15;     \/\/ Matrix fourth row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m8	test.c	/^    float m0, m4, m8, m12;      \/\/ Matrix first row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
m9	test.c	/^    float m1, m5, m9, m13;      \/\/ Matrix second row (4 components)$/;"	m	language:C	struct:Matrix	typeref:typename:float	file:
main	build/meta_test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	code/json_test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	code/meta.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	code/sui.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	code/test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	json_test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	meta.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	sui.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
main	test.cpp	/^int main() {$/;"	f	language:C++	typeref:typename:int
make	code/momo_common.h	/^#define make(/;"	d	language:C++
make	momo_common.h	/^#define make(/;"	d	language:C++
Matrix	test.c	/^typedef struct Matrix {$/;"	s	language:C	file:
Matrix	test.c	/^} Matrix;$/;"	t	language:C	typeref:struct:Matrix	file:
max	code/game_profiler_rendering.h	/^  F64 max;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
max	code/momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon484784200108	typeref:typename:V2
max	code/momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon484784200708	typeref:typename:V2
max	code/momo_shapes.h	/^  V2S min, max;$/;"	m	language:C++	struct:__anon484784200208	typeref:typename:V2S
max	code/momo_shapes.h	/^  V2U min, max;$/;"	m	language:C++	struct:__anon484784200308	typeref:typename:V2U
max	code/momo_shapes.h	/^  V3 min, max;$/;"	m	language:C++	struct:__anon484784200408	typeref:typename:V3
max	game_profiler_rendering.h	/^  F64 max;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
max	momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon86d7a6360108	typeref:typename:V2
max	momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon86d7a6360708	typeref:typename:V2
max	momo_shapes.h	/^  V2S min, max;$/;"	m	language:C++	struct:__anon86d7a6360208	typeref:typename:V2S
max	momo_shapes.h	/^  V2U min, max;$/;"	m	language:C++	struct:__anon86d7a6360308	typeref:typename:V2U
max	momo_shapes.h	/^  V3 min, max;$/;"	m	language:C++	struct:__anon86d7a6360408	typeref:typename:V3
MAX	test.c	/^        #define MAX(/;"	d	language:C	file:
maxAnisotropyLevel	test.c	/^        float maxAnisotropyLevel;           \/\/ Maximum anisotropy level supported (minimum is /;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:float	file:
maxDepthBits	test.c	/^        int maxDepthBits;                   \/\/ Maximum bits for depth component$/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:int	file:
maxp	code/momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon54d1bdca0108	typeref:typename:U32
maxp	momo_ttf.h	/^  U32 loca, head, glyf, maxp, cmap, hhea, hmtx, kern, gpos;$/;"	m	language:C++	struct:__anon4eb927a00108	typeref:typename:U32
max_of	code/momo_common.h	/^#define max_of(/;"	d	language:C++
max_of	momo_common.h	/^#define max_of(/;"	d	language:C++
max_pt_id	.\code\game_sb1.h	/^  UMI max_pt_id;$/;"	m	language:C++	struct:SB1_Edge
max_pt_id	code/game_mode_level.h	/^  UMI max_pt_id;$/;"	m	language:C++	struct:Edge	typeref:typename:UMI
max_pt_id	code/game_mode_sb1.h	/^  UMI max_pt_id;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:UMI
max_pt_id	game_mode_lit.h	/^  UMI max_pt_id;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:UMI
max_x	code/game_gfx.h	/^  F32 min_x, max_x;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
max_y	code/game_gfx.h	/^  F32 min_y, max_y;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
MB	code/momo_common.h	/^#define MB(/;"	d	language:C++
MB	momo_common.h	/^#define MB(/;"	d	language:C++
memory	code/game_gfx.h	/^	U8* memory;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:U8 *
memory	code/game_renderer.h	/^	U8* memory;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:U8 *
memory	code/momo_memory.h	/^	U8* memory;$/;"	m	language:C++	struct:__anonf3c0da150108	typeref:typename:U8 *
memory	game_gfx.h	/^	U8* memory;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:U8 *
memory	momo_memory.h	/^	U8* memory;$/;"	m	language:C++	struct:__anon3250fc2b0108	typeref:typename:U8 *
memory_size	code/game_gfx.h	/^  UMI memory_size;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
memory_size	code/game_renderer.h	/^  UMI memory_size;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
memory_size	game_gfx.h	/^  UMI memory_size;$/;"	m	language:C++	struct:Gfx_Command_Queue	typeref:typename:UMI
meta_compare_token_with_string	code/meta.cpp	/^meta_compare_token_with_string(Meta_Tokenizer* t, Meta_Token token, String str) {$/;"	f	language:C++	typeref:typename:B32	file:
meta_compare_token_with_string	meta.cpp	/^meta_compare_token_with_string(Meta_Tokenizer* t, Meta_Token token, String str) {$/;"	f	language:C++	typeref:typename:B32	file:
meta_eat_ignorables	code/meta.cpp	/^meta_eat_ignorables(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_eat_ignorables	meta.cpp	/^meta_eat_ignorables(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_next_token	code/meta.cpp	/^meta_next_token(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:Meta_Token	file:
meta_next_token	meta.cpp	/^meta_next_token(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:Meta_Token	file:
meta_print_token	code/meta.cpp	/^meta_print_token(Meta_Tokenizer* t, Meta_Token token)  {$/;"	f	language:C++	typeref:typename:void	file:
meta_print_token	meta.cpp	/^meta_print_token(Meta_Tokenizer* t, Meta_Token token)  {$/;"	f	language:C++	typeref:typename:void	file:
Meta_Token	code/meta.cpp	/^struct Meta_Token {$/;"	s	language:C++	file:
Meta_Token	meta.cpp	/^struct Meta_Token {$/;"	s	language:C++	file:
Meta_Tokenizer	code/meta.cpp	/^struct Meta_Tokenizer {$/;"	s	language:C++	file:
Meta_Tokenizer	meta.cpp	/^struct Meta_Tokenizer {$/;"	s	language:C++	file:
meta_tokenizer_free	code/meta.cpp	/^meta_tokenizer_free(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_tokenizer_free	meta.cpp	/^meta_tokenizer_free(Meta_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void	file:
meta_tokenizer_init	code/meta.cpp	/^meta_tokenizer_init(Meta_Tokenizer* t, const char* filename) {$/;"	f	language:C++	typeref:typename:B32	file:
meta_tokenizer_init	meta.cpp	/^meta_tokenizer_init(Meta_Tokenizer* t, const char* filename) {$/;"	f	language:C++	typeref:typename:B32	file:
Meta_Token_Type	code/meta.cpp	/^enum Meta_Token_Type {$/;"	g	language:C++	file:
Meta_Token_Type	meta.cpp	/^enum Meta_Token_Type {$/;"	g	language:C++	file:
META_TOKEN_TYPE_CLOSE_BRACE	code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_BRACE	meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_BRACKET	code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_BRACKET	meta.cpp	/^  META_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_PAREN	code/meta.cpp	/^  META_TOKEN_TYPE_CLOSE_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_CLOSE_PAREN	meta.cpp	/^  META_TOKEN_TYPE_CLOSE_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_COLON	code/meta.cpp	/^  META_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_COLON	meta.cpp	/^  META_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_EOF	code/meta.cpp	/^  META_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_EOF	meta.cpp	/^  META_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_IDENTIFIER	code/meta.cpp	/^  META_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_IDENTIFIER	meta.cpp	/^  META_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_MACRO	code/meta.cpp	/^  META_TOKEN_TYPE_MACRO,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_MACRO	meta.cpp	/^  META_TOKEN_TYPE_MACRO,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_NUMBER	code/meta.cpp	/^  META_TOKEN_TYPE_NUMBER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_NUMBER	meta.cpp	/^  META_TOKEN_TYPE_NUMBER,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACE	code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACE	meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACKET	code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_BRACKET	meta.cpp	/^  META_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_PAREN	code/meta.cpp	/^  META_TOKEN_TYPE_OPEN_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_OPEN_PAREN	meta.cpp	/^  META_TOKEN_TYPE_OPEN_PAREN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_SEMICOLON	code/meta.cpp	/^  META_TOKEN_TYPE_SEMICOLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_SEMICOLON	meta.cpp	/^  META_TOKEN_TYPE_SEMICOLON,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_STRING	code/meta.cpp	/^  META_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_STRING	meta.cpp	/^  META_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_UNKNOWN	code/meta.cpp	/^  META_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
META_TOKEN_TYPE_UNKNOWN	meta.cpp	/^  META_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:Meta_Token_Type	file:
meta_update_profiler_codegen	code/meta.cpp	/^meta_update_profiler_codegen(Profiler_Codegen* p, Meta_Tokenizer* t, Meta_Token token) {$/;"	f	language:C++	typeref:typename:void	file:
meta_update_profiler_codegen	meta.cpp	/^meta_update_profiler_codegen(Profiler_Codegen* p, Meta_Tokenizer* t, Meta_Token token) {$/;"	f	language:C++	typeref:typename:void	file:
min	code/game_profiler_rendering.h	/^  F64 min;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
min	code/momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon484784200108	typeref:typename:V2
min	code/momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon484784200708	typeref:typename:V2
min	code/momo_shapes.h	/^  V2S min, max;$/;"	m	language:C++	struct:__anon484784200208	typeref:typename:V2S
min	code/momo_shapes.h	/^  V2U min, max;$/;"	m	language:C++	struct:__anon484784200308	typeref:typename:V2U
min	code/momo_shapes.h	/^  V3 min, max;$/;"	m	language:C++	struct:__anon484784200408	typeref:typename:V3
min	game_profiler_rendering.h	/^  F64 min;$/;"	m	language:C++	struct:Stat	typeref:typename:F64
min	momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon86d7a6360108	typeref:typename:V2
min	momo_shapes.h	/^  V2 min, max;$/;"	m	language:C++	struct:__anon86d7a6360708	typeref:typename:V2
min	momo_shapes.h	/^  V2S min, max;$/;"	m	language:C++	struct:__anon86d7a6360208	typeref:typename:V2S
min	momo_shapes.h	/^  V2U min, max;$/;"	m	language:C++	struct:__anon86d7a6360308	typeref:typename:V2U
min	momo_shapes.h	/^  V3 min, max;$/;"	m	language:C++	struct:__anon86d7a6360408	typeref:typename:V3
MIN	test.c	/^        #define MIN(/;"	d	language:C	file:
min_of	code/momo_common.h	/^#define min_of(/;"	d	language:C++
min_of	momo_common.h	/^#define min_of(/;"	d	language:C++
min_pt_id	.\code\game_sb1.h	/^  UMI min_pt_id;$/;"	m	language:C++	struct:SB1_Edge
min_pt_id	code/game_mode_level.h	/^  UMI min_pt_id;$/;"	m	language:C++	struct:Edge	typeref:typename:UMI
min_pt_id	code/game_mode_sb1.h	/^  UMI min_pt_id;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:UMI
min_pt_id	game_mode_lit.h	/^  UMI min_pt_id;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:UMI
min_x	code/game_gfx.h	/^  F32 min_x, max_x;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
min_y	code/game_gfx.h	/^  F32 min_y, max_y;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
mm_device_enum	code/w32_audio_wasapi.h	/^  IMMDeviceEnumerator * mm_device_enum;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IMMDeviceEnumerator *
mm_device_enum	code/win_audio_wasapi.h	/^  IMMDeviceEnumerator * mm_device_enum;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IMMDeviceEnumerator *
mm_device_enum	w32_audio_wasapi.h	/^  IMMDeviceEnumerator * mm_device_enum;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:IMMDeviceEnumerator *
mode	test.c	/^    int mode;                   \/\/ Drawing mode: LINES, TRIANGLES, QUADS$/;"	m	language:C	struct:rlDrawCall	typeref:typename:int	file:
model	code/game_gfx_opengl.h	/^  GLuint model; $/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLuint
model	code/game_gfx_opengl.h	/^  GLuint model;$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLuint
model	code/game_renderer_opengl.h	/^  GLuint model; $/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLuint
model	code/game_renderer_opengl.h	/^  GLuint model;$/;"	m	language:C++	struct:Triangle_Batcher	typeref:typename:GLuint
model	game_gfx_opengl.h	/^  GLuint model; $/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLuint
model	game_gfx_opengl.h	/^  GLuint model;$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLuint
modelview	test.c	/^        Matrix modelview;                   \/\/ Default modelview matrix$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix	file:
mode_arena	code/game.h	/^  Bump_Allocator mode_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
mode_arena	game.h	/^  Bump_Allocator mode_arena;$/;"	m	language:C++	struct:Game	typeref:typename:Bump_Allocator
mode_context	code/game.h	/^  void* mode_context;$/;"	m	language:C++	struct:Game	typeref:typename:void *
mode_context	game.h	/^  void* mode_context;$/;"	m	language:C++	struct:Game	typeref:typename:void *
mode_display_timer	code/game_mode_level_editor.h	/^  F32 mode_display_timer;$/;"	m	language:C++	struct:Editor	typeref:typename:F32
mode_display_timer	game_mode_level_editor.h	/^  F32 mode_display_timer;$/;"	m	language:C++	struct:Editor	typeref:typename:F32
mode_type	code/game_mode_computer.h	/^  Game_Mode_Type mode_type;$/;"	m	language:C++	struct:__anond0a24e910108	typeref:typename:Game_Mode_Type
mode_type	game_mode_computer.h	/^  Game_Mode_Type mode_type;$/;"	m	language:C++	struct:__anon19207be70108	typeref:typename:Game_Mode_Type
module_path	code/w32_loaded_code.h	/^  const char* module_path;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:const char *
module_path	code/win_loaded_code.h	/^  const char* module_path;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char *
module_path	w32_loaded_code.h	/^  const char* module_path;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char *
module_write_time	code/w32_loaded_code.h	/^  LARGE_INTEGER module_write_time;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:LARGE_INTEGER
module_write_time	code/win_loaded_code.h	/^  LARGE_INTEGER module_write_time;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:LARGE_INTEGER
module_write_time	w32_loaded_code.h	/^  LARGE_INTEGER module_write_time;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:LARGE_INTEGER
MOMO_COLORS_H	code/momo_colors.h	/^#define MOMO_COLORS_H$/;"	d	language:C++
MOMO_COLORS_H	momo_colors.h	/^#define MOMO_COLORS_H$/;"	d	language:C++
MOMO_COMMON_CPP_H	code/momo_common_cpp.h	/^#define MOMO_COMMON_CPP_H$/;"	d	language:C++
MOMO_COMMON_CPP_H	momo_common_cpp.h	/^#define MOMO_COMMON_CPP_H$/;"	d	language:C++
MOMO_COMMON_H	code/momo_common.h	/^#define MOMO_COMMON_H$/;"	d	language:C++
MOMO_COMMON_H	momo_common.h	/^#define MOMO_COMMON_H$/;"	d	language:C++
MOMO_CRC_H	code/momo_crc.h	/^#define MOMO_CRC_H$/;"	d	language:C++
MOMO_CRC_H	momo_crc.h	/^#define MOMO_CRC_H$/;"	d	language:C++
MOMO_EASING_H	code/momo_easing.h	/^#define MOMO_EASING_H$/;"	d	language:C++
MOMO_EASING_H	momo_easing.h	/^#define MOMO_EASING_H$/;"	d	language:C++
MOMO_H	code/momo.h	/^#define MOMO_H$/;"	d	language:C++
MOMO_H	momo.h	/^#define MOMO_H$/;"	d	language:C++
MOMO_IMAGE_H	code/momo_image.h	/^#define MOMO_IMAGE_H$/;"	d	language:C++
MOMO_IMAGE_H	momo_image.h	/^#define MOMO_IMAGE_H$/;"	d	language:C++
MOMO_INTRINSICS_H	code/momo_intrinsics.h	/^#define MOMO_INTRINSICS_H$/;"	d	language:C++
MOMO_INTRINSICS_H	momo_intrinsics.h	/^#define MOMO_INTRINSICS_H$/;"	d	language:C++
MOMO_JSON	code/momo_json.h	/^#define MOMO_JSON$/;"	d	language:C++
MOMO_JSON	momo_json.h	/^#define MOMO_JSON$/;"	d	language:C++
MOMO_LISTS_H	code/momo_lists.h	/^#define MOMO_LISTS_H$/;"	d	language:C++
MOMO_LISTS_H	momo_lists.h	/^#define MOMO_LISTS_H$/;"	d	language:C++
MOMO_MATRIX_H	code/momo_matrix.h	/^#define MOMO_MATRIX_H$/;"	d	language:C++
MOMO_MATRIX_H	momo_matrix.h	/^#define MOMO_MATRIX_H$/;"	d	language:C++
MOMO_MEMORY_H	code/momo_memory.h	/^#define MOMO_MEMORY_H$/;"	d	language:C++
MOMO_MEMORY_H	momo_memory.h	/^#define MOMO_MEMORY_H$/;"	d	language:C++
MOMO_OS_H	code/momo_os.h	/^#define MOMO_OS_H$/;"	d	language:C++
MOMO_OS_H	momo_os.h	/^#define MOMO_OS_H$/;"	d	language:C++
MOMO_PNG	code/momo_png.h	/^#define MOMO_PNG$/;"	d	language:C++
MOMO_PNG	momo_png.h	/^#define MOMO_PNG$/;"	d	language:C++
MOMO_RANDOM_H	code/momo_rng.h	/^#define MOMO_RANDOM_H$/;"	d	language:C++
MOMO_RANDOM_H	momo_rng.h	/^#define MOMO_RANDOM_H$/;"	d	language:C++
MOMO_RECT_PACK_H	code/momo_rect_pack.h	/^#define MOMO_RECT_PACK_H$/;"	d	language:C++
MOMO_RECT_PACK_H	momo_rect_pack.h	/^#define MOMO_RECT_PACK_H$/;"	d	language:C++
MOMO_SHAPES_H	code/momo_shapes.h	/^#define MOMO_SHAPES_H$/;"	d	language:C++
MOMO_SHAPES_H	momo_shapes.h	/^#define MOMO_SHAPES_H$/;"	d	language:C++
MOMO_SORT_H	code/momo_sort.h	/^#define MOMO_SORT_H$/;"	d	language:C++
MOMO_SORT_H	momo_sort.h	/^#define MOMO_SORT_H$/;"	d	language:C++
MOMO_STREAM_H	code/momo_streams.h	/^#define MOMO_STREAM_H$/;"	d	language:C++
MOMO_STREAM_H	momo_streams.h	/^#define MOMO_STREAM_H$/;"	d	language:C++
MOMO_STRING_H	code/momo_strings.h	/^#define MOMO_STRING_H$/;"	d	language:C++
MOMO_STRING_H	momo_strings.h	/^#define MOMO_STRING_H$/;"	d	language:C++
MOMO_TTF_H	code/momo_ttf.h	/^#define MOMO_TTF_H$/;"	d	language:C++
MOMO_TTF_H	momo_ttf.h	/^#define MOMO_TTF_H$/;"	d	language:C++
MOMO_VECTOR_H	code/momo_vectors.h	/^#define MOMO_VECTOR_H$/;"	d	language:C++
MOMO_VECTOR_H	momo_vectors.h	/^#define MOMO_VECTOR_H$/;"	d	language:C++
MOMO_WAV_H	code/momo_wav.h	/^#define MOMO_WAV_H$/;"	d	language:C++
MOMO_WAV_H	momo_wav.h	/^#define MOMO_WAV_H$/;"	d	language:C++
more_obj	build/test_json.json	/^    "more_obj": {$/;"	o	language:JSON	object:obj
name	build/test_json.json	/^  "name":"John", $/;"	s	language:JSON
name	code/game_inspector.h	/^  String8 name;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:String8
name	code/test_json.json	/^{"name":"John", "age":30, "car":null}$/;"	s	language:JSON
name	game_inspector.h	/^  String8 name;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:String8
next	code/game_profiler.h	/^  Profiler_Entry* next;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:Profiler_Entry *
next	code/momo_json.h	/^  struct _JSON_Array_Node* next;$/;"	m	language:C++	struct:_JSON_Array_Node	typeref:struct:_JSON_Array_Node *
next	game_profiler.h	/^  Profiler_Entry* next;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:Profiler_Entry *
next	momo_json.h	/^  struct _JSON_Array_Node* next;$/;"	m	language:C++	struct:_JSON_Array_Node	typeref:struct:_JSON_Array_Node *
next_entry_to_read	code/w32.cpp	/^  U32 volatile next_entry_to_read;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
next_entry_to_read	code/win.cpp	/^  U32 volatile next_entry_to_read;$/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:U32 volatile	file:
next_entry_to_read	w32.cpp	/^  U32 volatile next_entry_to_read;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
next_entry_to_write	code/w32.cpp	/^  U32 volatile next_entry_to_write;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
next_entry_to_write	code/win.cpp	/^  U32 volatile next_entry_to_write;$/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:U32 volatile	file:
next_entry_to_write	w32.cpp	/^  U32 volatile next_entry_to_write;$/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:U32 volatile	file:
next_obj	build/test_json.json	/^  "next_obj": {$/;"	o	language:JSON
next_state	code/game_mode_level_editor.h	/^  Editor_State next_state;$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_State
next_state	game_mode_level_editor.h	/^  Editor_State next_state;$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_State
node	code/momo_json.h	/^  struct _JSON_Object_Node* node;$/;"	m	language:C++	struct:__anond7a9c0d60108	typeref:struct:_JSON_Object_Node *
node	momo_json.h	/^  struct _JSON_Object_Node* node;$/;"	m	language:C++	struct:__anon0e7e656c0108	typeref:struct:_JSON_Object_Node *
NOMINMAX	code/w32.h	/^#define NOMINMAX$/;"	d	language:C++
NOMINMAX	code/win.h	/^#define NOMINMAX$/;"	d	language:C++
NOMINMAX	w32.h	/^#define NOMINMAX$/;"	d	language:C++
normalx	test.c	/^        float normalx, normaly, normalz;    \/\/ Current active normal (added on glVertex*())$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:float	file:
normaly	test.c	/^        float normalx, normaly, normalz;    \/\/ Current active normal (added on glVertex*())$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:float	file:
normalz	test.c	/^        float normalx, normaly, normalz;    \/\/ Current active normal (added on glVertex*())$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:float	file:
notifs	code/w32_audio_wasapi.h	/^  Win_Wasapi_Notif_Client notifs;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Win_Wasapi_Notif_Client
notifs	code/win_audio_wasapi.h	/^  Win_Wasapi_Notif_Client notifs;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Win_Wasapi_Notif_Client
notifs	w32_audio_wasapi.h	/^  Win_Wasapi_Notif_Client notifs;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Win_Wasapi_Notif_Client
now	code/game_platform.h	/^  B32 now; $/;"	m	language:C++	struct:Platform_Button	typeref:typename:B32
now	game_platform.h	/^  B32 now; $/;"	m	language:C++	struct:Platform_Button	typeref:typename:B32
ns_begin	code/momo_common.h	/^# define ns_begin(/;"	d	language:C++
ns_begin	momo_common.h	/^# define ns_begin(/;"	d	language:C++
ns_end	code/momo_common.h	/^# define ns_end(/;"	d	language:C++
ns_end	momo_common.h	/^# define ns_end(/;"	d	language:C++
null	code/momo_common.h	/^# define null /;"	d	language:C++
null	momo_common.h	/^# define null /;"	d	language:C++
num_channels	code/momo_wav.h	/^  U16 num_channels;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U16
num_channels	momo_wav.h	/^  U16 num_channels;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U16
obj	build/test_json.json	/^  "obj": { $/;"	o	language:JSON
obj	code/momo_json.h	/^    JSON_Object obj;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:JSON_Object
obj	momo_json.h	/^    JSON_Object obj;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:JSON_Object
offset_of	code/momo_common.h	/^#define offset_of(/;"	d	language:C++
offset_of	momo_common.h	/^#define offset_of(/;"	d	language:C++
offset_to_bitmaps	code/karu.h	/^  U32 offset_to_bitmaps;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_bitmaps	karu.h	/^  U32 offset_to_bitmaps;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_data	code/karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
offset_to_data	code/karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
offset_to_data	code/karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Sound	typeref:typename:U32
offset_to_data	karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
offset_to_data	karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Font	typeref:typename:U32
offset_to_data	karu.h	/^  U32 offset_to_data;$/;"	m	language:C++	struct:Karu_Sound	typeref:typename:U32
offset_to_fonts	code/karu.h	/^  U32 offset_to_fonts;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_fonts	karu.h	/^  U32 offset_to_fonts;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_sounds	code/karu.h	/^  U32 offset_to_sounds;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_sounds	karu.h	/^  U32 offset_to_sounds;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_sprites	code/karu.h	/^  U32 offset_to_sprites;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
offset_to_sprites	karu.h	/^  U32 offset_to_sprites;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
ogl_begin_frame	code/game_gfx_opengl.h	/^ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region) $/;"	f	language:C++	typeref:typename:void
ogl_begin_frame	code/game_gfx_opengl.h	/^static void ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region);$/;"	p	language:C++	typeref:typename:void
ogl_begin_frame	code/game_renderer_opengl.h	/^ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region) $/;"	f	language:C++	typeref:typename:void
ogl_begin_frame	code/game_renderer_opengl.h	/^static void ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region);$/;"	p	language:C++	typeref:typename:void
ogl_begin_frame	game_gfx_opengl.h	/^ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region) $/;"	f	language:C++	typeref:typename:void
ogl_begin_frame	game_gfx_opengl.h	/^static void ogl_begin_frame(Opengl* ogl, V2U render_wh, Rect2U region);$/;"	p	language:C++	typeref:typename:void
ogl_end_frame	code/game_gfx_opengl.h	/^ogl_end_frame(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
ogl_end_frame	code/game_gfx_opengl.h	/^static void ogl_end_frame(Opengl* ogl);$/;"	p	language:C++	typeref:typename:void
ogl_end_frame	code/game_renderer_opengl.h	/^ogl_end_frame(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
ogl_end_frame	code/game_renderer_opengl.h	/^static void ogl_end_frame(Opengl* ogl);$/;"	p	language:C++	typeref:typename:void
ogl_end_frame	game_gfx_opengl.h	/^ogl_end_frame(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
ogl_end_frame	game_gfx_opengl.h	/^static void ogl_end_frame(Opengl* ogl);$/;"	p	language:C++	typeref:typename:void
OGL_glAttachShader	code/game_gfx_opengl.h	/^typedef void    OGL_glAttachShader(GLuint program, GLuint shader);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLuint shader)
OGL_glAttachShader	game_gfx_opengl.h	/^typedef void    OGL_glAttachShader(GLuint program, GLuint shader);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLuint shader)
OGL_glBindTexture	code/game_gfx_opengl.h	/^typedef void    OGL_glBindTexture(GLenum target, GLuint texture);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLuint texture)
OGL_glBindTexture	game_gfx_opengl.h	/^typedef void    OGL_glBindTexture(GLenum target, GLuint texture);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLuint texture)
OGL_glBindVertexArray	code/game_gfx_opengl.h	/^typedef void    OGL_glBindVertexArray(GLuint array);$/;"	t	language:C++	typeref:typename:void ()(GLuint array)
OGL_glBindVertexArray	game_gfx_opengl.h	/^typedef void    OGL_glBindVertexArray(GLuint array);$/;"	t	language:C++	typeref:typename:void ()(GLuint array)
OGL_glBlendFunc	code/game_gfx_opengl.h	/^typedef void    OGL_glBlendFunc(GLenum sfactor, GLenum dfactor);$/;"	t	language:C++	typeref:typename:void ()(GLenum sfactor,GLenum dfactor)
OGL_glBlendFunc	game_gfx_opengl.h	/^typedef void    OGL_glBlendFunc(GLenum sfactor, GLenum dfactor);$/;"	t	language:C++	typeref:typename:void ()(GLenum sfactor,GLenum dfactor)
OGL_glBlendFuncSeparate	code/game_gfx_opengl.h	/^typedef void    OGL_glBlendFuncSeparate(GLenum srcRGB, GLenum destRGB, GLenum srcAlpha, GLenum d/;"	t	language:C++	typeref:typename:void ()(GLenum srcRGB,GLenum destRGB,GLenum srcAlpha,GLenum destAlpha)
OGL_glBlendFuncSeparate	game_gfx_opengl.h	/^typedef void    OGL_glBlendFuncSeparate(GLenum srcRGB, GLenum destRGB, GLenum srcAlpha, GLenum d/;"	t	language:C++	typeref:typename:void ()(GLenum srcRGB,GLenum destRGB,GLenum srcAlpha,GLenum destAlpha)
OGL_glClear	code/game_gfx_opengl.h	/^typedef void    OGL_glClear(GLbitfield mask);$/;"	t	language:C++	typeref:typename:void ()(GLbitfield mask)
OGL_glClear	game_gfx_opengl.h	/^typedef void    OGL_glClear(GLbitfield mask);$/;"	t	language:C++	typeref:typename:void ()(GLbitfield mask)
OGL_glClearColor	code/game_gfx_opengl.h	/^typedef void    OGL_glClearColor(GLclampf r, GLclampf g, GLclampf b, GLclampf a);$/;"	t	language:C++	typeref:typename:void ()(GLclampf r,GLclampf g,GLclampf b,GLclampf a)
OGL_glClearColor	game_gfx_opengl.h	/^typedef void    OGL_glClearColor(GLclampf r, GLclampf g, GLclampf b, GLclampf a);$/;"	t	language:C++	typeref:typename:void ()(GLclampf r,GLclampf g,GLclampf b,GLclampf a)
OGL_glCompileShader	code/game_gfx_opengl.h	/^typedef void    OGL_glCompileShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glCompileShader	game_gfx_opengl.h	/^typedef void    OGL_glCompileShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glCreateBuffers	code/game_gfx_opengl.h	/^typedef void    OGL_glCreateBuffers(GLsizei n, GLuint* buffers);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * buffers)
OGL_glCreateBuffers	game_gfx_opengl.h	/^typedef void    OGL_glCreateBuffers(GLsizei n, GLuint* buffers);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * buffers)
OGL_glCreateProgram	code/game_gfx_opengl.h	/^typedef GLuint  OGL_glCreateProgram();$/;"	t	language:C++	typeref:typename:GLuint ()()
OGL_glCreateProgram	game_gfx_opengl.h	/^typedef GLuint  OGL_glCreateProgram();$/;"	t	language:C++	typeref:typename:GLuint ()()
OGL_glCreateShader	code/game_gfx_opengl.h	/^typedef GLuint  OGL_glCreateShader(GLenum type);$/;"	t	language:C++	typeref:typename:GLuint ()(GLenum type)
OGL_glCreateShader	game_gfx_opengl.h	/^typedef GLuint  OGL_glCreateShader(GLenum type);$/;"	t	language:C++	typeref:typename:GLuint ()(GLenum type)
OGL_glCreateTextures	code/game_gfx_opengl.h	/^typedef void    OGL_glCreateTextures(GLenum target, GLsizei n, GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLsizei n,GLuint * textures)
OGL_glCreateTextures	game_gfx_opengl.h	/^typedef void    OGL_glCreateTextures(GLenum target, GLsizei n, GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLsizei n,GLuint * textures)
OGL_glCreateVertexArrays	code/game_gfx_opengl.h	/^typedef void    OGL_glCreateVertexArrays(GLsizei n, GLuint* arrays);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * arrays)
OGL_glCreateVertexArrays	game_gfx_opengl.h	/^typedef void    OGL_glCreateVertexArrays(GLsizei n, GLuint* arrays);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,GLuint * arrays)
OGL_glDebugMessageCallbackARB	code/game_gfx_opengl.h	/^typedef void    OGL_glDebugMessageCallbackARB(GLDEBUGPROC *callback, const void* userParams);$/;"	t	language:C++	typeref:typename:void ()(GLDEBUGPROC * callback,const void * userParams)
OGL_glDebugMessageCallbackARB	game_gfx_opengl.h	/^typedef void    OGL_glDebugMessageCallbackARB(GLDEBUGPROC *callback, const void* userParams);$/;"	t	language:C++	typeref:typename:void ()(GLDEBUGPROC * callback,const void * userParams)
OGL_glDeleteShader	code/game_gfx_opengl.h	/^typedef void    OGL_glDeleteShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glDeleteShader	game_gfx_opengl.h	/^typedef void    OGL_glDeleteShader(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glDeleteTextures	code/game_gfx_opengl.h	/^typedef void    OGL_glDeleteTextures(GLsizei n, const GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,const GLuint * textures)
OGL_glDeleteTextures	game_gfx_opengl.h	/^typedef void    OGL_glDeleteTextures(GLsizei n, const GLuint* textures);$/;"	t	language:C++	typeref:typename:void ()(GLsizei n,const GLuint * textures)
OGL_glDisable	code/game_gfx_opengl.h	/^typedef void    OGL_glDisable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glDisable	game_gfx_opengl.h	/^typedef void    OGL_glDisable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glDrawArrays	code/game_gfx_opengl.h	/^typedef void    OGL_glDrawArrays(GLenum mode, GLint first, GLsizei count);$/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLint first,GLsizei count)
OGL_glDrawArrays	game_gfx_opengl.h	/^typedef void    OGL_glDrawArrays(GLenum mode, GLint first, GLsizei count);$/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLint first,GLsizei count)
OGL_glDrawElementsInstancedBaseInstance	code/game_gfx_opengl.h	/^typedef void    OGL_glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type,/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
OGL_glDrawElementsInstancedBaseInstance	game_gfx_opengl.h	/^typedef void    OGL_glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type,/;"	t	language:C++	typeref:typename:void ()(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
OGL_glEnable	code/game_gfx_opengl.h	/^typedef void    OGL_glEnable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glEnable	game_gfx_opengl.h	/^typedef void    OGL_glEnable(GLenum cap);$/;"	t	language:C++	typeref:typename:void ()(GLenum cap)
OGL_glEnableVertexArrayAttrib	code/game_gfx_opengl.h	/^typedef void    OGL_glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint index)
OGL_glEnableVertexArrayAttrib	game_gfx_opengl.h	/^typedef void    OGL_glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint index)
OGL_glGetProgramInfoLog	code/game_gfx_opengl.h	/^typedef void    OGL_glGetProgramInfoLog(GLuint program, GLsizei maxLength, GLsizei* length,GLcha/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLsizei maxLength,GLsizei * length,GLchar * infoLog)
OGL_glGetProgramInfoLog	game_gfx_opengl.h	/^typedef void    OGL_glGetProgramInfoLog(GLuint program, GLsizei maxLength, GLsizei* length,GLcha/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLsizei maxLength,GLsizei * length,GLchar * infoLog)
OGL_glGetProgramiv	code/game_gfx_opengl.h	/^typedef void    OGL_glGetProgramiv(GLuint program, GLenum pname, GLint* params);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLenum pname,GLint * params)
OGL_glGetProgramiv	game_gfx_opengl.h	/^typedef void    OGL_glGetProgramiv(GLuint program, GLenum pname, GLint* params);$/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLenum pname,GLint * params)
OGL_glGetUniformLocation	code/game_gfx_opengl.h	/^typedef GLint   OGL_glGetUniformLocation(GLuint program, const GLchar* name);$/;"	t	language:C++	typeref:typename:GLint ()(GLuint program,const GLchar * name)
OGL_glGetUniformLocation	game_gfx_opengl.h	/^typedef GLint   OGL_glGetUniformLocation(GLuint program, const GLchar* name);$/;"	t	language:C++	typeref:typename:GLint ()(GLuint program,const GLchar * name)
OGL_glLinkProgram	code/game_gfx_opengl.h	/^typedef void    OGL_glLinkProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glLinkProgram	game_gfx_opengl.h	/^typedef void    OGL_glLinkProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glNamedBufferStorage	code/game_gfx_opengl.h	/^typedef void    OGL_glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void* data, GLbit/;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
OGL_glNamedBufferStorage	game_gfx_opengl.h	/^typedef void    OGL_glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void* data, GLbit/;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
OGL_glNamedBufferSubData	code/game_gfx_opengl.h	/^typedef void    OGL_glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const /;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
OGL_glNamedBufferSubData	game_gfx_opengl.h	/^typedef void    OGL_glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const /;"	t	language:C++	typeref:typename:void ()(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
OGL_glProgramUniform4fv	code/game_gfx_opengl.h	/^typedef void    OGL_glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLf/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,const GLfloat * value)
OGL_glProgramUniform4fv	game_gfx_opengl.h	/^typedef void    OGL_glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLf/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,const GLfloat * value)
OGL_glProgramUniformMatrix4fv	code/game_gfx_opengl.h	/^typedef void    OGL_glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLb/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
OGL_glProgramUniformMatrix4fv	game_gfx_opengl.h	/^typedef void    OGL_glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLb/;"	t	language:C++	typeref:typename:void ()(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
OGL_glScissor	code/game_gfx_opengl.h	/^typedef void    OGL_glScissor(GLint x, GLint y, GLsizei width, GLsizei height); $/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
OGL_glScissor	game_gfx_opengl.h	/^typedef void    OGL_glScissor(GLint x, GLint y, GLsizei width, GLsizei height); $/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
OGL_glShaderSource	code/game_gfx_opengl.h	/^typedef void    OGL_glShaderSource(GLuint shader, GLsizei count, GLchar** string, GLint* length)/;"	t	language:C++	typeref:typename:void ()(GLuint shader,GLsizei count,GLchar ** string,GLint * length)
OGL_glShaderSource	game_gfx_opengl.h	/^typedef void    OGL_glShaderSource(GLuint shader, GLsizei count, GLchar** string, GLint* length)/;"	t	language:C++	typeref:typename:void ()(GLuint shader,GLsizei count,GLchar ** string,GLint * length)
OGL_glTexParameteri	code/game_gfx_opengl.h	/^typedef void    OGL_glTexParameteri(GLenum target, GLenum pname, GLint param);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLenum pname,GLint param)
OGL_glTexParameteri	game_gfx_opengl.h	/^typedef void    OGL_glTexParameteri(GLenum target, GLenum pname, GLint param);$/;"	t	language:C++	typeref:typename:void ()(GLenum target,GLenum pname,GLint param)
OGL_glTextureStorage2D	code/game_gfx_opengl.h	/^typedef void    OGL_glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat,GLs/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
OGL_glTextureStorage2D	game_gfx_opengl.h	/^typedef void    OGL_glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat,GLs/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
OGL_glTextureSubImage2D	code/game_gfx_opengl.h	/^typedef void    OGL_glTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,G/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
OGL_glTextureSubImage2D	game_gfx_opengl.h	/^typedef void    OGL_glTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,G/;"	t	language:C++	typeref:typename:void ()(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
OGL_glUseProgram	code/game_gfx_opengl.h	/^typedef void    OGL_glUseProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glUseProgram	game_gfx_opengl.h	/^typedef void    OGL_glUseProgram(GLuint program);$/;"	t	language:C++	typeref:typename:void ()(GLuint program)
OGL_glVertexArrayAttribBinding	code/game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribBinding(GLuint vaobj,GLuint attribindex,GLuint bindingind/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
OGL_glVertexArrayAttribBinding	game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribBinding(GLuint vaobj,GLuint attribindex,GLuint bindingind/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
OGL_glVertexArrayAttribFormat	code/game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLen/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
OGL_glVertexArrayAttribFormat	game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLen/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
OGL_glVertexArrayBindingDivisor	code/game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint diviso/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint divisor)
OGL_glVertexArrayBindingDivisor	game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint diviso/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint divisor)
OGL_glVertexArrayElementBuffer	code/game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint buffer)
OGL_glVertexArrayElementBuffer	game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);$/;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint buffer)
OGL_glVertexArrayVertexBuffer	code/game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, /;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
OGL_glVertexArrayVertexBuffer	game_gfx_opengl.h	/^typedef void    OGL_glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, /;"	t	language:C++	typeref:typename:void ()(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
OGL_glViewport	code/game_gfx_opengl.h	/^typedef void    OGL_glViewport(GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
OGL_glViewport	game_gfx_opengl.h	/^typedef void    OGL_glViewport(GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	language:C++	typeref:typename:void ()(GLint x,GLint y,GLsizei width,GLsizei height)
ogl_init	code/game_gfx_opengl.h	/^ogl_init(Opengl* ogl,$/;"	f	language:C++	typeref:typename:B32
ogl_init	code/game_gfx_opengl.h	/^static B32 ogl_init(Opengl* ogl, $/;"	p	language:C++	typeref:typename:B32
ogl_init	code/game_renderer_opengl.h	/^ogl_init(Opengl* ogl,$/;"	f	language:C++	typeref:typename:B32
ogl_init	code/game_renderer_opengl.h	/^static B32 ogl_init(Opengl* ogl, $/;"	p	language:C++	typeref:typename:B32
ogl_init	game_gfx_opengl.h	/^ogl_init(Opengl* ogl,$/;"	f	language:C++	typeref:typename:B32
ogl_init	game_gfx_opengl.h	/^static B32 ogl_init(Opengl* ogl, $/;"	p	language:C++	typeref:typename:B32
OGL_MAX_SPRITES	code/game_gfx_opengl.h	/^# define OGL_MAX_SPRITES /;"	d	language:C++
OGL_MAX_SPRITES	game_gfx_opengl.h	/^# define OGL_MAX_SPRITES /;"	d	language:C++
OGL_MAX_TRIANGLES	code/game_gfx_opengl.h	/^# define OGL_MAX_TRIANGLES /;"	d	language:C++
OGL_MAX_TRIANGLES	game_gfx_opengl.h	/^# define OGL_MAX_TRIANGLES /;"	d	language:C++
OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon1d4ae8470203
OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon8caa255d0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon1d4ae8470203
OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon8caa255d0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE,$/;"	e	language:C++	enum:__anon1d4ae8470203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TEXTURE,$/;"	e	language:C++	enum:__anon8caa255d0203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon1d4ae8470203
OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon8caa255d0203
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1, \/\/ 2$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_1, \/\/ 2$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2, \/\/ 3$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_2, \/\/ 3$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3, \/\/ 4$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_3, \/\/ 4$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4, \/\/ 5$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TEXTURE_4, \/\/ 5$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon1d4ae8470103
OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon8caa255d0103
OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE,$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TEXTURE,$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM	code/game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon1d4ae8470303
OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM	game_gfx_opengl.h	/^  OGL_SPRITE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon8caa255d0303
OGL_Texture	code/game_gfx_opengl.h	/^} OGL_Texture;$/;"	t	language:C++	typeref:struct:__anon1d4ae8470708
OGL_Texture	game_gfx_opengl.h	/^} OGL_Texture;$/;"	t	language:C++	typeref:struct:__anon8caa255d0708
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon1d4ae8470503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:__anon8caa255d0503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon1d4ae8470503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:__anon8caa255d0503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon1d4ae8470503
OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:__anon8caa255d0503
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon1d4ae8470403
OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:__anon8caa255d0403
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon1d4ae8470603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:__anon8caa255d0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon1d4ae8470603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:__anon8caa255d0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon1d4ae8470603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:__anon8caa255d0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon1d4ae8470603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:__anon8caa255d0603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM	code/game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon1d4ae8470603
OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM	game_gfx_opengl.h	/^  OGL_TRIANGLE_VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:__anon8caa255d0603
old_light_pos	code/game_mode_lit_player.h	/^  V2 old_light_pos;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:V2
old_light_pos	game_mode_lit_player.h	/^  V2 old_light_pos;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:V2
old_pos	code/momo_memory.h	/^  UMI old_pos;$/;"	m	language:C++	struct:__anonf3c0da150208	typeref:typename:UMI
old_pos	momo_memory.h	/^  UMI old_pos;$/;"	m	language:C++	struct:__anon3250fc2b0208	typeref:typename:UMI
one_past_last_asset_index	code/karu.h	/^  U32 one_past_last_asset_index;$/;"	m	language:C++	struct:Karu_Asset_Group	typeref:typename:U32
one_past_last_asset_index	karu.h	/^  U32 one_past_last_asset_index;$/;"	m	language:C++	struct:Karu_Asset_Group	typeref:typename:U32
ope	code/meta.cpp	/^  U32 ope;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:U32	file:
ope	code/momo_json.h	/^  U32 ope;$/;"	m	language:C++	struct:__anond7a9c0d60508	typeref:typename:U32
ope	meta.cpp	/^  U32 ope;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:U32	file:
ope	momo_json.h	/^  U32 ope;$/;"	m	language:C++	struct:__anon0e7e656c0508	typeref:typename:U32
Opengl	code/game_gfx_opengl.h	/^struct Opengl {$/;"	s	language:C++
Opengl	code/game_renderer_opengl.h	/^struct Opengl {$/;"	s	language:C++
Opengl	game_gfx_opengl.h	/^struct Opengl {$/;"	s	language:C++
OPENGL_MAX_SPRITES	code/game_renderer_opengl.h	/^#define OPENGL_MAX_SPRITES /;"	d	language:C++
open_file	code/game_platform.h	/^  Platform_Open_File* open_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Open_File *
open_file	code/game_platform.h	/^  Platform_Open_File* open_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Open_File *
open_file	game_platform.h	/^  Platform_Open_File* open_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Open_File *
open_file	game_platform.h	/^  Platform_Open_File* open_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Open_File *
operator !=	code/momo_strings.h	/^static B32 operator!=(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
operator !=	code/momo_strings.h	/^static B32 operator!=(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
operator !=	code/momo_vectors.h	/^static B32 operator!=(V2 lhs, V2 rhs) { return !v2_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator !=	code/momo_vectors.h	/^static B32 operator!=(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
operator !=	code/momo_vectors.h	/^static B32 operator!=(V3 lhs, V3 rhs) { return !v3_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator !=	code/momo_vectors.h	/^static B32 operator!=(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
operator !=	momo_strings.h	/^static B32 operator!=(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
operator !=	momo_strings.h	/^static B32 operator!=(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
operator !=	momo_vectors.h	/^static B32 operator!=(V2 lhs, V2 rhs) { return !v2_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator !=	momo_vectors.h	/^static B32 operator!=(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
operator !=	momo_vectors.h	/^static B32 operator!=(V3 lhs, V3 rhs) { return !v3_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator !=	momo_vectors.h	/^static B32 operator!=(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
operator *	code/momo_matrix.h	/^static M44 operator*(M44 lhs, M44 rhs) {$/;"	f	language:C++	typeref:typename:M44
operator *	code/momo_matrix.h	/^static M44 operator*(M44 lhs, M44 rhs);$/;"	p	language:C++	typeref:typename:M44
operator *	code/momo_vectors.h	/^static V2  operator*(F32 lhs, V2 rhs) { return v2_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:V2
operator *	code/momo_vectors.h	/^static V2  operator*(F32 lhs, V2 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V2
operator *	code/momo_vectors.h	/^static V2  operator*(V2 lhs, F32 rhs) { return v2_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator *	code/momo_vectors.h	/^static V2  operator*(V2 lhs, F32 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V2
operator *	code/momo_vectors.h	/^static V3  operator*(F32 lhs, V3 rhs) { return v3_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:V3
operator *	code/momo_vectors.h	/^static V3  operator*(F32 lhs, V3 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V3
operator *	code/momo_vectors.h	/^static V3  operator*(V3 lhs, F32 rhs) { return v3_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator *	code/momo_vectors.h	/^static V3  operator*(V3 lhs, F32 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V3
operator *	momo_matrix.h	/^static M44 operator*(M44 lhs, M44 rhs) {$/;"	f	language:C++	typeref:typename:M44
operator *	momo_matrix.h	/^static M44 operator*(M44 lhs, M44 rhs);$/;"	p	language:C++	typeref:typename:M44
operator *	momo_vectors.h	/^static V2  operator*(F32 lhs, V2 rhs) { return v2_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:V2
operator *	momo_vectors.h	/^static V2  operator*(F32 lhs, V2 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V2
operator *	momo_vectors.h	/^static V2  operator*(V2 lhs, F32 rhs) { return v2_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator *	momo_vectors.h	/^static V2  operator*(V2 lhs, F32 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V2
operator *	momo_vectors.h	/^static V3  operator*(F32 lhs, V3 rhs) { return v3_scale(rhs, lhs); }$/;"	f	language:C++	typeref:typename:V3
operator *	momo_vectors.h	/^static V3  operator*(F32 lhs, V3 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V3
operator *	momo_vectors.h	/^static V3  operator*(V3 lhs, F32 rhs) { return v3_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator *	momo_vectors.h	/^static V3  operator*(V3 lhs, F32 rhs); \/\/ scale$/;"	p	language:C++	typeref:typename:V3
operator *=	code/momo_vectors.h	/^static V2& operator*=(V2& lhs, F32 rhs) { return lhs = v2_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2 &
operator *=	code/momo_vectors.h	/^static V2& operator*=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator *=	code/momo_vectors.h	/^static V3& operator*=(V3& lhs, F32 rhs) { return lhs = v3_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3 &
operator *=	code/momo_vectors.h	/^static V3& operator*=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator *=	momo_vectors.h	/^static V2& operator*=(V2& lhs, F32 rhs) { return lhs = v2_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2 &
operator *=	momo_vectors.h	/^static V2& operator*=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator *=	momo_vectors.h	/^static V3& operator*=(V3& lhs, F32 rhs) { return lhs = v3_scale(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3 &
operator *=	momo_vectors.h	/^static V3& operator*=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator +	code/momo_common.h	/^template<typename F> _defer_scope_guard<F> operator+(_defer_dummy, F f) {$/;"	f	language:C++	typeref:typename:_defer_scope_guard<F>
operator +	code/momo_vectors.h	/^static V2  operator+(V2 lhs, V2 rhs) { return v2_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator +	code/momo_vectors.h	/^static V2  operator+(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
operator +	code/momo_vectors.h	/^static V2U operator+(V2U lhs, V2U rhs) { return v2u_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2U
operator +	code/momo_vectors.h	/^static V3  operator+(V3 lhs, V3 rhs) { return v3_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator +	code/momo_vectors.h	/^static V3  operator+(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
operator +	momo_common.h	/^template<typename F> _defer_scope_guard<F> operator+(_defer_dummy, F f) {$/;"	f	language:C++	typeref:typename:_defer_scope_guard<F>
operator +	momo_vectors.h	/^static V2  operator+(V2 lhs, V2 rhs) { return v2_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator +	momo_vectors.h	/^static V2  operator+(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
operator +	momo_vectors.h	/^static V2U operator+(V2U lhs, V2U rhs) { return v2u_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2U
operator +	momo_vectors.h	/^static V3  operator+(V3 lhs, V3 rhs) { return v3_add(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator +	momo_vectors.h	/^static V3  operator+(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
operator +=	code/momo_vectors.h	/^static V2& operator+=(V2& lhs, V2 rhs) { return lhs = v2_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V2 &
operator +=	code/momo_vectors.h	/^static V2& operator+=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator +=	code/momo_vectors.h	/^static V3& operator+=(V3& lhs, V3 rhs) { return lhs = v3_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V3 &
operator +=	code/momo_vectors.h	/^static V3& operator+=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator +=	momo_vectors.h	/^static V2& operator+=(V2& lhs, V2 rhs) { return lhs = v2_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V2 &
operator +=	momo_vectors.h	/^static V2& operator+=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator +=	momo_vectors.h	/^static V3& operator+=(V3& lhs, V3 rhs) { return lhs = v3_add(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V3 &
operator +=	momo_vectors.h	/^static V3& operator+=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator -	code/momo_vectors.h	/^static V2  operator-(V2 lhs, V2 rhs) { return v2_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator -	code/momo_vectors.h	/^static V2  operator-(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
operator -	code/momo_vectors.h	/^static V2  operator-(V2 v) { return v2_negate(v); }$/;"	f	language:C++	typeref:typename:V2
operator -	code/momo_vectors.h	/^static V2  operator-(V2 v);$/;"	p	language:C++	typeref:typename:V2
operator -	code/momo_vectors.h	/^static V2U operator-(V2U lhs, V2U rhs) { return v2u_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2U
operator -	code/momo_vectors.h	/^static V3  operator-(V3 lhs, V3 rhs) { return v3_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator -	code/momo_vectors.h	/^static V3  operator-(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
operator -	code/momo_vectors.h	/^static V3  operator-(V3 v) { return v3_negate(v); }$/;"	f	language:C++	typeref:typename:V3
operator -	code/momo_vectors.h	/^static V3  operator-(V3 v);$/;"	p	language:C++	typeref:typename:V3
operator -	momo_vectors.h	/^static V2  operator-(V2 lhs, V2 rhs) { return v2_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2
operator -	momo_vectors.h	/^static V2  operator-(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
operator -	momo_vectors.h	/^static V2  operator-(V2 v) { return v2_negate(v); }$/;"	f	language:C++	typeref:typename:V2
operator -	momo_vectors.h	/^static V2  operator-(V2 v);$/;"	p	language:C++	typeref:typename:V2
operator -	momo_vectors.h	/^static V2U operator-(V2U lhs, V2U rhs) { return v2u_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V2U
operator -	momo_vectors.h	/^static V3  operator-(V3 lhs, V3 rhs) { return v3_sub(lhs, rhs); }$/;"	f	language:C++	typeref:typename:V3
operator -	momo_vectors.h	/^static V3  operator-(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
operator -	momo_vectors.h	/^static V3  operator-(V3 v) { return v3_negate(v); }$/;"	f	language:C++	typeref:typename:V3
operator -	momo_vectors.h	/^static V3  operator-(V3 v);$/;"	p	language:C++	typeref:typename:V3
operator -=	code/momo_vectors.h	/^static V2& operator-=(V2& lhs, V2 rhs) { return lhs = v2_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V2 &
operator -=	code/momo_vectors.h	/^static V2& operator-=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator -=	code/momo_vectors.h	/^static V3& operator-=(V3& lhs, V3 rhs) { return lhs = v3_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V3 &
operator -=	code/momo_vectors.h	/^static V3& operator-=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator -=	momo_vectors.h	/^static V2& operator-=(V2& lhs, V2 rhs) { return lhs = v2_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V2 &
operator -=	momo_vectors.h	/^static V2& operator-=(V2& lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2 &
operator -=	momo_vectors.h	/^static V3& operator-=(V3& lhs, V3 rhs) { return lhs = v3_sub(lhs, rhs); } $/;"	f	language:C++	typeref:typename:V3 &
operator -=	momo_vectors.h	/^static V3& operator-=(V3& lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3 &
operator ==	code/momo_strings.h	/^static B32 operator==(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
operator ==	code/momo_strings.h	/^static B32 operator==(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
operator ==	code/momo_vectors.h	/^static B32 operator==(V2 lhs, V2 rhs) { return v2_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator ==	code/momo_vectors.h	/^static B32 operator==(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
operator ==	code/momo_vectors.h	/^static B32 operator==(V3 lhs, V3 rhs) { return v3_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator ==	code/momo_vectors.h	/^static B32 operator==(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
operator ==	momo_strings.h	/^static B32 operator==(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
operator ==	momo_strings.h	/^static B32 operator==(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
operator ==	momo_vectors.h	/^static B32 operator==(V2 lhs, V2 rhs) { return v2_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator ==	momo_vectors.h	/^static B32 operator==(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
operator ==	momo_vectors.h	/^static B32 operator==(V3 lhs, V3 rhs) { return v3_is_close(lhs, rhs); }$/;"	f	language:C++	typeref:typename:B32
operator ==	momo_vectors.h	/^static B32 operator==(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
ope_atlas_font_glyph_id	code/sui_pack.h	/^  U32 ope_atlas_font_glyph_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
ope_atlas_font_glyph_id	sui_pack.h	/^  U32 ope_atlas_font_glyph_id;$/;"	m	language:C++	struct:Sui_Packer_Font	typeref:typename:U32
ope_atlas_font_id	code/sui_pack.h	/^  U32 ope_atlas_font_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
ope_atlas_font_id	sui_pack.h	/^  U32 ope_atlas_font_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
ope_atlas_sprite_id	code/sui_pack.h	/^  U32 ope_atlas_sprite_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
ope_atlas_sprite_id	sui_pack.h	/^  U32 ope_atlas_sprite_id;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
OS_LINUX	code/momo_common.h	/^# define OS_LINUX /;"	d	language:C++
OS_LINUX	code/momo_common.h	/^# define OS_LINUX /;"	d	language:C++
OS_LINUX	momo_common.h	/^# define OS_LINUX /;"	d	language:C++
OS_LINUX	momo_common.h	/^# define OS_LINUX /;"	d	language:C++
OS_MAC	code/momo_common.h	/^# define OS_MAC /;"	d	language:C++
OS_MAC	code/momo_common.h	/^# define OS_MAC /;"	d	language:C++
OS_MAC	momo_common.h	/^# define OS_MAC /;"	d	language:C++
OS_MAC	momo_common.h	/^# define OS_MAC /;"	d	language:C++
OS_WINDOWS	code/momo_common.h	/^# define OS_WINDOWS /;"	d	language:C++
OS_WINDOWS	code/momo_common.h	/^# define OS_WINDOWS /;"	d	language:C++
OS_WINDOWS	momo_common.h	/^# define OS_WINDOWS /;"	d	language:C++
OS_WINDOWS	momo_common.h	/^# define OS_WINDOWS /;"	d	language:C++
out	code/test_png.h	/^    const char* out;$/;"	m	language:C++	struct:test_png::__anonee61d0a90108	typeref:typename:const char *
out	test_png.h	/^    const char* out;$/;"	m	language:C++	struct:test_png::__anone8493a7f0108	typeref:typename:const char *
p0	code/game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p0	code/game_renderer.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p0	code/momo_ttf.h	/^  V2 p0, p1;$/;"	m	language:C++	struct:__anon54d1bdca0608	typeref:typename:V2
p0	game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p0	momo_ttf.h	/^  V2 p0, p1;$/;"	m	language:C++	struct:__anon4eb927a00608	typeref:typename:V2
p1	code/game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p1	code/game_renderer.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p1	code/momo_ttf.h	/^  V2 p0, p1;$/;"	m	language:C++	struct:__anon54d1bdca0608	typeref:typename:V2
p1	game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p1	momo_ttf.h	/^  V2 p0, p1;$/;"	m	language:C++	struct:__anon4eb927a00608	typeref:typename:V2
p2	code/game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p2	code/game_renderer.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
p2	game_gfx.h	/^  V2 p0, p1, p2;$/;"	m	language:C++	struct:Gfx_Command_Triangle	typeref:typename:V2
pack_count	code/sui_pack.h	/^  U32 pack_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
pack_count	sui_pack.h	/^  U32 pack_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
PACK_DEFAULT	code/generated_pack_ids.h	/^PACK_DEFAULT = 0,$/;"	e	language:C++	enum:Pack_ID
PACK_DEFAULT	generated_pack_ids.h	/^PACK_DEFAULT = 0,$/;"	e	language:C++	enum:Pack_ID
Pack_ID	code/generated_pack_ids.h	/^enum Pack_ID {$/;"	g	language:C++
Pack_ID	generated_pack_ids.h	/^enum Pack_ID {$/;"	g	language:C++
pack_id_file	code/sui_pack.h	/^  FILE* pack_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
pack_id_file	sui_pack.h	/^  FILE* pack_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
Painter	code/game_painter.h	/^struct Painter {$/;"	s	language:C++
Painter	game_painter.h	/^struct Painter {$/;"	s	language:C++
paint_circle_outline	code/game_painter.h	/^paint_circle_outline(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_circle_outline	game_painter.h	/^paint_circle_outline(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_filled_circle	code/game_painter.h	/^paint_filled_circle(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_filled_circle	game_painter.h	/^paint_filled_circle(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_filled_triangle	code/game_painter.h	/^paint_filled_triangle(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_filled_triangle	game_painter.h	/^paint_filled_triangle(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_line	code/game_painter.h	/^paint_line(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_line	game_painter.h	/^paint_line(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_set_blend	code/game_painter.h	/^paint_set_blend(Painter* p, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
paint_set_blend	game_painter.h	/^paint_set_blend(Painter* p, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
paint_sprite	code/game_painter.h	/^paint_sprite(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_sprite	game_painter.h	/^paint_sprite(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_text	code/game_painter.h	/^paint_text(Painter* p,$/;"	f	language:C++	typeref:typename:void
paint_text	game_painter.h	/^paint_text(Painter* p,$/;"	f	language:C++	typeref:typename:void
particles	code/game_mode_lit.h	/^  Lit_Particle_Pool particles;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_Particle_Pool
particles	code/game_mode_lit_particles.h	/^  Lit_Particle particles[256];$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:Lit_Particle[256]
particles	game_mode_lit.h	/^  Lit_Particle_Pool particles;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Particle_Pool
particles	game_mode_lit_particles.h	/^  Lit_Particle particles[256];$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:Lit_Particle[256]
particle_cd	code/game_mode_lit_sensors.h	/^  F32 particle_cd;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:F32
particle_cd	game_mode_lit_sensors.h	/^  F32 particle_cd;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:F32
particle_color_end	code/game_mode_lit_particles.h	/^  F32 particle_color_end;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_color_end	game_mode_lit_particles.h	/^  F32 particle_color_end;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_color_start	code/game_mode_lit_particles.h	/^  F32 particle_color_start;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_color_start	game_mode_lit_particles.h	/^  F32 particle_color_start;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_count	code/game_mode_lit_particles.h	/^  U32 particle_count;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:U32
particle_count	game_mode_lit_particles.h	/^  U32 particle_count;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:U32
particle_lifespan_max	code/game_mode_lit_particles.h	/^  F32 particle_lifespan_max;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_lifespan_max	game_mode_lit_particles.h	/^  F32 particle_lifespan_max;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_lifespan_min	code/game_mode_lit_particles.h	/^  F32 particle_lifespan_min;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_lifespan_min	game_mode_lit_particles.h	/^  F32 particle_lifespan_min;$/;"	m	language:C++	struct:Lit_Particle_Pool	typeref:typename:F32
particle_system	code/game_mode_sb1.h	/^  Lit_Particle_System particle_system;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Particle_System
path_count	code/momo_ttf.h	/^  U32 path_count;$/;"	m	language:C++	struct:__anon54d1bdca0508	typeref:typename:U32
path_count	momo_ttf.h	/^  U32 path_count;$/;"	m	language:C++	struct:__anon4eb927a00508	typeref:typename:U32
path_lengths	code/momo_ttf.h	/^  U32* path_lengths;$/;"	m	language:C++	struct:__anon54d1bdca0508	typeref:typename:U32 *
path_lengths	momo_ttf.h	/^  U32* path_lengths;$/;"	m	language:C++	struct:__anon4eb927a00508	typeref:typename:U32 *
payloads	code/game_gfx.h	/^  Gfx_Texture_Payload payloads[256];$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:Gfx_Texture_Payload[256]
payloads	code/game_renderer.h	/^  Gfx_Texture_Payload payloads[256];$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:Gfx_Texture_Payload[256]
payloads	game_gfx.h	/^  Gfx_Texture_Payload payloads[256];$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:Gfx_Texture_Payload[256]
payload_count	code/game_gfx.h	/^  UMI payload_count;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
payload_count	code/game_renderer.h	/^  UMI payload_count;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
payload_count	game_gfx.h	/^  UMI payload_count;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
percent_f32	code/momo_common.h	/^percent_f32(F32 v, F32 min, F32 max) { $/;"	f	language:C++	typeref:typename:F32
percent_f32	momo_common.h	/^percent_f32(F32 v, F32 min, F32 max) { $/;"	f	language:C++	typeref:typename:F32
percent_f64	code/momo_common.h	/^percent_f64(F64 v, F64 min, F64 max) { $/;"	f	language:C++	typeref:typename:F64
percent_f64	momo_common.h	/^percent_f64(F64 v, F64 min, F64 max) { $/;"	f	language:C++	typeref:typename:F64
PFNGLDRAWARRAYSINSTANCEDEXTPROC	test.c	/^    typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsiz/;"	t	language:C	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)	file:
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	test.c	/^    typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, G/;"	t	language:C	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)	file:
PFNGLVERTEXATTRIBDIVISOREXTPROC	test.c	/^    typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISOREXTPROC) (GLuint index, GLuint divisor);$/;"	t	language:C	typeref:typename:void (GL_APIENTRYP)(GLuint index,GLuint divisor)	file:
pf_is_button_down	code/game_platform.h	/^pf_is_button_down(Platform_Button btn){$/;"	f	language:C++	typeref:typename:B32
pf_is_button_down	code/game_platform.h	/^static B32 pf_is_button_down(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_is_button_down	game_platform.h	/^pf_is_button_down(Platform_Button btn){$/;"	f	language:C++	typeref:typename:B32
pf_is_button_down	game_platform.h	/^static B32 pf_is_button_down(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_is_button_held	code/game_platform.h	/^pf_is_button_held(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_held	code/game_platform.h	/^static B32 pf_is_button_held(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_is_button_held	game_platform.h	/^pf_is_button_held(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_held	game_platform.h	/^static B32 pf_is_button_held(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_is_button_poked	code/game_platform.h	/^pf_is_button_poked(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_poked	code/game_platform.h	/^static B32 pf_is_button_poked(Platform_Button) ;$/;"	p	language:C++	typeref:typename:B32
pf_is_button_poked	game_platform.h	/^pf_is_button_poked(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_poked	game_platform.h	/^static B32 pf_is_button_poked(Platform_Button) ;$/;"	p	language:C++	typeref:typename:B32
pf_is_button_released	code/game_platform.h	/^pf_is_button_released(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_released	code/game_platform.h	/^static B32 pf_is_button_released(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_is_button_released	game_platform.h	/^pf_is_button_released(Platform_Button btn) {$/;"	f	language:C++	typeref:typename:B32
pf_is_button_released	game_platform.h	/^static B32 pf_is_button_released(Platform_Button);$/;"	p	language:C++	typeref:typename:B32
pf_update_input	code/game_platform.h	/^pf_update_input(Platform* pf) {$/;"	f	language:C++	typeref:typename:void
pf_update_input	code/game_platform.h	/^static void pf_update_input(Platform_Button);$/;"	p	language:C++	typeref:typename:void
pf_update_input	game_platform.h	/^pf_update_input(Platform* pf) {$/;"	f	language:C++	typeref:typename:void
pf_update_input	game_platform.h	/^static void pf_update_input(Platform_Button);$/;"	p	language:C++	typeref:typename:void
PI	test.c	/^    #define PI /;"	d	language:C	file:
pixels	code/momo_image.h	/^  U32* pixels;$/;"	m	language:C++	struct:__anon70e8603f0108	typeref:typename:U32 *
pixels	code/sui_pack.h	/^  U32* pixels;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32 *
pixels	momo_image.h	/^  U32* pixels;$/;"	m	language:C++	struct:__anon825197950108	typeref:typename:U32 *
pixels	sui_pack.h	/^  U32* pixels;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32 *
PI_32	code/momo_common.h	/^#define PI_32 /;"	d	language:C++
PI_32	momo_common.h	/^#define PI_32 /;"	d	language:C++
PI_64	code/momo_common.h	/^#define PI_64 /;"	d	language:C++
PI_64	momo_common.h	/^#define PI_64 /;"	d	language:C++
Platform	code/game_platform.h	/^struct Platform {$/;"	s	language:C++
Platform	game_platform.h	/^struct Platform {$/;"	s	language:C++
Platform_Add_Task	code/game_platform.h	/^typedef void Platform_Add_Task(Platform_Task_Callback callback, void* data);$/;"	t	language:C++	typeref:typename:void ()(Platform_Task_Callback callback,void * data)
Platform_Add_Task	game_platform.h	/^typedef void Platform_Add_Task(Platform_Task_Callback callback, void* data);$/;"	t	language:C++	typeref:typename:void ()(Platform_Task_Callback callback,void * data)
Platform_API	code/game_platform.h	/^struct Platform_API {$/;"	s	language:C++
Platform_API	game_platform.h	/^struct Platform_API {$/;"	s	language:C++
Platform_Audio	code/game_platform.h	/^struct Platform_Audio {$/;"	s	language:C++
platform_audio	code/w32_audio_wasapi.h	/^  Platform_Audio platform_audio; \/\/ Must be first member$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Platform_Audio
platform_audio	code/win_audio_wasapi.h	/^  Platform_Audio platform_audio; \/\/ Must be first member$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Platform_Audio
Platform_Audio	game_platform.h	/^struct Platform_Audio {$/;"	s	language:C++
platform_audio	w32_audio_wasapi.h	/^  Platform_Audio platform_audio; \/\/ Must be first member$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:Platform_Audio
Platform_Button	code/game_platform.h	/^struct Platform_Button {$/;"	s	language:C++
Platform_Button	game_platform.h	/^struct Platform_Button {$/;"	s	language:C++
Platform_Close_File	code/game_platform.h	/^typedef void Platform_Close_File(Platform_File* file);$/;"	t	language:C++	typeref:typename:void ()(Platform_File * file)
Platform_Close_File	game_platform.h	/^typedef void Platform_Close_File(Platform_File* file);$/;"	t	language:C++	typeref:typename:void ()(Platform_File * file)
Platform_Complete_All_Tasks	code/game_platform.h	/^typedef void Platform_Complete_All_Tasks();$/;"	t	language:C++	typeref:typename:void ()()
Platform_Complete_All_Tasks	game_platform.h	/^typedef void Platform_Complete_All_Tasks();$/;"	t	language:C++	typeref:typename:void ()()
platform_data	code/game_platform.h	/^  void* platform_data; \/\/ pointer for platform's usage$/;"	m	language:C++	struct:Platform_File	typeref:typename:void *
platform_data	game_platform.h	/^  void* platform_data; \/\/ pointer for platform's usage$/;"	m	language:C++	struct:Platform_File	typeref:typename:void *
Platform_Debug_Log	code/game_platform.h	/^typedef void  Platform_Debug_Log(const char* fmt, ...);$/;"	t	language:C++	typeref:typename:void ()(const char * fmt,...)
Platform_Debug_Log	game_platform.h	/^typedef void  Platform_Debug_Log(const char* fmt, ...);$/;"	t	language:C++	typeref:typename:void ()(const char * fmt,...)
Platform_File	code/game_platform.h	/^struct Platform_File {$/;"	s	language:C++
Platform_File	game_platform.h	/^struct Platform_File {$/;"	s	language:C++
Platform_File_Access	code/game_platform.h	/^enum Platform_File_Access {$/;"	g	language:C++
Platform_File_Access	game_platform.h	/^enum Platform_File_Access {$/;"	g	language:C++
PLATFORM_FILE_ACCESS_OVERWRITE	code/game_platform.h	/^  PLATFORM_FILE_ACCESS_OVERWRITE,$/;"	e	language:C++	enum:Platform_File_Access
PLATFORM_FILE_ACCESS_OVERWRITE	game_platform.h	/^  PLATFORM_FILE_ACCESS_OVERWRITE,$/;"	e	language:C++	enum:Platform_File_Access
PLATFORM_FILE_ACCESS_READ	code/game_platform.h	/^  PLATFORM_FILE_ACCESS_READ,$/;"	e	language:C++	enum:Platform_File_Access
PLATFORM_FILE_ACCESS_READ	game_platform.h	/^  PLATFORM_FILE_ACCESS_READ,$/;"	e	language:C++	enum:Platform_File_Access
Platform_File_Path	code/game_platform.h	/^enum Platform_File_Path {$/;"	g	language:C++
Platform_File_Path	game_platform.h	/^enum Platform_File_Path {$/;"	g	language:C++
PLATFORM_FILE_PATH_CACHE	code/game_platform.h	/^  PLATFORM_FILE_PATH_CACHE,$/;"	e	language:C++	enum:Platform_File_Path
PLATFORM_FILE_PATH_CACHE	game_platform.h	/^  PLATFORM_FILE_PATH_CACHE,$/;"	e	language:C++	enum:Platform_File_Path
PLATFORM_FILE_PATH_EXE	code/game_platform.h	/^  PLATFORM_FILE_PATH_EXE,$/;"	e	language:C++	enum:Platform_File_Path
PLATFORM_FILE_PATH_EXE	game_platform.h	/^  PLATFORM_FILE_PATH_EXE,$/;"	e	language:C++	enum:Platform_File_Path
PLATFORM_FILE_PATH_USER	code/game_platform.h	/^  PLATFORM_FILE_PATH_USER,$/;"	e	language:C++	enum:Platform_File_Path
PLATFORM_FILE_PATH_USER	game_platform.h	/^  PLATFORM_FILE_PATH_USER,$/;"	e	language:C++	enum:Platform_File_Path
Platform_Get_Performance_Counter	code/game_platform.h	/^typedef U64   Platform_Get_Performance_Counter();$/;"	t	language:C++	typeref:typename:U64 ()()
Platform_Get_Performance_Counter	game_platform.h	/^typedef U64   Platform_Get_Performance_Counter();$/;"	t	language:C++	typeref:typename:U64 ()()
Platform_Open_File	code/game_platform.h	/^Platform_Open_File(Platform_File* file,$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,const char * filename,Platform_File_Access file_access,Platform_File_Path file_path)
Platform_Open_File	game_platform.h	/^Platform_Open_File(Platform_File* file,$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,const char * filename,Platform_File_Access file_access,Platform_File_Path file_path)
Platform_Read_File	code/game_platform.h	/^typedef B32 Platform_Read_File(Platform_File* file, UMI size, UMI offset, void* dest);$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,UMI size,UMI offset,void * dest)
Platform_Read_File	game_platform.h	/^typedef B32 Platform_Read_File(Platform_File* file, UMI size, UMI offset, void* dest);$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,UMI size,UMI offset,void * dest)
platform_render_region	code/game_gfx_opengl.h	/^  Rect2U platform_render_region;$/;"	m	language:C++	struct:Opengl	typeref:typename:Rect2U
platform_render_region	code/game_renderer_opengl.h	/^  Rect2U platform_render_region;$/;"	m	language:C++	struct:Opengl	typeref:typename:Rect2U
platform_render_region	game_gfx_opengl.h	/^  Rect2U platform_render_region;$/;"	m	language:C++	struct:Opengl	typeref:typename:Rect2U
platform_render_wh	code/game_gfx_opengl.h	/^  V2U platform_render_wh;$/;"	m	language:C++	struct:Opengl	typeref:typename:V2U
platform_render_wh	code/game_renderer_opengl.h	/^  V2U platform_render_wh;$/;"	m	language:C++	struct:Opengl	typeref:typename:V2U
platform_render_wh	game_gfx_opengl.h	/^  V2U platform_render_wh;$/;"	m	language:C++	struct:Opengl	typeref:typename:V2U
Platform_Set_Aspect_Ratio	code/game_platform.h	/^typedef void  Platform_Set_Aspect_Ratio(U32 width, U32 height); \/\/ sets aspect ratio of game$/;"	t	language:C++	typeref:typename:void ()(U32 width,U32 height)
Platform_Set_Aspect_Ratio	game_platform.h	/^typedef void  Platform_Set_Aspect_Ratio(U32 width, U32 height); \/\/ sets aspect ratio of game$/;"	t	language:C++	typeref:typename:void ()(U32 width,U32 height)
Platform_Task_Callback	code/game_platform.h	/^typedef void Platform_Task_Callback(void* data);$/;"	t	language:C++	typeref:typename:void ()(void * data)
Platform_Task_Callback	game_platform.h	/^typedef void Platform_Task_Callback(void* data);$/;"	t	language:C++	typeref:typename:void ()(void * data)
Platform_Write_File	code/game_platform.h	/^typedef B32 Platform_Write_File(Platform_File* file, UMI size, UMI offset, void* src);$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,UMI size,UMI offset,void * src)
Platform_Write_File	game_platform.h	/^typedef B32 Platform_Write_File(Platform_File* file, UMI size, UMI offset, void* src);$/;"	t	language:C++	typeref:typename:B32 ()(Platform_File * file,UMI size,UMI offset,void * src)
player	.\code\game_sb1.h	/^  SB1_Player player;$/;"	m	language:C++	struct:SB1
player	code/game_mode_level.h	/^  Player player;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Player
Player	code/game_mode_level.h	/^struct Player {$/;"	s	language:C++
player	code/game_mode_lit.h	/^  Lit_Player player;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_Player
player	code/game_mode_sb1.h	/^  Lit_Player player;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Player
player	game_mode_lit.h	/^  Lit_Player player;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Player
PNG	code/momo_png.h	/^} PNG;$/;"	t	language:C++	typeref:struct:__anon548615c10108
PNG	momo_png.h	/^} PNG;$/;"	t	language:C++	typeref:struct:__anon4e6d7f970108
png_read	code/momo_png.h	/^png_read(PNG* p, void* png_memory, UMI png_size) {$/;"	f	language:C++	typeref:typename:B32
png_read	code/momo_png.h	/^static B32     png_read(PNG* png, void* png_memory, UMI png_size);$/;"	p	language:C++	typeref:typename:B32
png_read	momo_png.h	/^png_read(PNG* p, void* png_memory, UMI png_size) {$/;"	f	language:C++	typeref:typename:B32
png_read	momo_png.h	/^static B32     png_read(PNG* png, void* png_memory, UMI png_size);$/;"	p	language:C++	typeref:typename:B32
png_read_from_blk	code/momo_png.h	/^png_read_from_blk(PNG* p, Block blk) {$/;"	f	language:C++	typeref:typename:B32
png_read_from_blk	code/momo_png.h	/^static B32     png_read_from_blk(PNG* p, Block blk);$/;"	p	language:C++	typeref:typename:B32
png_read_from_blk	momo_png.h	/^png_read_from_blk(PNG* p, Block blk) {$/;"	f	language:C++	typeref:typename:B32
png_read_from_blk	momo_png.h	/^static B32     png_read_from_blk(PNG* p, Block blk);$/;"	p	language:C++	typeref:typename:B32
png_to_img32	code/momo_png.h	/^png_to_img32(PNG* png, Bump_Allocator* allocator) $/;"	f	language:C++	typeref:typename:Image32
png_to_img32	code/momo_png.h	/^static Image32 png_to_img32(PNG* png, Bump_Allocator* allocator);$/;"	p	language:C++	typeref:typename:Image32
png_to_img32	momo_png.h	/^png_to_img32(PNG* png, Bump_Allocator* allocator) $/;"	f	language:C++	typeref:typename:Image32
png_to_img32	momo_png.h	/^static Image32 png_to_img32(PNG* png, Bump_Allocator* allocator);$/;"	p	language:C++	typeref:typename:Image32
png_write_img32_to_blk	code/momo_png.h	/^png_write_img32_to_blk(Image32 bm, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:Block
png_write_img32_to_blk	code/momo_png.h	/^static Block   png_write_img32_to_blk(Image32 img, Bump_Allocator* allocator);$/;"	p	language:C++	typeref:typename:Block
png_write_img32_to_blk	momo_png.h	/^png_write_img32_to_blk(Image32 bm, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:Block
png_write_img32_to_blk	momo_png.h	/^static Block   png_write_img32_to_blk(Image32 img, Bump_Allocator* allocator);$/;"	p	language:C++	typeref:typename:Block
points	.\code\game_sb1.h	/^  SB1_Point_List points;$/;"	m	language:C++	struct:SB1
points	code/game_mode_level.h	/^  Array_List<V2> points;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Array_List<V2>
points	code/game_mode_sb1.h	/^  Lit_Point_List points;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Point_List
points	code/momo_ttf.h	/^  _TTF_Glyph_Point* points;$/;"	m	language:C++	struct:__anon54d1bdca0408	typeref:typename:_TTF_Glyph_Point *
points	game_mode_lit.h	/^  Lit_Point_List points;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Point_List
points	momo_ttf.h	/^  _TTF_Glyph_Point* points;$/;"	m	language:C++	struct:__anon4eb927a00408	typeref:typename:_TTF_Glyph_Point *
point_count	code/momo_ttf.h	/^  U32 point_count;$/;"	m	language:C++	struct:__anon54d1bdca0408	typeref:typename:U32
point_count	momo_ttf.h	/^  U32 point_count;$/;"	m	language:C++	struct:__anon4eb927a00408	typeref:typename:U32
pos	.\code\game_sb1.h	/^  V2 pos;  $/;"	m	language:C++	struct:SB1_Light
pos	.\code\game_sb1.h	/^  V2 pos;$/;"	m	language:C++	struct:SB1_Player
pos	.\code\game_sb1.h	/^  V2 pos;$/;"	m	language:C++	struct:SB1_Sensor
pos	code/game_gfx.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
pos	code/game_gfx.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
pos	code/game_mode_level.h	/^  V2 pos;$/;"	m	language:C++	struct:Player	typeref:typename:V2
pos	code/game_mode_level.h	/^  V2 pos;$/;"	m	language:C++	struct:Sensor	typeref:typename:V2
pos	code/game_mode_level_editor.h	/^  V2 pos;$/;"	m	language:C++	struct:Editor_Toolbar_Button	typeref:typename:V2
pos	code/game_mode_lit_light.h	/^  V2 pos;  $/;"	m	language:C++	struct:Lit_Light	typeref:typename:V2
pos	code/game_mode_lit_particles.h	/^  V2 pos, vel;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
pos	code/game_mode_lit_player.h	/^  V2 pos;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:V2
pos	code/game_mode_lit_sensors.h	/^  V2 pos;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:V2
pos	code/game_renderer.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
pos	code/game_renderer.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
pos	code/game_renderer.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:V2
pos	code/momo_memory.h	/^	UMI pos;$/;"	m	language:C++	struct:__anonf3c0da150108	typeref:typename:UMI
pos	code/momo_streams.h	/^  UMI pos;$/;"	m	language:C++	struct:Stream	typeref:typename:UMI
pos	game_gfx.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
pos	game_gfx.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
pos	game_gfx.h	/^  V2 pos;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:V2
pos	game_mode_level_editor.h	/^  V2 pos;$/;"	m	language:C++	struct:Editor_Toolbar_Button	typeref:typename:V2
pos	game_mode_lit_light.h	/^  V2 pos;  $/;"	m	language:C++	struct:Lit_Light	typeref:typename:V2
pos	game_mode_lit_particles.h	/^  V2 pos, vel;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
pos	game_mode_lit_player.h	/^  V2 pos;$/;"	m	language:C++	struct:Lit_Player	typeref:typename:V2
pos	game_mode_lit_sensors.h	/^  V2 pos;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:V2
pos	momo_memory.h	/^	UMI pos;$/;"	m	language:C++	struct:__anon3250fc2b0108	typeref:typename:UMI
pos	momo_streams.h	/^  UMI pos;$/;"	m	language:C++	struct:Stream	typeref:typename:UMI
positive_float	build/test_json.json	/^  "positive_float": 123.321,$/;"	n	language:JSON
pos_x	code/game_gfx.h	/^  F32 pos_x, pos_y;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
pos_y	code/game_gfx.h	/^  F32 pos_x, pos_y;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
pow_f32	code/momo_intrinsics.h	/^pow_f32(F32 b, F32 e){$/;"	f	language:C++	typeref:typename:F32
pow_F32	code/momo_intrinsics.h	/^static F32 pow_F32(F32 v, F32 e);$/;"	p	language:C++	typeref:typename:F32
pow_f32	momo_intrinsics.h	/^pow_f32(F32 b, F32 e){$/;"	f	language:C++	typeref:typename:F32
pow_F32	momo_intrinsics.h	/^static F32 pow_F32(F32 v, F32 e);$/;"	p	language:C++	typeref:typename:F32
pow_f64	code/momo_intrinsics.h	/^pow_f64(F64 b, F64 e){$/;"	f	language:C++	typeref:typename:F64
pow_f64	code/momo_intrinsics.h	/^static F64 pow_f64(F64 , F64 e);$/;"	p	language:C++	typeref:typename:F64
pow_f64	momo_intrinsics.h	/^pow_f64(F64 b, F64 e){$/;"	f	language:C++	typeref:typename:F64
pow_f64	momo_intrinsics.h	/^static F64 pow_f64(F64 , F64 e);$/;"	p	language:C++	typeref:typename:F64
prf_block	code/game_profiler.h	/^#define prf_block(/;"	d	language:C++
prf_block	game_profiler.h	/^#define prf_block(/;"	d	language:C++
prf_init	code/game_profiler.h	/^prf_init(Profiler* p, Profiler_Get_Performance_Counter get_performance_counter_fp) {$/;"	f	language:C++	typeref:typename:void
prf_init	code/game_profiler.h	/^static void prf_init(Profiler* p, Profiler_Get_Performance_Counter get_performance_counter_fp);$/;"	p	language:C++	typeref:typename:void
prf_init	game_profiler.h	/^prf_init(Profiler* p, Profiler_Get_Performance_Counter get_performance_counter_fp) {$/;"	f	language:C++	typeref:typename:void
prf_init	game_profiler.h	/^static void prf_init(Profiler* p, Profiler_Get_Performance_Counter get_performance_counter_fp);$/;"	p	language:C++	typeref:typename:void
prf_reset	code/game_profiler.h	/^prf_reset(Profiler* p) {$/;"	f	language:C++	typeref:typename:void
prf_reset	code/game_profiler.h	/^static void prf_reset(Profiler* p);$/;"	p	language:C++	typeref:typename:void
prf_reset	game_profiler.h	/^prf_reset(Profiler* p) {$/;"	f	language:C++	typeref:typename:void
prf_reset	game_profiler.h	/^static void prf_reset(Profiler* p);$/;"	p	language:C++	typeref:typename:void
prf_update_entries	code/game_profiler.h	/^prf_update_entries(Profiler* p) {$/;"	f	language:C++	typeref:typename:void
prf_update_entries	code/game_profiler.h	/^static void prf_update_entries(Profiler* p);$/;"	p	language:C++	typeref:typename:void
prf_update_entries	game_profiler.h	/^prf_update_entries(Profiler* p) {$/;"	f	language:C++	typeref:typename:void
prf_update_entries	game_profiler.h	/^static void prf_update_entries(Profiler* p);$/;"	p	language:C++	typeref:typename:void
process_input_for_editor_toolbar	code/game_mode_level_editor.cpp	/^process_input_for_editor_toolbar(Editor* e, Game_Input* input) {$/;"	f	language:C++	typeref:typename:B32	file:
process_input_for_editor_toolbar	game_mode_level_editor.cpp	/^process_input_for_editor_toolbar(Editor* e, Game_Input* input) {$/;"	f	language:C++	typeref:typename:B32	file:
profiler	code/game_platform.h	/^  Profiler* profiler; $/;"	m	language:C++	struct:Platform	typeref:typename:Profiler *
Profiler	code/game_profiler.h	/^struct Profiler {$/;"	s	language:C++
profiler	game_platform.h	/^  Profiler* profiler; $/;"	m	language:C++	struct:Platform	typeref:typename:Profiler *
Profiler	game_profiler.h	/^struct Profiler {$/;"	s	language:C++
Profiler_Block_Types	.\build\meta_test.h	/^enum Profiler_Block_Types {$/;"	g	language:C++
Profiler_Codegen	code/meta.cpp	/^struct Profiler_Codegen {$/;"	s	language:C++	file:
Profiler_Codegen	meta.cpp	/^struct Profiler_Codegen {$/;"	s	language:C++	file:
Profiler_Entry	code/game_profiler.h	/^struct Profiler_Entry {$/;"	s	language:C++
Profiler_Entry	game_profiler.h	/^struct Profiler_Entry {$/;"	s	language:C++
Profiler_Get_Performance_Counter	code/game_profiler.h	/^typedef U64 Profiler_Get_Performance_Counter(void);$/;"	t	language:C++	typeref:typename:U64 ()(void)
Profiler_Get_Performance_Counter	game_profiler.h	/^typedef U64 Profiler_Get_Performance_Counter(void);$/;"	t	language:C++	typeref:typename:U64 ()(void)
PROFILER_MAX_ENTRIES	code/game_profiler.h	/^#define PROFILER_MAX_ENTRIES /;"	d	language:C++
PROFILER_MAX_ENTRIES	game_profiler.h	/^#define PROFILER_MAX_ENTRIES /;"	d	language:C++
PROFILER_MAX_SNAPSHOTS	code/game_profiler.h	/^#define PROFILER_MAX_SNAPSHOTS /;"	d	language:C++
PROFILER_MAX_SNAPSHOTS	game_profiler.h	/^#define PROFILER_MAX_SNAPSHOTS /;"	d	language:C++
Profiler_Snapshot	code/game_profiler.h	/^struct Profiler_Snapshot {$/;"	s	language:C++
Profiler_Snapshot	game_profiler.h	/^struct Profiler_Snapshot {$/;"	s	language:C++
projection	test.c	/^        Matrix projection;                  \/\/ Default projection matrix$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix	file:
projectionStereo	test.c	/^        Matrix projectionStereo[2];         \/\/ VR stereo rendering eyes projection matrices$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix[2]	file:
pt	.\code\game_sb1.h	/^  V2 pt;$/;"	m	language:C++	struct:SB1_Light_Intersection
pt	code/game_mode_lit_light.h	/^  V2 pt;$/;"	m	language:C++	struct:Lit_Light_Intersection	typeref:typename:V2
pt	code/momo_shapes.h	/^  V2 pt;$/;"	m	language:C++	struct:__anon484784200808	typeref:typename:V2
pt	game_mode_lit_light.h	/^  V2 pt;$/;"	m	language:C++	struct:Lit_Light_Intersection	typeref:typename:V2
pt	momo_shapes.h	/^  V2 pt;$/;"	m	language:C++	struct:__anon86d7a6360808	typeref:typename:V2
ptr_to_int	code/momo_common.h	/^ptr_to_int(void* p) { $/;"	f	language:C++	typeref:typename:UMI
ptr_to_int	momo_common.h	/^ptr_to_int(void* p) { $/;"	f	language:C++	typeref:typename:UMI
pts	code/momo_shapes.h	/^  V2 pts[3];$/;"	m	language:C++	struct:__anon484784200908	typeref:typename:V2[3]
pts	momo_shapes.h	/^  V2 pts[3];$/;"	m	language:C++	struct:__anon86d7a6360908	typeref:typename:V2[3]
push_atlas_font_glyph	code/sui_pack.h	/^push_atlas_font_glyph(Sui_Packer* p, U32 codepoint) {$/;"	f	language:C++	typeref:typename:void
push_atlas_font_glyph	sui_pack.h	/^push_atlas_font_glyph(Sui_Packer* p, U32 codepoint) {$/;"	f	language:C++	typeref:typename:void
push_atlas_sprite	code/sui_pack.h	/^push_atlas_sprite(Sui_Packer* p, const char* id_name, const char* file_name) {$/;"	f	language:C++	typeref:typename:void
push_atlas_sprite	sui_pack.h	/^push_atlas_sprite(Sui_Packer* p, const char* id_name, const char* file_name) {$/;"	f	language:C++	typeref:typename:void
push_edge	code/game_mode_level_editor.h	/^static void push_edge(Level_Mode* m, UMI min, UMI max);$/;"	p	language:C++	typeref:typename:void
push_edge	game_mode_level_editor.h	/^static void push_edge(Level_Mode* m, UMI min, UMI max);$/;"	p	language:C++	typeref:typename:void
push_font	code/sui_atlas.h	/^push_font(Sui_Atlas* ab, $/;"	f	language:C++	typeref:typename:U32
push_font	sui_atlas.h	/^push_font(Sui_Atlas* ab, $/;"	f	language:C++	typeref:typename:U32
push_light	code/game_mode_level_editor.h	/^static Light* push_light(Level_Mode* m, V2 pos, U32 color);$/;"	p	language:C++	typeref:typename:Light *
push_light	game_mode_level_editor.h	/^static Light* push_light(Level_Mode* m, V2 pos, U32 color);$/;"	p	language:C++	typeref:typename:Light *
push_point	code/game_mode_level_editor.h	/^static UMI push_point(Level_Mode* m, V2 pt);$/;"	p	language:C++	typeref:typename:UMI
push_point	game_mode_level_editor.h	/^static UMI push_point(Level_Mode* m, V2 pt);$/;"	p	language:C++	typeref:typename:UMI
push_sprite	code/sui_atlas.h	/^push_sprite(Sui_Atlas* ab, const char* sprite_id_name, const char* filename) $/;"	f	language:C++	typeref:typename:U32
push_sprite	sui_atlas.h	/^push_sprite(Sui_Atlas* ab, const char* sprite_id_name, const char* filename) $/;"	f	language:C++	typeref:typename:U32
push_triangle	code/game_mode_level_light.cpp	/^push_triangle(Light* l, V2 p0, V2 p1, V2 p2, U32 color) {$/;"	f	language:C++	typeref:typename:void	file:
push_triangle	game_mode_level_light.cpp	/^push_triangle(Light* l, V2 p0, V2 p1, V2 p2, U32 color) {$/;"	f	language:C++	typeref:typename:void	file:
quicksort	code/momo_sort.h	/^quicksort(Sort_Entry* entries, U32 entry_count) {$/;"	f	language:C++	typeref:typename:void
quicksort	momo_sort.h	/^quicksort(Sort_Entry* entries, U32 entry_count) {$/;"	f	language:C++	typeref:typename:void
r	code/momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonb89fa6ae0308::__anonb89fa6ae040a::__anonb89fa6ae0508	typeref:typename:F32
r	code/momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonb89fa6ae0108	typeref:typename:F32
r	momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	m	language:C++	struct:__anonf72fc8c40308::__anonf72fc8c4040a::__anonf72fc8c40508	typeref:typename:F32
r	momo_colors.h	/^  F32 r, g, b;   $/;"	m	language:C++	struct:__anonf72fc8c40108	typeref:typename:F32
RAD2DEG	test.c	/^    #define RAD2DEG /;"	d	language:C	file:
radius	code/momo_shapes.h	/^  F32 radius;$/;"	m	language:C++	struct:__anon484784200608	typeref:typename:F32
radius	momo_shapes.h	/^  F32 radius;$/;"	m	language:C++	struct:__anon86d7a6360608	typeref:typename:F32
rad_to_deg_f32	code/momo_common.h	/^rad_to_deg_f32(F32 radians) {$/;"	f	language:C++	typeref:typename:F32
rad_to_deg_f32	momo_common.h	/^rad_to_deg_f32(F32 radians) {$/;"	f	language:C++	typeref:typename:F32
rad_to_deg_f64	code/momo_common.h	/^rad_to_deg_f64(F64 radians) {$/;"	f	language:C++	typeref:typename:F64
rad_to_deg_f64	momo_common.h	/^rad_to_deg_f64(F64 radians) {$/;"	f	language:C++	typeref:typename:F64
raster_font_height	code/sui_atlas.h	/^  F32 raster_font_height;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:F32
raster_font_height	sui_atlas.h	/^  F32 raster_font_height;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:F32
Ray2	code/momo_shapes.h	/^}Ray2;$/;"	t	language:C++	typeref:struct:__anon484784200808
Ray2	momo_shapes.h	/^}Ray2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360808
rbg_to_hsl	code/momo_colors.h	/^rbg_to_hsl(RGB c) {$/;"	f	language:C++	typeref:typename:HSL
rbg_to_hsl	code/momo_colors.h	/^static HSL  rbg_to_hsl(RGB c);$/;"	p	language:C++	typeref:typename:HSL
rbg_to_hsl	momo_colors.h	/^rbg_to_hsl(RGB c) {$/;"	f	language:C++	typeref:typename:HSL
rbg_to_hsl	momo_colors.h	/^static HSL  rbg_to_hsl(RGB c);$/;"	p	language:C++	typeref:typename:HSL
read_file	code/game_platform.h	/^  Platform_Read_File* read_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Read_File *
read_file	code/game_platform.h	/^  Platform_Read_File* read_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Read_File *
read_file	game_platform.h	/^  Platform_Read_File* read_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Read_File *
read_file	game_platform.h	/^  Platform_Read_File* read_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Read_File *
rec2u_height	code/momo_shapes.h	/^rec2u_height(Rect2U r) {$/;"	f	language:C++	typeref:typename:U32
rec2u_height	code/momo_shapes.h	/^static U32 rec2u_height(Rect2U lhs);$/;"	p	language:C++	typeref:typename:U32
rec2u_height	momo_shapes.h	/^rec2u_height(Rect2U r) {$/;"	f	language:C++	typeref:typename:U32
rec2u_height	momo_shapes.h	/^static U32 rec2u_height(Rect2U lhs);$/;"	p	language:C++	typeref:typename:U32
rec2u_width	code/momo_shapes.h	/^rec2u_width(Rect2U r) {$/;"	f	language:C++	typeref:typename:U32
rec2u_width	code/momo_shapes.h	/^static U32 rec2u_width(Rect2U lhs);$/;"	p	language:C++	typeref:typename:U32
rec2u_width	momo_shapes.h	/^rec2u_width(Rect2U r) {$/;"	f	language:C++	typeref:typename:U32
rec2u_width	momo_shapes.h	/^static U32 rec2u_width(Rect2U lhs);$/;"	p	language:C++	typeref:typename:U32
rec2_height	code/momo_shapes.h	/^rec2_height(Rect2 r) {$/;"	f	language:C++	typeref:typename:F32
rec2_height	code/momo_shapes.h	/^static F32 rec2_height(Rect2 lhs);$/;"	p	language:C++	typeref:typename:F32
rec2_height	momo_shapes.h	/^rec2_height(Rect2 r) {$/;"	f	language:C++	typeref:typename:F32
rec2_height	momo_shapes.h	/^static F32 rec2_height(Rect2 lhs);$/;"	p	language:C++	typeref:typename:F32
rec2_width	code/momo_shapes.h	/^rec2_width(Rect2 r) {$/;"	f	language:C++	typeref:typename:F32
rec2_width	code/momo_shapes.h	/^static F32 rec2_width(Rect2 lhs);$/;"	p	language:C++	typeref:typename:F32
rec2_width	momo_shapes.h	/^rec2_width(Rect2 r) {$/;"	f	language:C++	typeref:typename:F32
rec2_width	momo_shapes.h	/^static F32 rec2_width(Rect2 lhs);$/;"	p	language:C++	typeref:typename:F32
rect	code/sui_atlas.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:RP_Rect *
rect	code/sui_pack.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Packer_Font_Glyph	typeref:typename:RP_Rect *
rect	code/sui_pack.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:RP_Rect *
rect	sui_atlas.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:RP_Rect *
rect	sui_pack.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Packer_Font_Glyph	typeref:typename:RP_Rect *
rect	sui_pack.h	/^  RP_Rect* rect;$/;"	m	language:C++	struct:Sui_Packer_Sprite	typeref:typename:RP_Rect *
Rect2	code/momo_shapes.h	/^}Rect2;$/;"	t	language:C++	typeref:struct:__anon484784200108
Rect2	momo_shapes.h	/^}Rect2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360108
Rect2S	code/momo_shapes.h	/^}Rect2S;$/;"	t	language:C++	typeref:struct:__anon484784200208
Rect2S	momo_shapes.h	/^}Rect2S;$/;"	t	language:C++	typeref:struct:__anon86d7a6360208
Rect2U	code/momo_shapes.h	/^}Rect2U;$/;"	t	language:C++	typeref:struct:__anon484784200308
Rect2U	momo_shapes.h	/^}Rect2U;$/;"	t	language:C++	typeref:struct:__anon86d7a6360308
Rect3	code/momo_shapes.h	/^}Rect3;$/;"	t	language:C++	typeref:struct:__anon484784200408
Rect3	momo_shapes.h	/^}Rect3;$/;"	t	language:C++	typeref:struct:__anon86d7a6360408
rect_context	code/sui_atlas.h	/^  Sui_Atlas_Context* rect_context;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:Sui_Atlas_Context *
rect_context	sui_atlas.h	/^  Sui_Atlas_Context* rect_context;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:Sui_Atlas_Context *
rect_count	code/sui_atlas.h	/^  U32 rect_count;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32
rect_count	sui_atlas.h	/^  U32 rect_count;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:U32
ref	code/w32_audio_wasapi.h	/^  LONG ref;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:LONG
ref	code/win_audio_wasapi.h	/^  LONG ref;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:LONG
ref	w32_audio_wasapi.h	/^  LONG ref;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:LONG
reloaded	code/game_platform.h	/^  B32 reloaded;$/;"	m	language:C++	struct:Platform	typeref:typename:B32
reloaded	game_platform.h	/^  B32 reloaded;$/;"	m	language:C++	struct:Platform	typeref:typename:B32
remainders	code/momo_crc.h	/^	U16 remainders[256];$/;"	m	language:C++	struct:__anon539cf7b40208	typeref:typename:U16[256]
remainders	code/momo_crc.h	/^	U32 remainders[256];$/;"	m	language:C++	struct:__anon539cf7b40108	typeref:typename:U32[256]
remainders	code/momo_crc.h	/^	U8 remainders[256];$/;"	m	language:C++	struct:__anon539cf7b40308	typeref:typename:U8[256]
remainders	momo_crc.h	/^	U16 remainders[256];$/;"	m	language:C++	struct:__anon4d84618a0208	typeref:typename:U16[256]
remainders	momo_crc.h	/^	U32 remainders[256];$/;"	m	language:C++	struct:__anon4d84618a0108	typeref:typename:U32[256]
remainders	momo_crc.h	/^	U8 remainders[256];$/;"	m	language:C++	struct:__anon4d84618a0308	typeref:typename:U8[256]
renderer_texture_handle	code/game_assets.h	/^  U32 renderer_texture_handle;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
renderer_texture_handle	game_assets.h	/^  U32 renderer_texture_handle;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
render_editor	code/game_mode_level_editor.cpp	/^render_editor(Editor* e,$/;"	f	language:C++	typeref:typename:void	file:
render_editor	game_mode_level_editor.cpp	/^render_editor(Editor* e,$/;"	f	language:C++	typeref:typename:void	file:
render_editor_edit_edges_state	code/game_mode_level_editor.cpp	/^render_editor_edit_edges_state(Level_Mode* m,$/;"	f	language:C++	typeref:typename:void	file:
render_editor_edit_edges_state	game_mode_level_editor.cpp	/^render_editor_edit_edges_state(Level_Mode* m,$/;"	f	language:C++	typeref:typename:void	file:
render_editor_toolbar	code/game_mode_level_editor.cpp	/^render_editor_toolbar(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
render_editor_toolbar	game_mode_level_editor.cpp	/^render_editor_toolbar(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
render_mouse_pos	code/game_platform.h	/^  V2U render_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2U
render_mouse_pos	game_platform.h	/^  V2U render_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2U
rgb	code/momo_colors.h	/^    RGB rgb;$/;"	m	language:C++	union:__anonb89fa6ae0308::__anonb89fa6ae040a	typeref:typename:RGB
RGB	code/momo_colors.h	/^} RGB;$/;"	t	language:C++	typeref:struct:__anonb89fa6ae0108
rgb	momo_colors.h	/^    RGB rgb;$/;"	m	language:C++	union:__anonf72fc8c40308::__anonf72fc8c4040a	typeref:typename:RGB
RGB	momo_colors.h	/^} RGB;$/;"	t	language:C++	typeref:struct:__anonf72fc8c40108
rgba	code/momo_colors.h	/^rgba(F32 r, F32 g, F32 b, F32 a){$/;"	f	language:C++	typeref:typename:RGBA
rgba	code/momo_colors.h	/^static RGBA rgba(F32 r, F32 g, F32 b, F32 a);$/;"	p	language:C++	typeref:typename:RGBA
RGBA	code/momo_colors.h	/^} RGBA;$/;"	t	language:C++	typeref:struct:__anonb89fa6ae0308
rgba	momo_colors.h	/^rgba(F32 r, F32 g, F32 b, F32 a){$/;"	f	language:C++	typeref:typename:RGBA
rgba	momo_colors.h	/^static RGBA rgba(F32 r, F32 g, F32 b, F32 a);$/;"	p	language:C++	typeref:typename:RGBA
RGBA	momo_colors.h	/^} RGBA;$/;"	t	language:C++	typeref:struct:__anonf72fc8c40308
RGBA_WHITE	code/momo_colors.h	/^#define RGBA_WHITE /;"	d	language:C++
riff_chunk	code/momo_wav.h	/^  WAV_Riff_Chunk riff_chunk;$/;"	m	language:C++	struct:__anon54fde02a0408	typeref:typename:WAV_Riff_Chunk
riff_chunk	momo_wav.h	/^  WAV_Riff_Chunk riff_chunk;$/;"	m	language:C++	struct:__anon4ee54a000408	typeref:typename:WAV_Riff_Chunk
right	code/momo_json.h	/^  struct _JSON_Object_Node* right;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:struct:_JSON_Object_Node *
right	momo_json.h	/^  struct _JSON_Object_Node* right;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:struct:_JSON_Object_Node *
rlActiveDrawBuffers	test.c	/^RLAPI void rlActiveDrawBuffers(int count);              \/\/ Activate multiple draw color buffer/;"	p	language:C	typeref:typename:RLAPI void	file:
rlActiveDrawBuffers	test.c	/^void rlActiveDrawBuffers(int count)$/;"	f	language:C	typeref:typename:void
rlActiveTextureSlot	test.c	/^RLAPI void rlActiveTextureSlot(int slot);               \/\/ Select and active a texture slot$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlActiveTextureSlot	test.c	/^void rlActiveTextureSlot(int slot)$/;"	f	language:C	typeref:typename:void
RLAPI	test.c	/^        #define RLAPI /;"	d	language:C	file:
RLAPI	test.c	/^    #define RLAPI /;"	d	language:C	file:
rlBegin	test.c	/^RLAPI void rlBegin(int mode);                         \/\/ Initialize drawing mode (how to organ/;"	p	language:C	typeref:typename:RLAPI void	file:
rlBegin	test.c	/^void rlBegin(int mode)$/;"	f	language:C	typeref:typename:void
rlBegin	test.c	/^void rlBegin(int mode)$/;"	f	language:C	typeref:typename:void
rlBindImageTexture	test.c	/^RLAPI void rlBindImageTexture(unsigned int id, unsigned int index, unsigned int format, int read/;"	p	language:C	typeref:typename:RLAPI void	file:
rlBindImageTexture	test.c	/^void rlBindImageTexture(unsigned int id, unsigned int index, unsigned int format, int readonly)$/;"	f	language:C	typeref:typename:void
rlBindShaderBuffer	test.c	/^RLAPI void rlBindShaderBuffer(unsigned int id, unsigned int index);             \/\/ Bind SSBO b/;"	p	language:C	typeref:typename:RLAPI void	file:
rlBindShaderBuffer	test.c	/^void rlBindShaderBuffer(unsigned int id, unsigned int index)$/;"	f	language:C	typeref:typename:void
rlBlendMode	test.c	/^} rlBlendMode;$/;"	t	language:C	typeref:enum:__anon1dda1bf60503	file:
rlCheckErrors	test.c	/^RLAPI void rlCheckErrors(void);                         \/\/ Check and log OpenGL error codes$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlCheckErrors	test.c	/^void rlCheckErrors()$/;"	f	language:C	typeref:typename:void
rlCheckRenderBatchLimit	test.c	/^bool rlCheckRenderBatchLimit(int vCount)$/;"	f	language:C	typeref:typename:bool
rlCheckRenderBatchLimit	test.c	/^RLAPI bool rlCheckRenderBatchLimit(int vCount);                             \/\/ Check internal /;"	p	language:C	typeref:typename:RLAPI bool	file:
rlClearColor	test.c	/^RLAPI void rlClearColor(unsigned char r, unsigned char g, unsigned char b, unsigned char a); \/\//;"	p	language:C	typeref:typename:RLAPI void	file:
rlClearColor	test.c	/^void rlClearColor(unsigned char r, unsigned char g, unsigned char b, unsigned char a)$/;"	f	language:C	typeref:typename:void
rlClearScreenBuffers	test.c	/^RLAPI void rlClearScreenBuffers(void);                  \/\/ Clear used screen buffers (color an/;"	p	language:C	typeref:typename:RLAPI void	file:
rlClearScreenBuffers	test.c	/^void rlClearScreenBuffers(void)$/;"	f	language:C	typeref:typename:void
rlColor3f	test.c	/^RLAPI void rlColor3f(float x, float y, float z);          \/\/ Define one vertex (color) - 3 flo/;"	p	language:C	typeref:typename:RLAPI void	file:
rlColor3f	test.c	/^void rlColor3f(float x, float y, float z) { glColor3f(x, y, z); }$/;"	f	language:C	typeref:typename:void
rlColor3f	test.c	/^void rlColor3f(float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlColor4f	test.c	/^RLAPI void rlColor4f(float x, float y, float z, float w); \/\/ Define one vertex (color) - 4 flo/;"	p	language:C	typeref:typename:RLAPI void	file:
rlColor4f	test.c	/^void rlColor4f(float r, float g, float b, float a)$/;"	f	language:C	typeref:typename:void
rlColor4f	test.c	/^void rlColor4f(float x, float y, float z, float w) { glColor4f(x, y, z, w); }$/;"	f	language:C	typeref:typename:void
rlColor4ub	test.c	/^RLAPI void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a);  \/\//;"	p	language:C	typeref:typename:RLAPI void	file:
rlColor4ub	test.c	/^void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a) { glColor4ub/;"	f	language:C	typeref:typename:void
rlColor4ub	test.c	/^void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)$/;"	f	language:C	typeref:typename:void
rlCompileShader	test.c	/^RLAPI unsigned int rlCompileShader(const char *shaderCode, int type);           \/\/ Compile cus/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlCompileShader	test.c	/^unsigned int rlCompileShader(const char *shaderCode, int type)$/;"	f	language:C	typeref:typename:unsigned int
rlComputeShaderDispatch	test.c	/^RLAPI void rlComputeShaderDispatch(unsigned int groupX, unsigned int groupY, unsigned int groupZ/;"	p	language:C	typeref:typename:RLAPI void	file:
rlComputeShaderDispatch	test.c	/^void rlComputeShaderDispatch(unsigned int groupX, unsigned int groupY, unsigned int groupZ)$/;"	f	language:C	typeref:typename:void
rlCopyShaderBuffer	test.c	/^RLAPI void rlCopyShaderBuffer(unsigned int destId, unsigned int srcId, unsigned int destOffset, /;"	p	language:C	typeref:typename:RLAPI void	file:
rlCopyShaderBuffer	test.c	/^void rlCopyShaderBuffer(unsigned int destId, unsigned int srcId, unsigned int destOffset, unsign/;"	f	language:C	typeref:typename:void
rlDebugMessageCallback	test.c	/^static void GLAPIENTRY rlDebugMessageCallback(GLenum source, GLenum type, GLuint id, GLenum seve/;"	f	language:C	typeref:typename:void GLAPIENTRY	file:
rlDisableBackfaceCulling	test.c	/^RLAPI void rlDisableBackfaceCulling(void);              \/\/ Disable backface culling$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableBackfaceCulling	test.c	/^void rlDisableBackfaceCulling(void) { glDisable(GL_CULL_FACE); }$/;"	f	language:C	typeref:typename:void
rlDisableColorBlend	test.c	/^RLAPI void rlDisableColorBlend(void);                   \/\/ Disable color blending$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableColorBlend	test.c	/^void rlDisableColorBlend(void) { glDisable(GL_BLEND); }$/;"	f	language:C	typeref:typename:void
rlDisableDepthMask	test.c	/^RLAPI void rlDisableDepthMask(void);                    \/\/ Disable depth write$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableDepthMask	test.c	/^void rlDisableDepthMask(void) { glDepthMask(GL_FALSE); }$/;"	f	language:C	typeref:typename:void
rlDisableDepthTest	test.c	/^RLAPI void rlDisableDepthTest(void);                    \/\/ Disable depth test$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableDepthTest	test.c	/^void rlDisableDepthTest(void) { glDisable(GL_DEPTH_TEST); }$/;"	f	language:C	typeref:typename:void
rlDisableFramebuffer	test.c	/^RLAPI void rlDisableFramebuffer(void);                  \/\/ Disable render texture (fbo), retur/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableFramebuffer	test.c	/^void rlDisableFramebuffer(void)$/;"	f	language:C	typeref:typename:void
rlDisableScissorTest	test.c	/^RLAPI void rlDisableScissorTest(void);                  \/\/ Disable scissor test$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableScissorTest	test.c	/^void rlDisableScissorTest(void) { glDisable(GL_SCISSOR_TEST); }$/;"	f	language:C	typeref:typename:void
rlDisableShader	test.c	/^RLAPI void rlDisableShader(void);                       \/\/ Disable shader program$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableShader	test.c	/^void rlDisableShader(void)$/;"	f	language:C	typeref:typename:void
rlDisableSmoothLines	test.c	/^RLAPI void rlDisableSmoothLines(void);                  \/\/ Disable line aliasing$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableSmoothLines	test.c	/^void rlDisableSmoothLines(void)$/;"	f	language:C	typeref:typename:void
rlDisableStatePointer	test.c	/^RLAPI void rlDisableStatePointer(int vertexAttribType);                 \/\/ Disable attribute s/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableStatePointer	test.c	/^void rlDisableStatePointer(int vertexAttribType)$/;"	f	language:C	typeref:typename:void
rlDisableStereoRender	test.c	/^RLAPI void rlDisableStereoRender(void);                 \/\/ Disable stereo rendering$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableStereoRender	test.c	/^void rlDisableStereoRender(void)$/;"	f	language:C	typeref:typename:void
rlDisableTexture	test.c	/^RLAPI void rlDisableTexture(void);                      \/\/ Disable texture$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableTexture	test.c	/^void rlDisableTexture(void)$/;"	f	language:C	typeref:typename:void
rlDisableTextureCubemap	test.c	/^RLAPI void rlDisableTextureCubemap(void);               \/\/ Disable texture cubemap$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableTextureCubemap	test.c	/^void rlDisableTextureCubemap(void)$/;"	f	language:C	typeref:typename:void
rlDisableVertexArray	test.c	/^RLAPI void rlDisableVertexArray(void);                  \/\/ Disable vertex array (VAO, if suppo/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableVertexArray	test.c	/^void rlDisableVertexArray(void)$/;"	f	language:C	typeref:typename:void
rlDisableVertexAttribute	test.c	/^RLAPI void rlDisableVertexAttribute(unsigned int index);\/\/ Disable vertex attribute index$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableVertexAttribute	test.c	/^void rlDisableVertexAttribute(unsigned int index)$/;"	f	language:C	typeref:typename:void
rlDisableVertexBuffer	test.c	/^RLAPI void rlDisableVertexBuffer(void);                 \/\/ Disable vertex buffer (VBO)$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableVertexBuffer	test.c	/^void rlDisableVertexBuffer(void)$/;"	f	language:C	typeref:typename:void
rlDisableVertexBufferElement	test.c	/^RLAPI void rlDisableVertexBufferElement(void);          \/\/ Disable vertex buffer element (VBO /;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableVertexBufferElement	test.c	/^void rlDisableVertexBufferElement(void)$/;"	f	language:C	typeref:typename:void
rlDisableWireMode	test.c	/^RLAPI void rlDisableWireMode(void);                     \/\/ Disable wire mode$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDisableWireMode	test.c	/^void rlDisableWireMode(void)$/;"	f	language:C	typeref:typename:void
rlDrawCall	test.c	/^typedef struct rlDrawCall {$/;"	s	language:C	file:
rlDrawCall	test.c	/^} rlDrawCall;$/;"	t	language:C	typeref:struct:rlDrawCall	file:
rlDrawRenderBatch	test.c	/^RLAPI void rlDrawRenderBatch(rlRenderBatch *batch);                         \/\/ Draw render bat/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawRenderBatch	test.c	/^void rlDrawRenderBatch(rlRenderBatch *batch)$/;"	f	language:C	typeref:typename:void
rlDrawRenderBatchActive	test.c	/^RLAPI void rlDrawRenderBatchActive(void);                                   \/\/ Update and draw/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawRenderBatchActive	test.c	/^void rlDrawRenderBatchActive(void)$/;"	f	language:C	typeref:typename:void
rlDrawVertexArray	test.c	/^RLAPI void rlDrawVertexArray(int offset, int count);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawVertexArray	test.c	/^void rlDrawVertexArray(int offset, int count)$/;"	f	language:C	typeref:typename:void
rlDrawVertexArrayElements	test.c	/^RLAPI void rlDrawVertexArrayElements(int offset, int count, const void *buffer);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawVertexArrayElements	test.c	/^void rlDrawVertexArrayElements(int offset, int count, const void *buffer)$/;"	f	language:C	typeref:typename:void
rlDrawVertexArrayElementsInstanced	test.c	/^RLAPI void rlDrawVertexArrayElementsInstanced(int offset, int count, const void *buffer, int ins/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawVertexArrayElementsInstanced	test.c	/^void rlDrawVertexArrayElementsInstanced(int offset, int count, const void *buffer, int instances/;"	f	language:C	typeref:typename:void
rlDrawVertexArrayInstanced	test.c	/^RLAPI void rlDrawVertexArrayInstanced(int offset, int count, int instances);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlDrawVertexArrayInstanced	test.c	/^void rlDrawVertexArrayInstanced(int offset, int count, int instances)$/;"	f	language:C	typeref:typename:void
rlEnableBackfaceCulling	test.c	/^RLAPI void rlEnableBackfaceCulling(void);               \/\/ Enable backface culling$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableBackfaceCulling	test.c	/^void rlEnableBackfaceCulling(void) { glEnable(GL_CULL_FACE); }$/;"	f	language:C	typeref:typename:void
rlEnableColorBlend	test.c	/^RLAPI void rlEnableColorBlend(void);                     \/\/ Enable color blending$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableColorBlend	test.c	/^void rlEnableColorBlend(void) { glEnable(GL_BLEND); }$/;"	f	language:C	typeref:typename:void
rlEnableDepthMask	test.c	/^RLAPI void rlEnableDepthMask(void);                     \/\/ Enable depth write$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableDepthMask	test.c	/^void rlEnableDepthMask(void) { glDepthMask(GL_TRUE); }$/;"	f	language:C	typeref:typename:void
rlEnableDepthTest	test.c	/^RLAPI void rlEnableDepthTest(void);                     \/\/ Enable depth test$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableDepthTest	test.c	/^void rlEnableDepthTest(void) { glEnable(GL_DEPTH_TEST); }$/;"	f	language:C	typeref:typename:void
rlEnableFramebuffer	test.c	/^RLAPI void rlEnableFramebuffer(unsigned int id);        \/\/ Enable render texture (fbo)$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableFramebuffer	test.c	/^void rlEnableFramebuffer(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableScissorTest	test.c	/^RLAPI void rlEnableScissorTest(void);                   \/\/ Enable scissor test$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableScissorTest	test.c	/^void rlEnableScissorTest(void) { glEnable(GL_SCISSOR_TEST); }$/;"	f	language:C	typeref:typename:void
rlEnableShader	test.c	/^RLAPI void rlEnableShader(unsigned int id);             \/\/ Enable shader program$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableShader	test.c	/^void rlEnableShader(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableSmoothLines	test.c	/^RLAPI void rlEnableSmoothLines(void);                   \/\/ Enable line aliasing$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableSmoothLines	test.c	/^void rlEnableSmoothLines(void)$/;"	f	language:C	typeref:typename:void
rlEnableStatePointer	test.c	/^RLAPI void rlEnableStatePointer(int vertexAttribType, void *buffer);    \/\/ Enable attribute st/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableStatePointer	test.c	/^void rlEnableStatePointer(int vertexAttribType, void *buffer)$/;"	f	language:C	typeref:typename:void
rlEnableStereoRender	test.c	/^RLAPI void rlEnableStereoRender(void);                  \/\/ Enable stereo rendering$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableStereoRender	test.c	/^void rlEnableStereoRender(void)$/;"	f	language:C	typeref:typename:void
rlEnableTexture	test.c	/^RLAPI void rlEnableTexture(unsigned int id);            \/\/ Enable texture$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableTexture	test.c	/^void rlEnableTexture(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableTextureCubemap	test.c	/^RLAPI void rlEnableTextureCubemap(unsigned int id);     \/\/ Enable texture cubemap$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableTextureCubemap	test.c	/^void rlEnableTextureCubemap(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableVertexArray	test.c	/^bool rlEnableVertexArray(unsigned int vaoId)$/;"	f	language:C	typeref:typename:bool
rlEnableVertexArray	test.c	/^RLAPI bool rlEnableVertexArray(unsigned int vaoId);     \/\/ Enable vertex array (VAO, if suppor/;"	p	language:C	typeref:typename:RLAPI bool	file:
rlEnableVertexAttribute	test.c	/^RLAPI void rlEnableVertexAttribute(unsigned int index); \/\/ Enable vertex attribute index$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableVertexAttribute	test.c	/^void rlEnableVertexAttribute(unsigned int index)$/;"	f	language:C	typeref:typename:void
rlEnableVertexBuffer	test.c	/^RLAPI void rlEnableVertexBuffer(unsigned int id);       \/\/ Enable vertex buffer (VBO)$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableVertexBuffer	test.c	/^void rlEnableVertexBuffer(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableVertexBufferElement	test.c	/^RLAPI void rlEnableVertexBufferElement(unsigned int id);\/\/ Enable vertex buffer element (VBO e/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableVertexBufferElement	test.c	/^void rlEnableVertexBufferElement(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlEnableWireMode	test.c	/^RLAPI void rlEnableWireMode(void);                      \/\/ Enable wire mode$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnableWireMode	test.c	/^void rlEnableWireMode(void)$/;"	f	language:C	typeref:typename:void
rlEnd	test.c	/^RLAPI void rlEnd(void);                               \/\/ Finish vertex providing$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlEnd	test.c	/^void rlEnd() { glEnd(); }$/;"	f	language:C	typeref:typename:void
rlEnd	test.c	/^void rlEnd(void)$/;"	f	language:C	typeref:typename:void
rlFramebufferAttach	test.c	/^RLAPI void rlFramebufferAttach(unsigned int fboId, unsigned int texId, int attachType, int texTy/;"	p	language:C	typeref:typename:RLAPI void	file:
rlFramebufferAttach	test.c	/^void rlFramebufferAttach(unsigned int fboId, unsigned int texId, int attachType, int texType, in/;"	f	language:C	typeref:typename:void
rlFramebufferAttachTextureType	test.c	/^} rlFramebufferAttachTextureType;$/;"	t	language:C	typeref:enum:__anon1dda1bf60a03	file:
rlFramebufferAttachType	test.c	/^} rlFramebufferAttachType;$/;"	t	language:C	typeref:enum:__anon1dda1bf60903	file:
rlFramebufferComplete	test.c	/^bool rlFramebufferComplete(unsigned int id)$/;"	f	language:C	typeref:typename:bool
rlFramebufferComplete	test.c	/^RLAPI bool rlFramebufferComplete(unsigned int id);                        \/\/ Verify framebuffe/;"	p	language:C	typeref:typename:RLAPI bool	file:
rlFrustum	test.c	/^RLAPI void rlFrustum(double left, double right, double bottom, double top, double znear, double /;"	p	language:C	typeref:typename:RLAPI void	file:
rlFrustum	test.c	/^void rlFrustum(double left, double right, double bottom, double top, double znear, double zfar)$/;"	f	language:C	typeref:typename:void
rlFrustum	test.c	/^void rlFrustum(double left, double right, double bottom, double top, double znear, double zfar)$/;"	f	language:C	typeref:typename:void
rlGenTextureMipmaps	test.c	/^RLAPI void rlGenTextureMipmaps(unsigned int id, int width, int height, int format, int *mipmaps)/;"	p	language:C	typeref:typename:RLAPI void	file:
rlGenTextureMipmaps	test.c	/^void rlGenTextureMipmaps(unsigned int id, int width, int height, int format, int *mipmaps)$/;"	f	language:C	typeref:typename:void
rlGetCompressedFormatName	test.c	/^static char *rlGetCompressedFormatName(int format)$/;"	f	language:C	typeref:typename:char *	file:
rlGetCompressedFormatName	test.c	/^static char *rlGetCompressedFormatName(int format); \/\/ Get compressed format official GL ident/;"	p	language:C	typeref:typename:char *	file:
rlGetFramebufferHeight	test.c	/^int rlGetFramebufferHeight(void)$/;"	f	language:C	typeref:typename:int
rlGetFramebufferHeight	test.c	/^RLAPI int rlGetFramebufferHeight(void);                 \/\/ Get default framebuffer height$/;"	p	language:C	typeref:typename:RLAPI int	file:
rlGetFramebufferWidth	test.c	/^int rlGetFramebufferWidth(void)$/;"	f	language:C	typeref:typename:int
rlGetFramebufferWidth	test.c	/^RLAPI int rlGetFramebufferWidth(void);                  \/\/ Get default framebuffer width$/;"	p	language:C	typeref:typename:RLAPI int	file:
rlGetGlTextureFormats	test.c	/^RLAPI void rlGetGlTextureFormats(int format, unsigned int *glInternalFormat, unsigned int *glFor/;"	p	language:C	typeref:typename:RLAPI void	file:
rlGetGlTextureFormats	test.c	/^void rlGetGlTextureFormats(int format, unsigned int *glInternalFormat, unsigned int *glFormat, u/;"	f	language:C	typeref:typename:void
rlGetLineWidth	test.c	/^float rlGetLineWidth(void)$/;"	f	language:C	typeref:typename:float
rlGetLineWidth	test.c	/^RLAPI float rlGetLineWidth(void);                       \/\/ Get the line drawing width$/;"	p	language:C	typeref:typename:RLAPI float	file:
rlGetLocationAttrib	test.c	/^int rlGetLocationAttrib(unsigned int shaderId, const char *attribName)$/;"	f	language:C	typeref:typename:int
rlGetLocationAttrib	test.c	/^RLAPI int rlGetLocationAttrib(unsigned int shaderId, const char *attribName);   \/\/ Get shader /;"	p	language:C	typeref:typename:RLAPI int	file:
rlGetLocationUniform	test.c	/^int rlGetLocationUniform(unsigned int shaderId, const char *uniformName)$/;"	f	language:C	typeref:typename:int
rlGetLocationUniform	test.c	/^RLAPI int rlGetLocationUniform(unsigned int shaderId, const char *uniformName); \/\/ Get shader /;"	p	language:C	typeref:typename:RLAPI int	file:
rlGetMatrixModelview	test.c	/^Matrix rlGetMatrixModelview(void)$/;"	f	language:C	typeref:typename:Matrix
rlGetMatrixModelview	test.c	/^RLAPI Matrix rlGetMatrixModelview(void);                                  \/\/ Get internal mode/;"	p	language:C	typeref:typename:RLAPI Matrix	file:
rlGetMatrixProjection	test.c	/^Matrix rlGetMatrixProjection(void)$/;"	f	language:C	typeref:typename:Matrix
rlGetMatrixProjection	test.c	/^RLAPI Matrix rlGetMatrixProjection(void);                                 \/\/ Get internal proj/;"	p	language:C	typeref:typename:RLAPI Matrix	file:
rlGetMatrixProjectionStereo	test.c	/^RLAPI Matrix rlGetMatrixProjectionStereo(int eye)$/;"	f	language:C	typeref:typename:RLAPI Matrix
rlGetMatrixProjectionStereo	test.c	/^RLAPI Matrix rlGetMatrixProjectionStereo(int eye);                        \/\/ Get internal proj/;"	p	language:C	typeref:typename:RLAPI Matrix	file:
rlGetMatrixTransform	test.c	/^Matrix rlGetMatrixTransform(void)$/;"	f	language:C	typeref:typename:Matrix
rlGetMatrixTransform	test.c	/^RLAPI Matrix rlGetMatrixTransform(void);                                  \/\/ Get internal accu/;"	p	language:C	typeref:typename:RLAPI Matrix	file:
rlGetMatrixViewOffsetStereo	test.c	/^RLAPI Matrix rlGetMatrixViewOffsetStereo(int eye)$/;"	f	language:C	typeref:typename:RLAPI Matrix
rlGetMatrixViewOffsetStereo	test.c	/^RLAPI Matrix rlGetMatrixViewOffsetStereo(int eye);                        \/\/ Get internal view/;"	p	language:C	typeref:typename:RLAPI Matrix	file:
rlGetPixelDataSize	test.c	/^static int rlGetPixelDataSize(int width, int height, int format)$/;"	f	language:C	typeref:typename:int	file:
rlGetPixelDataSize	test.c	/^static int rlGetPixelDataSize(int width, int height, int format);   \/\/ Get pixel data size in /;"	p	language:C	typeref:typename:int	file:
rlGetPixelFormatName	test.c	/^const char *rlGetPixelFormatName(unsigned int format)$/;"	f	language:C	typeref:typename:const char *
rlGetPixelFormatName	test.c	/^RLAPI const char *rlGetPixelFormatName(unsigned int format);              \/\/ Get name string f/;"	p	language:C	typeref:typename:RLAPI const char *	file:
rlGetShaderBufferSize	test.c	/^RLAPI unsigned int rlGetShaderBufferSize(unsigned int id);                      \/\/ Get SSBO bu/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlGetShaderBufferSize	test.c	/^unsigned int rlGetShaderBufferSize(unsigned int id)$/;"	f	language:C	typeref:typename:unsigned int
rlGetShaderIdDefault	test.c	/^RLAPI unsigned int rlGetShaderIdDefault(void);          \/\/ Get default shader id$/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlGetShaderIdDefault	test.c	/^unsigned int rlGetShaderIdDefault(void)$/;"	f	language:C	typeref:typename:unsigned int
rlGetShaderLocsDefault	test.c	/^int *rlGetShaderLocsDefault(void)$/;"	f	language:C	typeref:typename:int *
rlGetShaderLocsDefault	test.c	/^RLAPI int *rlGetShaderLocsDefault(void);                \/\/ Get default shader locations$/;"	p	language:C	typeref:typename:RLAPI int *	file:
rlGetTextureIdDefault	test.c	/^RLAPI unsigned int rlGetTextureIdDefault(void);         \/\/ Get default texture id$/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlGetTextureIdDefault	test.c	/^unsigned int rlGetTextureIdDefault(void)$/;"	f	language:C	typeref:typename:unsigned int
rlGetVersion	test.c	/^int rlGetVersion(void)$/;"	f	language:C	typeref:typename:int
rlGetVersion	test.c	/^RLAPI int rlGetVersion(void);                           \/\/ Get current OpenGL version$/;"	p	language:C	typeref:typename:RLAPI int	file:
RLGL	test.c	/^static rlglData RLGL = { 0 };$/;"	v	language:C	typeref:typename:rlglData	file:
rlglClose	test.c	/^RLAPI void rlglClose(void);                             \/\/ De-inititialize rlgl (buffers, shad/;"	p	language:C	typeref:typename:RLAPI void	file:
rlglClose	test.c	/^void rlglClose(void)$/;"	f	language:C	typeref:typename:void
rlglData	test.c	/^typedef struct rlglData {$/;"	s	language:C	file:
rlglData	test.c	/^} rlglData;$/;"	t	language:C	typeref:struct:rlglData	file:
rlglInit	test.c	/^RLAPI void rlglInit(int width, int height);             \/\/ Initialize rlgl (buffers, shaders, /;"	p	language:C	typeref:typename:RLAPI void	file:
rlglInit	test.c	/^void rlglInit(int width, int height)$/;"	f	language:C	typeref:typename:void
rlglLoadProc	test.c	/^typedef void *(*rlglLoadProc)(const char *name);   \/\/ OpenGL extension functions loader signat/;"	t	language:C	typeref:typename:void * (*)(const char * name)	file:
rlGlVersion	test.c	/^} rlGlVersion;$/;"	t	language:C	typeref:enum:__anon1dda1bf60103	file:
RLGL_H	test.c	/^#define RLGL_H$/;"	d	language:C	file:
RLGL_RENDER_TEXTURES_HINT	test.c	/^#define RLGL_RENDER_TEXTURES_HINT$/;"	d	language:C	file:
RLGL_VERSION	test.c	/^#define RLGL_VERSION /;"	d	language:C	file:
rlIsStereoRenderEnabled	test.c	/^bool rlIsStereoRenderEnabled(void)$/;"	f	language:C	typeref:typename:bool
rlIsStereoRenderEnabled	test.c	/^RLAPI bool rlIsStereoRenderEnabled(void);               \/\/ Check if stereo render is enabled$/;"	p	language:C	typeref:typename:RLAPI bool	file:
rlLoadComputeShaderProgram	test.c	/^RLAPI unsigned int rlLoadComputeShaderProgram(unsigned int shaderId);           \/\/ Load comput/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadComputeShaderProgram	test.c	/^unsigned int rlLoadComputeShaderProgram(unsigned int shaderId)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadDrawCube	test.c	/^RLAPI void rlLoadDrawCube(void);     \/\/ Load and draw a cube$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlLoadDrawCube	test.c	/^void rlLoadDrawCube(void)$/;"	f	language:C	typeref:typename:void
rlLoadDrawQuad	test.c	/^RLAPI void rlLoadDrawQuad(void);     \/\/ Load and draw a quad$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlLoadDrawQuad	test.c	/^void rlLoadDrawQuad(void)$/;"	f	language:C	typeref:typename:void
rlLoadExtensions	test.c	/^RLAPI void rlLoadExtensions(void *loader);              \/\/ Load OpenGL extensions (loader func/;"	p	language:C	typeref:typename:RLAPI void	file:
rlLoadExtensions	test.c	/^void rlLoadExtensions(void *loader)$/;"	f	language:C	typeref:typename:void
rlLoadFramebuffer	test.c	/^RLAPI unsigned int rlLoadFramebuffer(int width, int height);              \/\/ Load an empty fra/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadFramebuffer	test.c	/^unsigned int rlLoadFramebuffer(int width, int height)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadIdentity	test.c	/^RLAPI void rlLoadIdentity(void);                      \/\/ Reset current matrix to identity matr/;"	p	language:C	typeref:typename:RLAPI void	file:
rlLoadIdentity	test.c	/^void rlLoadIdentity(void) { glLoadIdentity(); }$/;"	f	language:C	typeref:typename:void
rlLoadIdentity	test.c	/^void rlLoadIdentity(void)$/;"	f	language:C	typeref:typename:void
rlLoadRenderBatch	test.c	/^RLAPI rlRenderBatch rlLoadRenderBatch(int numBuffers, int bufferElements);  \/\/ Load a render b/;"	p	language:C	typeref:typename:RLAPI rlRenderBatch	file:
rlLoadRenderBatch	test.c	/^rlRenderBatch rlLoadRenderBatch(int numBuffers, int bufferElements)$/;"	f	language:C	typeref:typename:rlRenderBatch
rlLoadShaderBuffer	test.c	/^RLAPI unsigned int rlLoadShaderBuffer(unsigned int size, const void *data, int usageHint); \/\/ /;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadShaderBuffer	test.c	/^unsigned int rlLoadShaderBuffer(unsigned int size, const void *data, int usageHint)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadShaderCode	test.c	/^RLAPI unsigned int rlLoadShaderCode(const char *vsCode, const char *fsCode);    \/\/ Load shader/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadShaderCode	test.c	/^unsigned int rlLoadShaderCode(const char *vsCode, const char *fsCode)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadShaderDefault	test.c	/^static void rlLoadShaderDefault(void)$/;"	f	language:C	typeref:typename:void	file:
rlLoadShaderDefault	test.c	/^static void rlLoadShaderDefault(void);      \/\/ Load default shader$/;"	p	language:C	typeref:typename:void	file:
rlLoadShaderProgram	test.c	/^RLAPI unsigned int rlLoadShaderProgram(unsigned int vShaderId, unsigned int fShaderId); \/\/ Loa/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadShaderProgram	test.c	/^unsigned int rlLoadShaderProgram(unsigned int vShaderId, unsigned int fShaderId)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadTexture	test.c	/^RLAPI unsigned int rlLoadTexture(const void *data, int width, int height, int format, int mipmap/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadTexture	test.c	/^unsigned int rlLoadTexture(const void *data, int width, int height, int format, int mipmapCount)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadTextureCubemap	test.c	/^RLAPI unsigned int rlLoadTextureCubemap(const void *data, int size, int format);                /;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadTextureCubemap	test.c	/^unsigned int rlLoadTextureCubemap(const void *data, int size, int format)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadTextureDepth	test.c	/^RLAPI unsigned int rlLoadTextureDepth(int width, int height, bool useRenderBuffer);             /;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadTextureDepth	test.c	/^unsigned int rlLoadTextureDepth(int width, int height, bool useRenderBuffer)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadVertexArray	test.c	/^RLAPI unsigned int rlLoadVertexArray(void);                               \/\/ Load vertex array/;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadVertexArray	test.c	/^unsigned int rlLoadVertexArray(void)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadVertexBuffer	test.c	/^RLAPI unsigned int rlLoadVertexBuffer(const void *buffer, int size, bool dynamic);            \//;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadVertexBuffer	test.c	/^unsigned int rlLoadVertexBuffer(const void *buffer, int size, bool dynamic)$/;"	f	language:C	typeref:typename:unsigned int
rlLoadVertexBufferElement	test.c	/^RLAPI unsigned int rlLoadVertexBufferElement(const void *buffer, int size, bool dynamic);     \//;"	p	language:C	typeref:typename:RLAPI unsigned int	file:
rlLoadVertexBufferElement	test.c	/^unsigned int rlLoadVertexBufferElement(const void *buffer, int size, bool dynamic)$/;"	f	language:C	typeref:typename:unsigned int
rlMatrixIdentity	test.c	/^static Matrix rlMatrixIdentity(void)$/;"	f	language:C	typeref:typename:Matrix	file:
rlMatrixIdentity	test.c	/^static Matrix rlMatrixIdentity(void);                       \/\/ Get identity matrix$/;"	p	language:C	typeref:typename:Matrix	file:
rlMatrixMode	test.c	/^RLAPI void rlMatrixMode(int mode);                    \/\/ Choose the current matrix to be trans/;"	p	language:C	typeref:typename:RLAPI void	file:
rlMatrixMode	test.c	/^void rlMatrixMode(int mode)$/;"	f	language:C	typeref:typename:void
rlMatrixMode	test.c	/^void rlMatrixMode(int mode)$/;"	f	language:C	typeref:typename:void
rlMatrixMultiply	test.c	/^static Matrix rlMatrixMultiply(Matrix left, Matrix right)$/;"	f	language:C	typeref:typename:Matrix	file:
rlMatrixMultiply	test.c	/^static Matrix rlMatrixMultiply(Matrix left, Matrix right);  \/\/ Multiply two matrices$/;"	p	language:C	typeref:typename:Matrix	file:
rlMultMatrixf	test.c	/^RLAPI void rlMultMatrixf(float *matf);                \/\/ Multiply the current matrix by anothe/;"	p	language:C	typeref:typename:RLAPI void	file:
rlMultMatrixf	test.c	/^void rlMultMatrixf(float *matf) { glMultMatrixf(matf); }$/;"	f	language:C	typeref:typename:void
rlMultMatrixf	test.c	/^void rlMultMatrixf(float *matf)$/;"	f	language:C	typeref:typename:void
rlNormal3f	test.c	/^RLAPI void rlNormal3f(float x, float y, float z);     \/\/ Define one vertex (normal) - 3 float$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlNormal3f	test.c	/^void rlNormal3f(float x, float y, float z) { glNormal3f(x, y, z); }$/;"	f	language:C	typeref:typename:void
rlNormal3f	test.c	/^void rlNormal3f(float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlOrtho	test.c	/^RLAPI void rlOrtho(double left, double right, double bottom, double top, double znear, double zf/;"	p	language:C	typeref:typename:RLAPI void	file:
rlOrtho	test.c	/^void rlOrtho(double left, double right, double bottom, double top, double znear, double zfar)$/;"	f	language:C	typeref:typename:void
rlOrtho	test.c	/^void rlOrtho(double left, double right, double bottom, double top, double znear, double zfar)$/;"	f	language:C	typeref:typename:void
rlPixelFormat	test.c	/^} rlPixelFormat;$/;"	t	language:C	typeref:enum:__anon1dda1bf60303	file:
rlPopMatrix	test.c	/^RLAPI void rlPopMatrix(void);                         \/\/ Pop lattest inserted matrix from stac/;"	p	language:C	typeref:typename:RLAPI void	file:
rlPopMatrix	test.c	/^void rlPopMatrix(void) { glPopMatrix(); }$/;"	f	language:C	typeref:typename:void
rlPopMatrix	test.c	/^void rlPopMatrix(void)$/;"	f	language:C	typeref:typename:void
rlPushMatrix	test.c	/^RLAPI void rlPushMatrix(void);                        \/\/ Push the current matrix to stack$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlPushMatrix	test.c	/^void rlPushMatrix(void) { glPushMatrix(); }$/;"	f	language:C	typeref:typename:void
rlPushMatrix	test.c	/^void rlPushMatrix(void)$/;"	f	language:C	typeref:typename:void
rlReadScreenPixels	test.c	/^RLAPI unsigned char *rlReadScreenPixels(int width, int height);           \/\/ Read screen pixel/;"	p	language:C	typeref:typename:RLAPI unsigned char *	file:
rlReadScreenPixels	test.c	/^unsigned char *rlReadScreenPixels(int width, int height)$/;"	f	language:C	typeref:typename:unsigned char *
rlReadShaderBuffer	test.c	/^RLAPI void rlReadShaderBuffer(unsigned int id, void *dest, unsigned int count, unsigned int offs/;"	p	language:C	typeref:typename:RLAPI void	file:
rlReadShaderBuffer	test.c	/^void rlReadShaderBuffer(unsigned int id, void *dest, unsigned int count, unsigned int offset)$/;"	f	language:C	typeref:typename:void
rlReadTexturePixels	test.c	/^RLAPI void *rlReadTexturePixels(unsigned int id, int width, int height, int format);            /;"	p	language:C	typeref:typename:RLAPI void *	file:
rlReadTexturePixels	test.c	/^void *rlReadTexturePixels(unsigned int id, int width, int height, int format)$/;"	f	language:C	typeref:typename:void *
rlRenderBatch	test.c	/^typedef struct rlRenderBatch {$/;"	s	language:C	file:
rlRenderBatch	test.c	/^} rlRenderBatch;$/;"	t	language:C	typeref:struct:rlRenderBatch	file:
rlRotatef	test.c	/^RLAPI void rlRotatef(float angle, float x, float y, float z);  \/\/ Multiply the current matrix /;"	p	language:C	typeref:typename:RLAPI void	file:
rlRotatef	test.c	/^void rlRotatef(float angle, float x, float y, float z) { glRotatef(angle, x, y, z); }$/;"	f	language:C	typeref:typename:void
rlRotatef	test.c	/^void rlRotatef(float angle, float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlScalef	test.c	/^RLAPI void rlScalef(float x, float y, float z);       \/\/ Multiply the current matrix by a scal/;"	p	language:C	typeref:typename:RLAPI void	file:
rlScalef	test.c	/^void rlScalef(float x, float y, float z) { glScalef(x, y, z); }$/;"	f	language:C	typeref:typename:void
rlScalef	test.c	/^void rlScalef(float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlScissor	test.c	/^RLAPI void rlScissor(int x, int y, int width, int height); \/\/ Scissor test$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlScissor	test.c	/^void rlScissor(int x, int y, int width, int height) { glScissor(x, y, width, height); }$/;"	f	language:C	typeref:typename:void
rlSetBlendFactors	test.c	/^RLAPI void rlSetBlendFactors(int glSrcFactor, int glDstFactor, int glEquation); \/\/ Set blendin/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetBlendFactors	test.c	/^void rlSetBlendFactors(int glSrcFactor, int glDstFactor, int glEquation)$/;"	f	language:C	typeref:typename:void
rlSetBlendFactorsSeparate	test.c	/^RLAPI void rlSetBlendFactorsSeparate(int glSrcRGB, int glDstRGB, int glSrcAlpha, int glDstAlpha,/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetBlendFactorsSeparate	test.c	/^void rlSetBlendFactorsSeparate(int glSrcRGB, int glDstRGB, int glSrcAlpha, int glDstAlpha, int g/;"	f	language:C	typeref:typename:void
rlSetBlendMode	test.c	/^RLAPI void rlSetBlendMode(int mode);                    \/\/ Set blending mode$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetBlendMode	test.c	/^void rlSetBlendMode(int mode)$/;"	f	language:C	typeref:typename:void
rlSetFramebufferHeight	test.c	/^RLAPI void rlSetFramebufferHeight(int height);          \/\/ Set current framebuffer height$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetFramebufferHeight	test.c	/^void rlSetFramebufferHeight(int height)$/;"	f	language:C	typeref:typename:void
rlSetFramebufferWidth	test.c	/^RLAPI void rlSetFramebufferWidth(int width);            \/\/ Set current framebuffer width$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetFramebufferWidth	test.c	/^void rlSetFramebufferWidth(int width)$/;"	f	language:C	typeref:typename:void
rlSetLineWidth	test.c	/^RLAPI void rlSetLineWidth(float width);                 \/\/ Set the line drawing width$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetLineWidth	test.c	/^void rlSetLineWidth(float width) { glLineWidth(width); }$/;"	f	language:C	typeref:typename:void
rlSetMatrixModelview	test.c	/^RLAPI void rlSetMatrixModelview(Matrix view);                             \/\/ Set a custom mode/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetMatrixModelview	test.c	/^void rlSetMatrixModelview(Matrix view)$/;"	f	language:C	typeref:typename:void
rlSetMatrixProjection	test.c	/^RLAPI void rlSetMatrixProjection(Matrix proj);                            \/\/ Set a custom proj/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetMatrixProjection	test.c	/^void rlSetMatrixProjection(Matrix projection)$/;"	f	language:C	typeref:typename:void
rlSetMatrixProjectionStereo	test.c	/^RLAPI void rlSetMatrixProjectionStereo(Matrix right, Matrix left);        \/\/ Set eyes projecti/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetMatrixProjectionStereo	test.c	/^void rlSetMatrixProjectionStereo(Matrix right, Matrix left)$/;"	f	language:C	typeref:typename:void
rlSetMatrixViewOffsetStereo	test.c	/^RLAPI void rlSetMatrixViewOffsetStereo(Matrix right, Matrix left);        \/\/ Set eyes view off/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetMatrixViewOffsetStereo	test.c	/^void rlSetMatrixViewOffsetStereo(Matrix right, Matrix left)$/;"	f	language:C	typeref:typename:void
rlSetRenderBatchActive	test.c	/^RLAPI void rlSetRenderBatchActive(rlRenderBatch *batch);                    \/\/ Set the active /;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetRenderBatchActive	test.c	/^void rlSetRenderBatchActive(rlRenderBatch *batch)$/;"	f	language:C	typeref:typename:void
rlSetShader	test.c	/^RLAPI void rlSetShader(unsigned int id, int *locs);                             \/\/ Set shader /;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetShader	test.c	/^void rlSetShader(unsigned int id, int *locs)$/;"	f	language:C	typeref:typename:void
rlSetTexture	test.c	/^RLAPI void rlSetTexture(unsigned int id);               \/\/ Set current texture for render batc/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetTexture	test.c	/^void rlSetTexture(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlSetUniform	test.c	/^RLAPI void rlSetUniform(int locIndex, const void *value, int uniformType, int count);   \/\/ Set/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetUniform	test.c	/^void rlSetUniform(int locIndex, const void *value, int uniformType, int count)$/;"	f	language:C	typeref:typename:void
rlSetUniformMatrix	test.c	/^RLAPI void rlSetUniformMatrix(int locIndex, Matrix mat);                        \/\/ Set shader /;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetUniformMatrix	test.c	/^void rlSetUniformMatrix(int locIndex, Matrix mat)$/;"	f	language:C	typeref:typename:void
rlSetUniformSampler	test.c	/^RLAPI void rlSetUniformSampler(int locIndex, unsigned int textureId);           \/\/ Set shader /;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetUniformSampler	test.c	/^void rlSetUniformSampler(int locIndex, unsigned int textureId)$/;"	f	language:C	typeref:typename:void
rlSetVertexAttribute	test.c	/^RLAPI void rlSetVertexAttribute(unsigned int index, int compSize, int type, bool normalized, int/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetVertexAttribute	test.c	/^void rlSetVertexAttribute(unsigned int index, int compSize, int type, bool normalized, int strid/;"	f	language:C	typeref:typename:void
rlSetVertexAttributeDefault	test.c	/^RLAPI void rlSetVertexAttributeDefault(int locIndex, const void *value, int attribType, int coun/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetVertexAttributeDefault	test.c	/^void rlSetVertexAttributeDefault(int locIndex, const void *value, int attribType, int count)$/;"	f	language:C	typeref:typename:void
rlSetVertexAttributeDivisor	test.c	/^RLAPI void rlSetVertexAttributeDivisor(unsigned int index, int divisor);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlSetVertexAttributeDivisor	test.c	/^void rlSetVertexAttributeDivisor(unsigned int index, int divisor)$/;"	f	language:C	typeref:typename:void
rlShaderAttributeDataType	test.c	/^} rlShaderAttributeDataType;$/;"	t	language:C	typeref:enum:__anon1dda1bf60803	file:
rlShaderLocationIndex	test.c	/^} rlShaderLocationIndex;$/;"	t	language:C	typeref:enum:__anon1dda1bf60603	file:
rlShaderUniformDataType	test.c	/^} rlShaderUniformDataType;$/;"	t	language:C	typeref:enum:__anon1dda1bf60703	file:
rlTexCoord2f	test.c	/^RLAPI void rlTexCoord2f(float x, float y);            \/\/ Define one vertex (texture coordinate/;"	p	language:C	typeref:typename:RLAPI void	file:
rlTexCoord2f	test.c	/^void rlTexCoord2f(float x, float y) { glTexCoord2f(x, y); }$/;"	f	language:C	typeref:typename:void
rlTexCoord2f	test.c	/^void rlTexCoord2f(float x, float y)$/;"	f	language:C	typeref:typename:void
rlTextureFilter	test.c	/^} rlTextureFilter;$/;"	t	language:C	typeref:enum:__anon1dda1bf60403	file:
rlTextureParameters	test.c	/^RLAPI void rlTextureParameters(unsigned int id, int param, int value); \/\/ Set texture paramete/;"	p	language:C	typeref:typename:RLAPI void	file:
rlTextureParameters	test.c	/^void rlTextureParameters(unsigned int id, int param, int value)$/;"	f	language:C	typeref:typename:void
rlTraceLogLevel	test.c	/^} rlTraceLogLevel;$/;"	t	language:C	typeref:enum:__anon1dda1bf60203	file:
rlTranslatef	test.c	/^RLAPI void rlTranslatef(float x, float y, float z);   \/\/ Multiply the current matrix by a tran/;"	p	language:C	typeref:typename:RLAPI void	file:
rlTranslatef	test.c	/^void rlTranslatef(float x, float y, float z) { glTranslatef(x, y, z); }$/;"	f	language:C	typeref:typename:void
rlTranslatef	test.c	/^void rlTranslatef(float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlUnloadFramebuffer	test.c	/^RLAPI void rlUnloadFramebuffer(unsigned int id);                          \/\/ Delete framebuffe/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadFramebuffer	test.c	/^void rlUnloadFramebuffer(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlUnloadRenderBatch	test.c	/^RLAPI void rlUnloadRenderBatch(rlRenderBatch batch);                        \/\/ Unload render b/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadRenderBatch	test.c	/^void rlUnloadRenderBatch(rlRenderBatch batch)$/;"	f	language:C	typeref:typename:void
rlUnloadShaderBuffer	test.c	/^RLAPI void rlUnloadShaderBuffer(unsigned int ssboId);                           \/\/ Unload shad/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadShaderBuffer	test.c	/^void rlUnloadShaderBuffer(unsigned int ssboId)$/;"	f	language:C	typeref:typename:void
rlUnloadShaderDefault	test.c	/^static void rlUnloadShaderDefault(void)$/;"	f	language:C	typeref:typename:void	file:
rlUnloadShaderDefault	test.c	/^static void rlUnloadShaderDefault(void);    \/\/ Unload default shader$/;"	p	language:C	typeref:typename:void	file:
rlUnloadShaderProgram	test.c	/^RLAPI void rlUnloadShaderProgram(unsigned int id);                              \/\/ Unload shad/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadShaderProgram	test.c	/^void rlUnloadShaderProgram(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlUnloadTexture	test.c	/^RLAPI void rlUnloadTexture(unsigned int id);                              \/\/ Unload texture fr/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadTexture	test.c	/^void rlUnloadTexture(unsigned int id)$/;"	f	language:C	typeref:typename:void
rlUnloadVertexArray	test.c	/^RLAPI void rlUnloadVertexArray(unsigned int vaoId);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadVertexArray	test.c	/^void rlUnloadVertexArray(unsigned int vaoId)$/;"	f	language:C	typeref:typename:void
rlUnloadVertexBuffer	test.c	/^RLAPI void rlUnloadVertexBuffer(unsigned int vboId);$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUnloadVertexBuffer	test.c	/^void rlUnloadVertexBuffer(unsigned int vboId)$/;"	f	language:C	typeref:typename:void
rlUpdateShaderBuffer	test.c	/^RLAPI void rlUpdateShaderBuffer(unsigned int id, const void *data, unsigned int dataSize, unsign/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUpdateShaderBuffer	test.c	/^void rlUpdateShaderBuffer(unsigned int id, const void *data, unsigned int dataSize, unsigned int/;"	f	language:C	typeref:typename:void
rlUpdateTexture	test.c	/^RLAPI void rlUpdateTexture(unsigned int id, int offsetX, int offsetY, int width, int height, int/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUpdateTexture	test.c	/^void rlUpdateTexture(unsigned int id, int offsetX, int offsetY, int width, int height, int forma/;"	f	language:C	typeref:typename:void
rlUpdateVertexBuffer	test.c	/^RLAPI void rlUpdateVertexBuffer(unsigned int bufferId, const void *data, int dataSize, int offse/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUpdateVertexBuffer	test.c	/^void rlUpdateVertexBuffer(unsigned int id, const void *data, int dataSize, int offset)$/;"	f	language:C	typeref:typename:void
rlUpdateVertexBufferElements	test.c	/^RLAPI void rlUpdateVertexBufferElements(unsigned int id, const void *data, int dataSize, int off/;"	p	language:C	typeref:typename:RLAPI void	file:
rlUpdateVertexBufferElements	test.c	/^void rlUpdateVertexBufferElements(unsigned int id, const void *data, int dataSize, int offset)$/;"	f	language:C	typeref:typename:void
rlVertex2f	test.c	/^RLAPI void rlVertex2f(float x, float y);              \/\/ Define one vertex (position) - 2 floa/;"	p	language:C	typeref:typename:RLAPI void	file:
rlVertex2f	test.c	/^void rlVertex2f(float x, float y) { glVertex2f(x, y); }$/;"	f	language:C	typeref:typename:void
rlVertex2f	test.c	/^void rlVertex2f(float x, float y)$/;"	f	language:C	typeref:typename:void
rlVertex2i	test.c	/^RLAPI void rlVertex2i(int x, int y);                  \/\/ Define one vertex (position) - 2 int$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlVertex2i	test.c	/^void rlVertex2i(int x, int y) { glVertex2i(x, y); }$/;"	f	language:C	typeref:typename:void
rlVertex2i	test.c	/^void rlVertex2i(int x, int y)$/;"	f	language:C	typeref:typename:void
rlVertex3f	test.c	/^RLAPI void rlVertex3f(float x, float y, float z);     \/\/ Define one vertex (position) - 3 floa/;"	p	language:C	typeref:typename:RLAPI void	file:
rlVertex3f	test.c	/^void rlVertex3f(float x, float y, float z) { glVertex3f(x, y, z); }$/;"	f	language:C	typeref:typename:void
rlVertex3f	test.c	/^void rlVertex3f(float x, float y, float z)$/;"	f	language:C	typeref:typename:void
rlVertexBuffer	test.c	/^typedef struct rlVertexBuffer {$/;"	s	language:C	file:
rlVertexBuffer	test.c	/^} rlVertexBuffer;$/;"	t	language:C	typeref:struct:rlVertexBuffer	file:
rlViewport	test.c	/^RLAPI void rlViewport(int x, int y, int width, int height); \/\/ Set the viewport area$/;"	p	language:C	typeref:typename:RLAPI void	file:
rlViewport	test.c	/^void rlViewport(int x, int y, int width, int height)$/;"	f	language:C	typeref:typename:void
RL_ATTACHMENT_COLOR_CHANNEL0	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL0 = 0,   \/\/ Framebuffer attachmment type: color 0$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL1	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL1,       \/\/ Framebuffer attachmment type: color 1$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL2	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL2,       \/\/ Framebuffer attachmment type: color 2$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL3	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL3,       \/\/ Framebuffer attachmment type: color 3$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL4	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL4,       \/\/ Framebuffer attachmment type: color 4$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL5	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL5,       \/\/ Framebuffer attachmment type: color 5$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL6	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL6,       \/\/ Framebuffer attachmment type: color 6$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_COLOR_CHANNEL7	test.c	/^    RL_ATTACHMENT_COLOR_CHANNEL7,       \/\/ Framebuffer attachmment type: color 7$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_CUBEMAP_NEGATIVE_X	test.c	/^    RL_ATTACHMENT_CUBEMAP_NEGATIVE_X,   \/\/ Framebuffer texture attachment type: cubemap, -X si/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_CUBEMAP_NEGATIVE_Y	test.c	/^    RL_ATTACHMENT_CUBEMAP_NEGATIVE_Y,   \/\/ Framebuffer texture attachment type: cubemap, -Y si/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_CUBEMAP_NEGATIVE_Z	test.c	/^    RL_ATTACHMENT_CUBEMAP_NEGATIVE_Z,   \/\/ Framebuffer texture attachment type: cubemap, -Z si/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_CUBEMAP_POSITIVE_X	test.c	/^    RL_ATTACHMENT_CUBEMAP_POSITIVE_X = 0, \/\/ Framebuffer texture attachment type: cubemap, +X /;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_CUBEMAP_POSITIVE_Y	test.c	/^    RL_ATTACHMENT_CUBEMAP_POSITIVE_Y,   \/\/ Framebuffer texture attachment type: cubemap, +Y si/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_CUBEMAP_POSITIVE_Z	test.c	/^    RL_ATTACHMENT_CUBEMAP_POSITIVE_Z,   \/\/ Framebuffer texture attachment type: cubemap, +Z si/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_DEPTH	test.c	/^    RL_ATTACHMENT_DEPTH = 100,          \/\/ Framebuffer attachmment type: depth$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_RENDERBUFFER	test.c	/^    RL_ATTACHMENT_RENDERBUFFER = 200,   \/\/ Framebuffer texture attachment type: renderbuffer$/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_ATTACHMENT_STENCIL	test.c	/^    RL_ATTACHMENT_STENCIL = 200,        \/\/ Framebuffer attachmment type: stencil$/;"	e	language:C	enum:__anon1dda1bf60903	file:
RL_ATTACHMENT_TEXTURE2D	test.c	/^    RL_ATTACHMENT_TEXTURE2D = 100,      \/\/ Framebuffer texture attachment type: texture2d$/;"	e	language:C	enum:__anon1dda1bf60a03	file:
RL_BLEND_ADDITIVE	test.c	/^    RL_BLEND_ADDITIVE,                  \/\/ Blend textures adding colors$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_ADD_COLORS	test.c	/^    RL_BLEND_ADD_COLORS,                \/\/ Blend textures adding colors (alternative)$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_ALPHA	test.c	/^    RL_BLEND_ALPHA = 0,                 \/\/ Blend textures considering alpha (default)$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_ALPHA_PREMULTIPLY	test.c	/^    RL_BLEND_ALPHA_PREMULTIPLY,         \/\/ Blend premultiplied textures considering alpha$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_CUSTOM	test.c	/^    RL_BLEND_CUSTOM,                    \/\/ Blend textures using custom src\/dst factors (use r/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_CUSTOM_SEPARATE	test.c	/^    RL_BLEND_CUSTOM_SEPARATE            \/\/ Blend textures using custom src\/dst factors (use r/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_MULTIPLIED	test.c	/^    RL_BLEND_MULTIPLIED,                \/\/ Blend textures multiplying colors$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_BLEND_SUBTRACT_COLORS	test.c	/^    RL_BLEND_SUBTRACT_COLORS,           \/\/ Blend textures subtracting colors (alternative)$/;"	e	language:C	enum:__anon1dda1bf60503	file:
RL_CALLOC	test.c	/^    #define RL_CALLOC(/;"	d	language:C	file:
RL_COMPUTE_SHADER	test.c	/^#define RL_COMPUTE_SHADER /;"	d	language:C	file:
RL_CULL_DISTANCE_FAR	test.c	/^    #define RL_CULL_DISTANCE_FAR /;"	d	language:C	file:
RL_CULL_DISTANCE_NEAR	test.c	/^    #define RL_CULL_DISTANCE_NEAR /;"	d	language:C	file:
RL_DEFAULT_BATCH_BUFFERS	test.c	/^    #define RL_DEFAULT_BATCH_BUFFERS /;"	d	language:C	file:
RL_DEFAULT_BATCH_BUFFER_ELEMENTS	test.c	/^        #define RL_DEFAULT_BATCH_BUFFER_ELEMENTS /;"	d	language:C	file:
RL_DEFAULT_BATCH_BUFFER_ELEMENTS	test.c	/^        #define RL_DEFAULT_BATCH_BUFFER_ELEMENTS /;"	d	language:C	file:
RL_DEFAULT_BATCH_DRAWCALLS	test.c	/^    #define RL_DEFAULT_BATCH_DRAWCALLS /;"	d	language:C	file:
RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS	test.c	/^    #define RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_COLOR	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_COLOR /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_NORMAL	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_NORMAL /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_POSITION	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_POSITION /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_TANGENT	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_TANGENT /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_TEXCOORD	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_TEXCOORD /;"	d	language:C	file:
RL_DEFAULT_SHADER_ATTRIB_NAME_TEXCOORD2	test.c	/^    #define RL_DEFAULT_SHADER_ATTRIB_NAME_TEXCOORD2 /;"	d	language:C	file:
RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE0	test.c	/^    #define RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE0 /;"	d	language:C	file:
RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE1	test.c	/^    #define RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE1 /;"	d	language:C	file:
RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE2	test.c	/^    #define RL_DEFAULT_SHADER_SAMPLER2D_NAME_TEXTURE2 /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_COLOR	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_COLOR /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_MODEL	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_MODEL /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_MVP	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_MVP /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_NORMAL	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_NORMAL /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_PROJECTION	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_PROJECTION /;"	d	language:C	file:
RL_DEFAULT_SHADER_UNIFORM_NAME_VIEW	test.c	/^    #define RL_DEFAULT_SHADER_UNIFORM_NAME_VIEW /;"	d	language:C	file:
RL_DYNAMIC_COPY	test.c	/^#define RL_DYNAMIC_COPY /;"	d	language:C	file:
RL_DYNAMIC_DRAW	test.c	/^#define RL_DYNAMIC_DRAW /;"	d	language:C	file:
RL_DYNAMIC_READ	test.c	/^#define RL_DYNAMIC_READ /;"	d	language:C	file:
RL_FLOAT	test.c	/^#define RL_FLOAT /;"	d	language:C	file:
RL_FRAGMENT_SHADER	test.c	/^#define RL_FRAGMENT_SHADER /;"	d	language:C	file:
RL_FREE	test.c	/^    #define RL_FREE(/;"	d	language:C	file:
RL_LINES	test.c	/^#define RL_LINES /;"	d	language:C	file:
RL_LOG_ALL	test.c	/^    RL_LOG_ALL = 0,             \/\/ Display all logs$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_DEBUG	test.c	/^    RL_LOG_DEBUG,               \/\/ Debug logging, used for internal debugging, it should be di/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_ERROR	test.c	/^    RL_LOG_ERROR,               \/\/ Error logging, used on unrecoverable failures$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_FATAL	test.c	/^    RL_LOG_FATAL,               \/\/ Fatal logging, used to abort program: exit(EXIT_FAILURE)$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_INFO	test.c	/^    RL_LOG_INFO,                \/\/ Info logging, used for program execution info$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_NONE	test.c	/^    RL_LOG_NONE                 \/\/ Disable logging$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_TRACE	test.c	/^    RL_LOG_TRACE,               \/\/ Trace logging, intended for internal use only$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_LOG_WARNING	test.c	/^    RL_LOG_WARNING,             \/\/ Warning logging, used on recoverable failures$/;"	e	language:C	enum:__anon1dda1bf60203	file:
RL_MALLOC	test.c	/^    #define RL_MALLOC(/;"	d	language:C	file:
RL_MATRIX_TYPE	test.c	/^#define RL_MATRIX_TYPE$/;"	d	language:C	file:
RL_MAX_MATRIX_STACK_SIZE	test.c	/^    #define RL_MAX_MATRIX_STACK_SIZE /;"	d	language:C	file:
RL_MAX_SHADER_LOCATIONS	test.c	/^    #define RL_MAX_SHADER_LOCATIONS /;"	d	language:C	file:
RL_MODELVIEW	test.c	/^#define RL_MODELVIEW /;"	d	language:C	file:
RL_OPENGL_11	test.c	/^    RL_OPENGL_11 = 1,           \/\/ OpenGL 1.1$/;"	e	language:C	enum:__anon1dda1bf60103	file:
RL_OPENGL_21	test.c	/^    RL_OPENGL_21,               \/\/ OpenGL 2.1 (GLSL 120)$/;"	e	language:C	enum:__anon1dda1bf60103	file:
RL_OPENGL_33	test.c	/^    RL_OPENGL_33,               \/\/ OpenGL 3.3 (GLSL 330)$/;"	e	language:C	enum:__anon1dda1bf60103	file:
RL_OPENGL_43	test.c	/^    RL_OPENGL_43,               \/\/ OpenGL 4.3 (using GLSL 330)$/;"	e	language:C	enum:__anon1dda1bf60103	file:
RL_OPENGL_ES_20	test.c	/^    RL_OPENGL_ES_20             \/\/ OpenGL ES 2.0 (GLSL 100)$/;"	e	language:C	enum:__anon1dda1bf60103	file:
RL_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,       \/\/ 8 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA        \/\/ 2 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_DXT1_RGB	test.c	/^    RL_PIXELFORMAT_COMPRESSED_DXT1_RGB,            \/\/ 4 bpp (no alpha)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_DXT1_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_DXT1_RGBA,           \/\/ 4 bpp (1 bit alpha)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_DXT3_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_DXT3_RGBA,           \/\/ 8 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_DXT5_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_DXT5_RGBA,           \/\/ 8 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_ETC1_RGB	test.c	/^    RL_PIXELFORMAT_COMPRESSED_ETC1_RGB,            \/\/ 4 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,       \/\/ 8 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_ETC2_RGB	test.c	/^    RL_PIXELFORMAT_COMPRESSED_ETC2_RGB,            \/\/ 4 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_PVRT_RGB	test.c	/^    RL_PIXELFORMAT_COMPRESSED_PVRT_RGB,            \/\/ 4 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_COMPRESSED_PVRT_RGBA	test.c	/^    RL_PIXELFORMAT_COMPRESSED_PVRT_RGBA,           \/\/ 4 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1,     \/\/ 8 bit per pixel (no alpha)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,        \/\/ 8*2 bpp (2 channels)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R32	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R32,               \/\/ 32 bpp (1 channel - float)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32,         \/\/ 32*3 bpp (3 channels - float)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,      \/\/ 32*4 bpp (4 channels - float)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,          \/\/ 16 bpp (4 bit alpha)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,          \/\/ 16 bpp (1 bit alpha)$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R5G6B5	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R5G6B5,            \/\/ 16 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8,            \/\/ 24 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8	test.c	/^    RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,          \/\/ 32 bpp$/;"	e	language:C	enum:__anon1dda1bf60303	file:
RL_PROJECTION	test.c	/^#define RL_PROJECTION /;"	d	language:C	file:
RL_QUADS	test.c	/^#define RL_QUADS /;"	d	language:C	file:
RL_REALLOC	test.c	/^    #define RL_REALLOC(/;"	d	language:C	file:
RL_SHADER_ATTRIB_FLOAT	test.c	/^    RL_SHADER_ATTRIB_FLOAT = 0,         \/\/ Shader attribute type: float$/;"	e	language:C	enum:__anon1dda1bf60803	file:
RL_SHADER_ATTRIB_VEC2	test.c	/^    RL_SHADER_ATTRIB_VEC2,              \/\/ Shader attribute type: vec2 (2 float)$/;"	e	language:C	enum:__anon1dda1bf60803	file:
RL_SHADER_ATTRIB_VEC3	test.c	/^    RL_SHADER_ATTRIB_VEC3,              \/\/ Shader attribute type: vec3 (3 float)$/;"	e	language:C	enum:__anon1dda1bf60803	file:
RL_SHADER_ATTRIB_VEC4	test.c	/^    RL_SHADER_ATTRIB_VEC4               \/\/ Shader attribute type: vec4 (4 float)$/;"	e	language:C	enum:__anon1dda1bf60803	file:
RL_SHADER_LOC_COLOR_AMBIENT	test.c	/^    RL_SHADER_LOC_COLOR_AMBIENT,        \/\/ Shader location: vector uniform: ambient color$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_COLOR_DIFFUSE	test.c	/^    RL_SHADER_LOC_COLOR_DIFFUSE,        \/\/ Shader location: vector uniform: diffuse color$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_COLOR_SPECULAR	test.c	/^    RL_SHADER_LOC_COLOR_SPECULAR,       \/\/ Shader location: vector uniform: specular color$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_ALBEDO	test.c	/^    RL_SHADER_LOC_MAP_ALBEDO,           \/\/ Shader location: sampler2d texture: albedo (same as/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_BRDF	test.c	/^    RL_SHADER_LOC_MAP_BRDF              \/\/ Shader location: sampler2d texture: brdf$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_CUBEMAP	test.c	/^    RL_SHADER_LOC_MAP_CUBEMAP,          \/\/ Shader location: samplerCube texture: cubemap$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_DIFFUSE	test.c	/^#define RL_SHADER_LOC_MAP_DIFFUSE /;"	d	language:C	file:
RL_SHADER_LOC_MAP_EMISSION	test.c	/^    RL_SHADER_LOC_MAP_EMISSION,         \/\/ Shader location: sampler2d texture: emission$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_HEIGHT	test.c	/^    RL_SHADER_LOC_MAP_HEIGHT,           \/\/ Shader location: sampler2d texture: height$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_IRRADIANCE	test.c	/^    RL_SHADER_LOC_MAP_IRRADIANCE,       \/\/ Shader location: samplerCube texture: irradiance$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_METALNESS	test.c	/^    RL_SHADER_LOC_MAP_METALNESS,        \/\/ Shader location: sampler2d texture: metalness (same/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_NORMAL	test.c	/^    RL_SHADER_LOC_MAP_NORMAL,           \/\/ Shader location: sampler2d texture: normal$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_OCCLUSION	test.c	/^    RL_SHADER_LOC_MAP_OCCLUSION,        \/\/ Shader location: sampler2d texture: occlusion$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_PREFILTER	test.c	/^    RL_SHADER_LOC_MAP_PREFILTER,        \/\/ Shader location: samplerCube texture: prefilter$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_ROUGHNESS	test.c	/^    RL_SHADER_LOC_MAP_ROUGHNESS,        \/\/ Shader location: sampler2d texture: roughness$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MAP_SPECULAR	test.c	/^#define RL_SHADER_LOC_MAP_SPECULAR /;"	d	language:C	file:
RL_SHADER_LOC_MATRIX_MODEL	test.c	/^    RL_SHADER_LOC_MATRIX_MODEL,         \/\/ Shader location: matrix uniform: model (transform)$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MATRIX_MVP	test.c	/^    RL_SHADER_LOC_MATRIX_MVP,           \/\/ Shader location: matrix uniform: model-view-project/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MATRIX_NORMAL	test.c	/^    RL_SHADER_LOC_MATRIX_NORMAL,        \/\/ Shader location: matrix uniform: normal$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MATRIX_PROJECTION	test.c	/^    RL_SHADER_LOC_MATRIX_PROJECTION,    \/\/ Shader location: matrix uniform: projection$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_MATRIX_VIEW	test.c	/^    RL_SHADER_LOC_MATRIX_VIEW,          \/\/ Shader location: matrix uniform: view (camera trans/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VECTOR_VIEW	test.c	/^    RL_SHADER_LOC_VECTOR_VIEW,          \/\/ Shader location: vector uniform: view$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_COLOR	test.c	/^    RL_SHADER_LOC_VERTEX_COLOR,         \/\/ Shader location: vertex attribute: color$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_NORMAL	test.c	/^    RL_SHADER_LOC_VERTEX_NORMAL,        \/\/ Shader location: vertex attribute: normal$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_POSITION	test.c	/^    RL_SHADER_LOC_VERTEX_POSITION = 0,  \/\/ Shader location: vertex attribute: position$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_TANGENT	test.c	/^    RL_SHADER_LOC_VERTEX_TANGENT,       \/\/ Shader location: vertex attribute: tangent$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_TEXCOORD01	test.c	/^    RL_SHADER_LOC_VERTEX_TEXCOORD01,    \/\/ Shader location: vertex attribute: texcoord01$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_LOC_VERTEX_TEXCOORD02	test.c	/^    RL_SHADER_LOC_VERTEX_TEXCOORD02,    \/\/ Shader location: vertex attribute: texcoord02$/;"	e	language:C	enum:__anon1dda1bf60603	file:
RL_SHADER_UNIFORM_FLOAT	test.c	/^    RL_SHADER_UNIFORM_FLOAT = 0,        \/\/ Shader uniform type: float$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_INT	test.c	/^    RL_SHADER_UNIFORM_INT,              \/\/ Shader uniform type: int$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_IVEC2	test.c	/^    RL_SHADER_UNIFORM_IVEC2,            \/\/ Shader uniform type: ivec2 (2 int)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_IVEC3	test.c	/^    RL_SHADER_UNIFORM_IVEC3,            \/\/ Shader uniform type: ivec3 (3 int)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_IVEC4	test.c	/^    RL_SHADER_UNIFORM_IVEC4,            \/\/ Shader uniform type: ivec4 (4 int)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_SAMPLER2D	test.c	/^    RL_SHADER_UNIFORM_SAMPLER2D         \/\/ Shader uniform type: sampler2d$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_VEC2	test.c	/^    RL_SHADER_UNIFORM_VEC2,             \/\/ Shader uniform type: vec2 (2 float)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_VEC3	test.c	/^    RL_SHADER_UNIFORM_VEC3,             \/\/ Shader uniform type: vec3 (3 float)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_SHADER_UNIFORM_VEC4	test.c	/^    RL_SHADER_UNIFORM_VEC4,             \/\/ Shader uniform type: vec4 (4 float)$/;"	e	language:C	enum:__anon1dda1bf60703	file:
RL_STATIC_COPY	test.c	/^#define RL_STATIC_COPY /;"	d	language:C	file:
RL_STATIC_DRAW	test.c	/^#define RL_STATIC_DRAW /;"	d	language:C	file:
RL_STATIC_READ	test.c	/^#define RL_STATIC_READ /;"	d	language:C	file:
RL_STREAM_COPY	test.c	/^#define RL_STREAM_COPY /;"	d	language:C	file:
RL_STREAM_DRAW	test.c	/^#define RL_STREAM_DRAW /;"	d	language:C	file:
RL_STREAM_READ	test.c	/^#define RL_STREAM_READ /;"	d	language:C	file:
RL_TEXTURE	test.c	/^#define RL_TEXTURE /;"	d	language:C	file:
RL_TEXTURE_FILTER_ANISOTROPIC	test.c	/^#define RL_TEXTURE_FILTER_ANISOTROPIC /;"	d	language:C	file:
RL_TEXTURE_FILTER_ANISOTROPIC_16X	test.c	/^    RL_TEXTURE_FILTER_ANISOTROPIC_16X,  \/\/ Anisotropic filtering 16x$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_FILTER_ANISOTROPIC_4X	test.c	/^    RL_TEXTURE_FILTER_ANISOTROPIC_4X,   \/\/ Anisotropic filtering 4x$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_FILTER_ANISOTROPIC_8X	test.c	/^    RL_TEXTURE_FILTER_ANISOTROPIC_8X,   \/\/ Anisotropic filtering 8x$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_FILTER_BILINEAR	test.c	/^    RL_TEXTURE_FILTER_BILINEAR,         \/\/ Linear filtering$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_FILTER_LINEAR	test.c	/^#define RL_TEXTURE_FILTER_LINEAR /;"	d	language:C	file:
RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST	test.c	/^#define RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST /;"	d	language:C	file:
RL_TEXTURE_FILTER_MIP_LINEAR	test.c	/^#define RL_TEXTURE_FILTER_MIP_LINEAR /;"	d	language:C	file:
RL_TEXTURE_FILTER_MIP_NEAREST	test.c	/^#define RL_TEXTURE_FILTER_MIP_NEAREST /;"	d	language:C	file:
RL_TEXTURE_FILTER_NEAREST	test.c	/^#define RL_TEXTURE_FILTER_NEAREST /;"	d	language:C	file:
RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR	test.c	/^#define RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR /;"	d	language:C	file:
RL_TEXTURE_FILTER_POINT	test.c	/^    RL_TEXTURE_FILTER_POINT = 0,        \/\/ No filter, just pixel approximation$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_FILTER_TRILINEAR	test.c	/^    RL_TEXTURE_FILTER_TRILINEAR,        \/\/ Trilinear filtering (linear with mipmaps)$/;"	e	language:C	enum:__anon1dda1bf60403	file:
RL_TEXTURE_MAG_FILTER	test.c	/^#define RL_TEXTURE_MAG_FILTER /;"	d	language:C	file:
RL_TEXTURE_MIN_FILTER	test.c	/^#define RL_TEXTURE_MIN_FILTER /;"	d	language:C	file:
RL_TEXTURE_MIPMAP_BIAS_RATIO	test.c	/^#define RL_TEXTURE_MIPMAP_BIAS_RATIO /;"	d	language:C	file:
RL_TEXTURE_WRAP_CLAMP	test.c	/^#define RL_TEXTURE_WRAP_CLAMP /;"	d	language:C	file:
RL_TEXTURE_WRAP_MIRROR_CLAMP	test.c	/^#define RL_TEXTURE_WRAP_MIRROR_CLAMP /;"	d	language:C	file:
RL_TEXTURE_WRAP_MIRROR_REPEAT	test.c	/^#define RL_TEXTURE_WRAP_MIRROR_REPEAT /;"	d	language:C	file:
RL_TEXTURE_WRAP_REPEAT	test.c	/^#define RL_TEXTURE_WRAP_REPEAT /;"	d	language:C	file:
RL_TEXTURE_WRAP_S	test.c	/^#define RL_TEXTURE_WRAP_S /;"	d	language:C	file:
RL_TEXTURE_WRAP_T	test.c	/^#define RL_TEXTURE_WRAP_T /;"	d	language:C	file:
RL_TRIANGLES	test.c	/^#define RL_TRIANGLES /;"	d	language:C	file:
RL_UNSIGNED_BYTE	test.c	/^#define RL_UNSIGNED_BYTE /;"	d	language:C	file:
RL_VERTEX_SHADER	test.c	/^#define RL_VERTEX_SHADER /;"	d	language:C	file:
rng	code/game_mode_lit.h	/^  RNG rng;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:RNG
RNG	code/momo_rng.h	/^} RNG;$/;"	t	language:C++	typeref:struct:__anon54aa46c30108
rng	game_mode_lit.h	/^  RNG rng;$/;"	m	language:C++	struct:Lit	typeref:typename:RNG
RNG	momo_rng.h	/^} RNG;$/;"	t	language:C++	typeref:struct:__anon4e91b0990108
rng_bilateral	code/momo_rng.h	/^rng_bilateral(RNG* r)$/;"	f	language:C++	typeref:typename:F32
rng_bilateral	momo_rng.h	/^rng_bilateral(RNG* r)$/;"	f	language:C++	typeref:typename:F32
rng_choice	code/momo_rng.h	/^rng_choice(RNG* r, U32 choice_count) {$/;"	f	language:C++	typeref:typename:U32
rng_choice	momo_rng.h	/^rng_choice(RNG* r, U32 choice_count) {$/;"	f	language:C++	typeref:typename:U32
rng_create	code/momo_rng.h	/^rng_create(U32 seed)$/;"	f	language:C++	typeref:typename:RNG
rng_create	momo_rng.h	/^rng_create(U32 seed)$/;"	f	language:C++	typeref:typename:RNG
rng_next	code/momo_rng.h	/^rng_next(RNG* r)$/;"	f	language:C++	typeref:typename:U32
rng_next	momo_rng.h	/^rng_next(RNG* r)$/;"	f	language:C++	typeref:typename:U32
rng_range_F32	code/momo_rng.h	/^rng_range_F32(RNG* r, F32 min, F32 max)$/;"	f	language:C++	typeref:typename:F32
rng_range_F32	momo_rng.h	/^rng_range_F32(RNG* r, F32 min, F32 max)$/;"	f	language:C++	typeref:typename:F32
rng_range_S32	code/momo_rng.h	/^rng_range_S32(RNG* r, S32 min, S32 max)$/;"	f	language:C++	typeref:typename:S32
rng_range_S32	momo_rng.h	/^rng_range_S32(RNG* r, S32 min, S32 max)$/;"	f	language:C++	typeref:typename:S32
rng_range_U32	code/momo_rng.h	/^rng_range_U32(RNG* r, U32 min, U32 max)$/;"	f	language:C++	typeref:typename:U32
rng_range_U32	momo_rng.h	/^rng_range_U32(RNG* r, U32 min, U32 max)$/;"	f	language:C++	typeref:typename:U32
rng_unilateral	code/momo_rng.h	/^rng_unilateral(RNG* r)$/;"	f	language:C++	typeref:typename:F32
rng_unilateral	momo_rng.h	/^rng_unilateral(RNG* r)$/;"	f	language:C++	typeref:typename:F32
rng_unit_circle	code/momo_rng.h	/^rng_unit_circle(RNG* r) {$/;"	f	language:C++	typeref:typename:V2
rng_unit_circle	momo_rng.h	/^rng_unit_circle(RNG* r) {$/;"	f	language:C++	typeref:typename:V2
rot	code/game_gfx.h	/^  F32 rot;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:F32
rot	code/game_renderer.h	/^  F32 rot;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:F32
rot	game_gfx.h	/^  F32 rot;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:F32
round_f32	code/momo_intrinsics.h	/^static F32 round_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
round_f32	code/momo_intrinsics.h	/^static F32 round_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
round_f32	momo_intrinsics.h	/^static F32 round_f32(F32 value) {$/;"	f	language:C++	typeref:typename:F32
round_f32	momo_intrinsics.h	/^static F32 round_f32(F32 value);$/;"	p	language:C++	typeref:typename:F32
round_f64	code/momo_intrinsics.h	/^static F64 round_f64(F64 value) {$/;"	f	language:C++	typeref:typename:F64
round_f64	code/momo_intrinsics.h	/^static F64 round_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
round_f64	momo_intrinsics.h	/^static F64 round_f64(F64 value) {$/;"	f	language:C++	typeref:typename:F64
round_f64	momo_intrinsics.h	/^static F64 round_f64(F64 value);$/;"	p	language:C++	typeref:typename:F64
rp_pack	code/momo_rect_pack.h	/^rp_pack(RP_Rect* rects, $/;"	f	language:C++	typeref:typename:B32
rp_pack	code/momo_rect_pack.h	/^rp_pack(RP_Rect* rects, $/;"	p	language:C++	typeref:typename:B32
rp_pack	momo_rect_pack.h	/^rp_pack(RP_Rect* rects, $/;"	f	language:C++	typeref:typename:B32
rp_pack	momo_rect_pack.h	/^rp_pack(RP_Rect* rects, $/;"	p	language:C++	typeref:typename:B32
RP_Rect	code/momo_rect_pack.h	/^}RP_Rect;$/;"	t	language:C++	typeref:struct:__anonb69b67e80208
RP_Rect	momo_rect_pack.h	/^}RP_Rect;$/;"	t	language:C++	typeref:struct:__anon3ddc5a3e0208
RP_Sort_Type	code/momo_rect_pack.h	/^}RP_Sort_Type;$/;"	t	language:C++	typeref:enum:__anonb69b67e80103
RP_Sort_Type	momo_rect_pack.h	/^}RP_Sort_Type;$/;"	t	language:C++	typeref:enum:__anon3ddc5a3e0103
RP_SORT_TYPE_AREA	code/momo_rect_pack.h	/^  RP_SORT_TYPE_AREA,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_AREA	momo_rect_pack.h	/^  RP_SORT_TYPE_AREA,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
RP_SORT_TYPE_BIGGER_SIDE	code/momo_rect_pack.h	/^  RP_SORT_TYPE_BIGGER_SIDE,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_BIGGER_SIDE	momo_rect_pack.h	/^  RP_SORT_TYPE_BIGGER_SIDE,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
RP_SORT_TYPE_HEIGHT	code/momo_rect_pack.h	/^  RP_SORT_TYPE_HEIGHT,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_HEIGHT	momo_rect_pack.h	/^  RP_SORT_TYPE_HEIGHT,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
RP_SORT_TYPE_PATHOLOGICAL	code/momo_rect_pack.h	/^  RP_SORT_TYPE_PATHOLOGICAL,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_PATHOLOGICAL	momo_rect_pack.h	/^  RP_SORT_TYPE_PATHOLOGICAL,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
RP_SORT_TYPE_PERIMETER	code/momo_rect_pack.h	/^  RP_SORT_TYPE_PERIMETER,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_PERIMETER	momo_rect_pack.h	/^  RP_SORT_TYPE_PERIMETER,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
RP_SORT_TYPE_WIDTH	code/momo_rect_pack.h	/^  RP_SORT_TYPE_WIDTH,$/;"	e	language:C++	enum:__anonb69b67e80103
RP_SORT_TYPE_WIDTH	momo_rect_pack.h	/^  RP_SORT_TYPE_WIDTH,$/;"	e	language:C++	enum:__anon3ddc5a3e0103
s	code/momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonb89fa6ae0208	typeref:typename:F32
s	momo_colors.h	/^  F32 h, s, l;  $/;"	m	language:C++	struct:__anonf72fc8c40208	typeref:typename:F32
S16	code/momo_common.h	/^typedef int16_t S16;$/;"	t	language:C++	typeref:typename:int16_t
S16	momo_common.h	/^typedef int16_t S16;$/;"	t	language:C++	typeref:typename:int16_t
S16_MAX	code/momo_common.h	/^#define S16_MAX /;"	d	language:C++
S16_MAX	momo_common.h	/^#define S16_MAX /;"	d	language:C++
S16_MIN	code/momo_common.h	/^#define S16_MIN /;"	d	language:C++
S16_MIN	momo_common.h	/^#define S16_MIN /;"	d	language:C++
S32	code/momo_common.h	/^typedef int32_t S32;$/;"	t	language:C++	typeref:typename:int32_t
s32	code/momo_json.h	/^    S32 s32;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:S32
S32	momo_common.h	/^typedef int32_t S32;$/;"	t	language:C++	typeref:typename:int32_t
s32	momo_json.h	/^    S32 s32;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:S32
S32_MAX	code/momo_common.h	/^#define S32_MAX /;"	d	language:C++
S32_MAX	momo_common.h	/^#define S32_MAX /;"	d	language:C++
S32_MIN	code/momo_common.h	/^#define S32_MIN /;"	d	language:C++
S32_MIN	momo_common.h	/^#define S32_MIN /;"	d	language:C++
S64	code/momo_common.h	/^typedef int64_t S64;$/;"	t	language:C++	typeref:typename:int64_t
S64	momo_common.h	/^typedef int64_t S64;$/;"	t	language:C++	typeref:typename:int64_t
S64_MAX	code/momo_common.h	/^#define S64_MAX /;"	d	language:C++
S64_MAX	momo_common.h	/^#define S64_MAX /;"	d	language:C++
S64_MIN	code/momo_common.h	/^#define S64_MIN /;"	d	language:C++
S64_MIN	momo_common.h	/^#define S64_MIN /;"	d	language:C++
S8	code/momo_common.h	/^typedef int8_t S8;$/;"	t	language:C++	typeref:typename:int8_t
S8	momo_common.h	/^typedef int8_t S8;$/;"	t	language:C++	typeref:typename:int8_t
S8_MAX	code/momo_common.h	/^#define S8_MAX /;"	d	language:C++
S8_MAX	momo_common.h	/^#define S8_MAX /;"	d	language:C++
S8_MIN	code/momo_common.h	/^#define S8_MIN /;"	d	language:C++
S8_MIN	momo_common.h	/^#define S8_MIN /;"	d	language:C++
samples_per_second	code/w32_audio_wasapi.h	/^  U32 samples_per_second;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
samples_per_second	code/win_audio_wasapi.h	/^  U32 samples_per_second;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
samples_per_second	w32_audio_wasapi.h	/^  U32 samples_per_second;$/;"	m	language:C++	struct:Win_Wasapi	typeref:typename:U32
sample_buffer	code/game_platform.h	/^    S16* sample_buffer;$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:S16 *
sample_buffer	game_platform.h	/^    S16* sample_buffer;$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:S16 *
sample_count	code/game_platform.h	/^    U32 sample_count;$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:U32
sample_count	game_platform.h	/^    U32 sample_count;$/;"	m	language:C++	struct:Platform_Audio	typeref:typename:U32
sample_rate	code/momo_wav.h	/^  U32 sample_rate;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U32
sample_rate	momo_wav.h	/^  U32 sample_rate;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U32
SB1	.\code\game_sb1.h	/^struct SB1 {$/;"	s	language:C++
sb1_calc_ghost_edge_line	.\code\game_sb1.h	/^sb1_calc_ghost_edge_line(SB1_Point_List* points, SB1_Edge* e) {$/;"	f	language:C++
SB1_DEBUG_LIGHT	.\code\game_sb1.h	6;"	d	language:C++
SB1_Edge	.\code\game_sb1.h	/^struct SB1_Edge{$/;"	s	language:C++
SB1_Edge_List	.\code\game_sb1.h	/^struct SB1_Edge_List {$/;"	s	language:C++
sb1_gen_light_intersections	.\code\game_sb1.h	/^sb1_gen_light_intersections(SB1_Light* l,$/;"	f	language:C++
sb1_get_ray_intersection_time_wrt_edges	.\code\game_sb1.h	/^sb1_get_ray_intersection_time_wrt_edges(Ray2 ray,$/;"	f	language:C++
sb1_init	.\code\game_sb1.h	/^sb1_init(Game* game) $/;"	f	language:C++
SB1_Light	.\code\game_sb1.h	/^struct SB1_Light {$/;"	s	language:C++
SB1_Light_Debug_Ray_List	.\code\game_sb1.h	/^struct SB1_Light_Debug_Ray_List {$/;"	s	language:C++
SB1_Light_Intersection	.\code\game_sb1.h	/^struct SB1_Light_Intersection {$/;"	s	language:C++
SB1_Light_Intersection_List	.\code\game_sb1.h	/^struct SB1_Light_Intersection_List {$/;"	s	language:C++
SB1_Light_List	.\code\game_sb1.h	/^struct SB1_Light_List {$/;"	s	language:C++
SB1_Light_Triangle_List	.\code\game_sb1.h	/^struct SB1_Light_Triangle_List {$/;"	s	language:C++
SB1_Light_Type	.\code\game_sb1.h	/^enum SB1_Light_Type {$/;"	g	language:C++
SB1_LIGHT_TYPE_DIRECTIONAL	.\code\game_sb1.h	/^  SB1_LIGHT_TYPE_DIRECTIONAL,$/;"	e	language:C++	enum:SB1_Light_Type
SB1_LIGHT_TYPE_POINT	.\code\game_sb1.h	/^  SB1_LIGHT_TYPE_POINT,$/;"	e	language:C++	enum:SB1_Light_Type
SB1_LIGHT_TYPE_WEIRD	.\code\game_sb1.h	/^  SB1_LIGHT_TYPE_WEIRD$/;"	e	language:C++	enum:SB1_Light_Type
SB1_Player	.\code\game_sb1.h	/^struct SB1_Player {$/;"	s	language:C++
SB1_Point_List	.\code\game_sb1.h	/^struct SB1_Point_List {$/;"	s	language:C++
sb1_push_edge	.\code\game_sb1.h	/^sb1_push_edge(SB1* m, UMI min_pt_id, UMI max_pt_id) {$/;"	f	language:C++
sb1_push_light	.\code\game_sb1.h	/^sb1_push_light(SB1* m, V2 pos, U32 color, F32 angle, F32 facing) {$/;"	f	language:C++
sb1_push_point	.\code\game_sb1.h	/^sb1_push_point(SB1* m, V2 pt) {$/;"	f	language:C++
sb1_push_sensor	.\code\game_sb1.h	/^sb1_push_sensor(SB1* m, V2 pos, U32 target_color, $/;"	f	language:C++
sb1_push_triangle	.\code\game_sb1.h	/^sb1_push_triangle(SB1_Light* l, V2 p0, V2 p1, V2 p2, U32 color) {$/;"	f	language:C++
SB1_Sensor	.\code\game_sb1.h	/^struct SB1_Sensor {$/;"	s	language:C++
SB1_Sensor_List	.\code\game_sb1.h	/^struct SB1_Sensor_List {$/;"	s	language:C++
sb1_set_win_point	.\code\game_sb1.h	/^sb1_set_win_point(SB1* m, V2 pos) {$/;"	f	language:C++
sb1_tick	.\code\game_sb1.h	/^sb1_tick(Game* game,$/;"	f	language:C++
sb8_clear	code/momo_strings.h	/^sb8_clear(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:void
sb8_clear	code/momo_strings.h	/^static void     sb8_clear(String8_Builder* b);$/;"	p	language:C++	typeref:typename:void
sb8_clear	momo_strings.h	/^sb8_clear(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:void
sb8_clear	momo_strings.h	/^static void     sb8_clear(String8_Builder* b);$/;"	p	language:C++	typeref:typename:void
sb8_init	code/momo_strings.h	/^sb8_init(String8_Builder* b, U8* data, UMI cap) {$/;"	f	language:C++	typeref:typename:void
sb8_init	code/momo_strings.h	/^static void     sb8_init(String8_Builder* b, U8* data, UMI cap);$/;"	p	language:C++	typeref:typename:void
sb8_init	momo_strings.h	/^sb8_init(String8_Builder* b, U8* data, UMI cap) {$/;"	f	language:C++	typeref:typename:void
sb8_init	momo_strings.h	/^static void     sb8_init(String8_Builder* b, U8* data, UMI cap);$/;"	p	language:C++	typeref:typename:void
sb8_make	code/momo_strings.h	/^#define sb8_make(/;"	d	language:C++
sb8_make	momo_strings.h	/^#define sb8_make(/;"	d	language:C++
sb8_pop	code/momo_strings.h	/^sb8_pop(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:void
sb8_pop	code/momo_strings.h	/^static void     sb8_pop(String8_Builder* b);$/;"	p	language:C++	typeref:typename:void
sb8_pop	momo_strings.h	/^sb8_pop(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:void
sb8_pop	momo_strings.h	/^static void     sb8_pop(String8_Builder* b);$/;"	p	language:C++	typeref:typename:void
sb8_push_c8	code/momo_strings.h	/^sb8_push_c8(String8_Builder* b, C8 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_c8	code/momo_strings.h	/^static void     sb8_push_c8(String8_Builder* b, C8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_c8	momo_strings.h	/^sb8_push_c8(String8_Builder* b, C8 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_c8	momo_strings.h	/^static void     sb8_push_c8(String8_Builder* b, C8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_f32	code/momo_strings.h	/^sb8_push_f32(String8_Builder* b, F32 value, U32 precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_f32	code/momo_strings.h	/^static void     sb8_push_f32(String8_Builder* b, F32 value, U32 precision);$/;"	p	language:C++	typeref:typename:void
sb8_push_f32	momo_strings.h	/^sb8_push_f32(String8_Builder* b, F32 value, U32 precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_f32	momo_strings.h	/^static void     sb8_push_f32(String8_Builder* b, F32 value, U32 precision);$/;"	p	language:C++	typeref:typename:void
sb8_push_f64	code/momo_strings.h	/^sb8_push_f64(String8_Builder* b, F64 value, U32 precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_f64	momo_strings.h	/^sb8_push_f64(String8_Builder* b, F64 value, U32 precision) {$/;"	f	language:C++	typeref:typename:void
sb8_push_fmt	code/momo_strings.h	/^sb8_push_fmt(String8_Builder* b, String8 fmt, ...) {$/;"	f	language:C++	typeref:typename:void
sb8_push_fmt	code/momo_strings.h	/^static void     sb8_push_fmt(String8_Builder* b, String8 fmt, ...);$/;"	p	language:C++	typeref:typename:void
sb8_push_fmt	momo_strings.h	/^sb8_push_fmt(String8_Builder* b, String8 fmt, ...) {$/;"	f	language:C++	typeref:typename:void
sb8_push_fmt	momo_strings.h	/^static void     sb8_push_fmt(String8_Builder* b, String8 fmt, ...);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u32	code/momo_strings.h	/^sb8_push_hex_u32(String8_Builder* b, U32 value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u32	code/momo_strings.h	/^static void     sb8_push_hex_u32(String8_Builder* b, U32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u32	momo_strings.h	/^sb8_push_hex_u32(String8_Builder* b, U32 value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u32	momo_strings.h	/^static void     sb8_push_hex_u32(String8_Builder* b, U32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u8	code/momo_strings.h	/^sb8_push_hex_u8(String8_Builder* b, U8 value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u8	code/momo_strings.h	/^static void     sb8_push_hex_u8(String8_Builder* b, U8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_hex_u8	momo_strings.h	/^sb8_push_hex_u8(String8_Builder* b, U8 value) {$/;"	f	language:C++	typeref:typename:void
sb8_push_hex_u8	momo_strings.h	/^static void     sb8_push_hex_u8(String8_Builder* b, U8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s32	code/momo_strings.h	/^sb8_push_s32(String8_Builder* b, S32 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s32	code/momo_strings.h	/^static void     sb8_push_s32(String8_Builder* b, S32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s32	momo_strings.h	/^sb8_push_s32(String8_Builder* b, S32 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s32	momo_strings.h	/^static void     sb8_push_s32(String8_Builder* b, S32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s64	code/momo_strings.h	/^sb8_push_s64(String8_Builder* b, S64 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s64	code/momo_strings.h	/^static void     sb8_push_s64(String8_Builder* b, S64 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_s64	momo_strings.h	/^sb8_push_s64(String8_Builder* b, S64 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_s64	momo_strings.h	/^static void     sb8_push_s64(String8_Builder* b, S64 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_str8	code/momo_strings.h	/^sb8_push_str8(String8_Builder* b, String8 src) {$/;"	f	language:C++	typeref:typename:void
sb8_push_str8	code/momo_strings.h	/^static void     sb8_push_str8(String8_Builder* b, String8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_str8	momo_strings.h	/^sb8_push_str8(String8_Builder* b, String8 src) {$/;"	f	language:C++	typeref:typename:void
sb8_push_str8	momo_strings.h	/^static void     sb8_push_str8(String8_Builder* b, String8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u32	code/momo_strings.h	/^sb8_push_u32(String8_Builder* b, U32 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u32	code/momo_strings.h	/^static void     sb8_push_u32(String8_Builder* b, U32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u32	momo_strings.h	/^sb8_push_u32(String8_Builder* b, U32 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u32	momo_strings.h	/^static void     sb8_push_u32(String8_Builder* b, U32 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u64	code/momo_strings.h	/^sb8_push_u64(String8_Builder* b, U64 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u64	code/momo_strings.h	/^static void     sb8_push_u64(String8_Builder* b, U64 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u64	momo_strings.h	/^sb8_push_u64(String8_Builder* b, U64 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u64	momo_strings.h	/^static void     sb8_push_u64(String8_Builder* b, U64 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u8	code/momo_strings.h	/^sb8_push_u8(String8_Builder* b, U8 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u8	code/momo_strings.h	/^static void     sb8_push_u8(String8_Builder* b, U8 num);$/;"	p	language:C++	typeref:typename:void
sb8_push_u8	momo_strings.h	/^sb8_push_u8(String8_Builder* b, U8 num) {$/;"	f	language:C++	typeref:typename:void
sb8_push_u8	momo_strings.h	/^static void     sb8_push_u8(String8_Builder* b, U8 num);$/;"	p	language:C++	typeref:typename:void
sb8_remaining	code/momo_strings.h	/^sb8_remaining(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:UMI
sb8_remaining	code/momo_strings.h	/^static UMI      sb8_remaining(String8_Builder* b);$/;"	p	language:C++	typeref:typename:UMI
sb8_remaining	momo_strings.h	/^sb8_remaining(String8_Builder* b) {$/;"	f	language:C++	typeref:typename:UMI
sb8_remaining	momo_strings.h	/^static UMI      sb8_remaining(String8_Builder* b);$/;"	p	language:C++	typeref:typename:UMI
scope	code/momo_json.h	/^static U32 scope = 0;$/;"	v	language:C++	typeref:typename:U32
scope	momo_json.h	/^static U32 scope = 0;$/;"	v	language:C++	typeref:typename:U32
screen_mouse_pos	code/game_platform.h	/^  V2U screen_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2U
screen_mouse_pos	game_platform.h	/^  V2U screen_mouse_pos;$/;"	m	language:C++	struct:Platform	typeref:typename:V2U
seconds_since_last_frame	code/game_platform.h	/^  F32 seconds_since_last_frame; \/\/aka dt$/;"	m	language:C++	struct:Platform	typeref:typename:F32
seconds_since_last_frame	game_platform.h	/^  F32 seconds_since_last_frame; \/\/aka dt$/;"	m	language:C++	struct:Platform	typeref:typename:F32
selected_id	code/game_mode_computer.h	/^  U32 selected_id;$/;"	m	language:C++	struct:__anond0a24e910308	typeref:typename:U32
selected_id	game_mode_computer.h	/^  U32 selected_id;$/;"	m	language:C++	struct:__anon19207be70308	typeref:typename:U32
selected_pt_index	code/game_mode_level_editor.h	/^  UMI selected_pt_index;$/;"	m	language:C++	struct:Editor	typeref:typename:UMI
selected_pt_index	game_mode_level_editor.h	/^  UMI selected_pt_index;$/;"	m	language:C++	struct:Editor	typeref:typename:UMI
selection_list	code/game_mode_computer.h	/^  Computer_Selection_List selection_list;$/;"	m	language:C++	struct:__anond0a24e910308	typeref:typename:Computer_Selection_List
selection_list	game_mode_computer.h	/^  Computer_Selection_List selection_list;$/;"	m	language:C++	struct:__anon19207be70308	typeref:typename:Computer_Selection_List
semaphore	code/w32.cpp	/^  HANDLE semaphore; $/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:HANDLE	file:
semaphore	code/win.cpp	/^  HANDLE semaphore; $/;"	m	language:C++	struct:Win_Work_Queue	typeref:typename:HANDLE	file:
semaphore	w32.cpp	/^  HANDLE semaphore; $/;"	m	language:C++	struct:W32_Work_Queue	typeref:typename:HANDLE	file:
Sensor	code/game_mode_level.h	/^struct Sensor {$/;"	s	language:C++
sensors	.\code\game_sb1.h	/^  SB1_Sensor_List sensors;$/;"	m	language:C++	struct:SB1
sensors	code/game_mode_level.h	/^  Array_List<Sensor> sensors;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Array_List<Sensor>
sensors	code/game_mode_lit.h	/^  Lit_Sensor_List sensors;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_Sensor_List
sensors	code/game_mode_sb1.h	/^  Lit_Sensor_List sensors;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Sensor_List
sensors	game_mode_lit.h	/^  Lit_Sensor_List sensors;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_Sensor_List
set_view	code/game_painter.h	/^set_view(Painter* p, F32 canvas_width, F32 canvas_height) {$/;"	f	language:C++	typeref:typename:void
set_zoom	code/game_painter.h	/^set_zoom(Painter* p, F32 zoom_level) {$/;"	f	language:C++	typeref:typename:void
shader	code/game_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon1d4ae8470808	typeref:typename:GLuint
shader	code/game_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon1d4ae8470908	typeref:typename:GLuint
shader	code/game_renderer_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:Sprite_Batcher	typeref:typename:GLuint
shader	code/game_renderer_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:Triangle_Batcher	typeref:typename:GLuint
shader	game_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon8caa255d0808	typeref:typename:GLuint
shader	game_gfx_opengl.h	/^  GLuint shader;$/;"	m	language:C++	struct:__anon8caa255d0908	typeref:typename:GLuint
show_debug_type	code/game.h	/^  Game_Show_Debug_Type show_debug_type;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Show_Debug_Type
show_debug_type	game.h	/^  Game_Show_Debug_Type show_debug_type;$/;"	m	language:C++	struct:Game	typeref:typename:Game_Show_Debug_Type
signature	code/karu.h	/^  U32 signature;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
signature	code/momo_png.h	/^  U8 signature[8];$/;"	m	language:C++	struct:_PNG_Header	typeref:typename:U8[8]
signature	karu.h	/^  U32 signature;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
signature	momo_png.h	/^  U8 signature[8];$/;"	m	language:C++	struct:_PNG_Header	typeref:typename:U8[8]
signed_item3	build/test_json.json	/^    "signed_item3":-123$/;"	n	language:JSON	object:next_obj
sin_f32	code/momo_intrinsics.h	/^sin_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
sin_f32	code/momo_intrinsics.h	/^static F32 sin_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
sin_f32	momo_intrinsics.h	/^sin_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
sin_f32	momo_intrinsics.h	/^static F32 sin_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
sin_f64	code/momo_intrinsics.h	/^sin_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
sin_f64	code/momo_intrinsics.h	/^static F64 sin_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
sin_f64	momo_intrinsics.h	/^sin_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
sin_f64	momo_intrinsics.h	/^static F64 sin_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
size	.\code\game_sb1.h	/^  V2 size;$/;"	m	language:C++	struct:SB1_Player
size	code/game_gfx.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
size	code/game_gfx.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
size	code/game_mode_level.h	/^  V2 size;$/;"	m	language:C++	struct:Player	typeref:typename:V2
size	code/game_renderer.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
size	code/game_renderer.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
size	code/momo_common.h	/^  UMI size;  $/;"	m	language:C++	struct:__anonbacee3e50908	typeref:typename:UMI
size	code/momo_streams.h	/^  UMI size;$/;"	m	language:C++	struct:Stream	typeref:typename:UMI
size	code/momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon54fde02a0108	typeref:typename:U32
size	code/momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon54fde02a0208	typeref:typename:U32
size	code/momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon54fde02a0308	typeref:typename:U32
size	game_gfx.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Rect	typeref:typename:V2
size	game_gfx.h	/^  V2 size;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:V2
size	momo_common.h	/^  UMI size;  $/;"	m	language:C++	struct:__anonf95f05fb0908	typeref:typename:UMI
size	momo_streams.h	/^  UMI size;$/;"	m	language:C++	struct:Stream	typeref:typename:UMI
size	momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon4ee54a000108	typeref:typename:U32
size	momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon4ee54a000208	typeref:typename:U32
size	momo_wav.h	/^  U32 size;$/;"	m	language:C++	struct:__anon4ee54a000308	typeref:typename:U32
size_end	code/game_mode_lit_particles.h	/^  V2 size_start, size_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
size_end	game_mode_lit_particles.h	/^  V2 size_start, size_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
size_start	code/game_mode_lit_particles.h	/^  V2 size_start, size_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
size_start	game_mode_lit_particles.h	/^  V2 size_start, size_end;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
sll_append	code/momo_lists.h	/^#define sll_append(/;"	d	language:C++
sll_append	momo_lists.h	/^#define sll_append(/;"	d	language:C++
sll_prepend	code/momo_lists.h	/^#define sll_prepend(/;"	d	language:C++
sll_prepend	momo_lists.h	/^#define sll_prepend(/;"	d	language:C++
sl_append	code/momo_lists.h	/^#define sl_append(/;"	d	language:C++
sl_append	momo_lists.h	/^#define sl_append(/;"	d	language:C++
sl_at	code/momo_lists.h	/^#define sl_at(/;"	d	language:C++
sl_at	momo_lists.h	/^#define sl_at(/;"	d	language:C++
sl_clear	code/momo_lists.h	/^#define sl_clear(/;"	d	language:C++
sl_clear	momo_lists.h	/^#define sl_clear(/;"	d	language:C++
sl_foreach	code/momo_lists.h	/^#define sl_foreach(/;"	d	language:C++
sl_foreach	momo_lists.h	/^#define sl_foreach(/;"	d	language:C++
sl_is_empty	code/momo_lists.h	/^#define sl_is_empty(/;"	d	language:C++
sl_is_empty	momo_lists.h	/^#define sl_is_empty(/;"	d	language:C++
sl_is_full	code/momo_lists.h	/^#define sl_is_full(/;"	d	language:C++
sl_is_full	momo_lists.h	/^#define sl_is_full(/;"	d	language:C++
sl_is_valid	code/momo_lists.h	/^#define sl_is_valid(/;"	d	language:C++
sl_is_valid	momo_lists.h	/^#define sl_is_valid(/;"	d	language:C++
SMI	code/momo_common.h	/^typedef ptrdiff_t SMI; \/\/ aka 'signed memory index'$/;"	t	language:C++	typeref:typename:ptrdiff_t
SMI	momo_common.h	/^typedef ptrdiff_t SMI; \/\/ aka 'signed memory index'$/;"	t	language:C++	typeref:typename:ptrdiff_t
snapshots	code/game_profiler.h	/^  Profiler_Snapshot snapshots[PROFILER_MAX_SNAPSHOTS];$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:Profiler_Snapshot[]
snapshots	game_profiler.h	/^  Profiler_Snapshot snapshots[PROFILER_MAX_SNAPSHOTS];$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:Profiler_Snapshot[]
snapshot_index	code/game_profiler.h	/^  U32 snapshot_index;$/;"	m	language:C++	struct:Profiler	typeref:typename:U32
snapshot_index	game_profiler.h	/^  U32 snapshot_index;$/;"	m	language:C++	struct:Profiler	typeref:typename:U32
Sort_Entry	code/momo_sort.h	/^} Sort_Entry;$/;"	t	language:C++	typeref:struct:__anonec618b240108
Sort_Entry	momo_sort.h	/^} Sort_Entry;$/;"	t	language:C++	typeref:struct:__anon23362fba0108
sounds	code/sui_pack.h	/^  Sui_Packer_Sound sounds[64];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Sound[64]
sounds	sui_pack.h	/^  Sui_Packer_Sound sounds[64];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Sound[64]
sound_count	code/karu.h	/^  U32 sound_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
sound_count	code/sui_pack.h	/^  U32 sound_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
sound_count	karu.h	/^  U32 sound_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
sound_count	sui_pack.h	/^  U32 sound_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
Sound_ID	code/generated_sound_ids.h	/^enum Sound_ID {$/;"	g	language:C++
Sound_ID	generated_sound_ids.h	/^enum Sound_ID {$/;"	g	language:C++
sound_id_file	code/sui_pack.h	/^  FILE* sound_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
sound_id_file	sui_pack.h	/^  FILE* sound_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
sound_id_name	code/sui_pack.h	/^  const char* sound_id_name;$/;"	m	language:C++	struct:Sui_Packer_Sound	typeref:typename:const char *
sound_id_name	sui_pack.h	/^  const char* sound_id_name;$/;"	m	language:C++	struct:Sui_Packer_Sound	typeref:typename:const char *
Splash	code/game_mode_splash.h	/^}Splash;$/;"	t	language:C++	typeref:struct:__anoncf1e9d2d0108
Splash	game_mode_splash.h	/^}Splash;$/;"	t	language:C++	typeref:struct:__anon2a657d030108
splash_tick	code/game_mode_splash.h	/^splash_tick(Game* game,$/;"	f	language:C++	typeref:typename:void
splash_tick	game_mode_splash.h	/^splash_tick(Game* game,$/;"	f	language:C++	typeref:typename:void
sprite	code/sui_atlas.h	/^    Sui_Atlas_Sprite_Context sprite;$/;"	m	language:C++	union:Sui_Atlas_Context::__anon2ac8214a010a	typeref:typename:Sui_Atlas_Sprite_Context
sprite	code/sui_atlas.h	/^  Sui_Atlas_Sprite* sprite;$/;"	m	language:C++	struct:Sui_Atlas_Sprite_Context	typeref:typename:Sui_Atlas_Sprite *
sprite	sui_atlas.h	/^    Sui_Atlas_Sprite_Context sprite;$/;"	m	language:C++	union:Sui_Atlas_Context::__anon619cc5e0010a	typeref:typename:Sui_Atlas_Sprite_Context
sprite	sui_atlas.h	/^  Sui_Atlas_Sprite* sprite;$/;"	m	language:C++	struct:Sui_Atlas_Sprite_Context	typeref:typename:Sui_Atlas_Sprite *
sprites	code/game_assets.h	/^  Sprite_Asset* sprites;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Sprite_Asset *
sprites	code/sui_atlas.h	/^  Sui_Atlas_Sprite sprites[128];$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Sui_Atlas_Sprite[128]
sprites	code/sui_pack.h	/^  Sui_Packer_Sprite sprites[128];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Sprite[128]
sprites	game_assets.h	/^  Sprite_Asset* sprites;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:Sprite_Asset *
sprites	sui_atlas.h	/^  Sui_Atlas_Sprite sprites[128];$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:Sui_Atlas_Sprite[128]
sprites	sui_pack.h	/^  Sui_Packer_Sprite sprites[128];$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:Sui_Packer_Sprite[128]
Sprite_Asset	code/game_assets.h	/^struct Sprite_Asset {$/;"	s	language:C++
Sprite_Asset	game_assets.h	/^struct Sprite_Asset {$/;"	s	language:C++
sprite_batch	code/game_gfx_opengl.h	/^  Sprite_Batch sprite_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Sprite_Batch
Sprite_Batch	code/game_gfx_opengl.h	/^} Sprite_Batch;$/;"	t	language:C++	typeref:struct:__anon1d4ae8470808
sprite_batch	game_gfx_opengl.h	/^  Sprite_Batch sprite_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Sprite_Batch
Sprite_Batch	game_gfx_opengl.h	/^} Sprite_Batch;$/;"	t	language:C++	typeref:struct:__anon8caa255d0808
sprite_batcher	code/game_renderer_opengl.h	/^  Sprite_Batcher sprite_batcher;$/;"	m	language:C++	struct:Opengl	typeref:typename:Sprite_Batcher
Sprite_Batcher	code/game_renderer_opengl.h	/^struct Sprite_Batcher {$/;"	s	language:C++
SPRITE_BLANK	code/generated_sprite_ids.h	/^SPRITE_BLANK = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_BLANK	generated_sprite_ids.h	/^SPRITE_BLANK = PACK_DEFAULT << 16 | 0,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_BULLET_CIRCLE	code/generated_sprite_ids.h	/^SPRITE_BULLET_CIRCLE = PACK_DEFAULT << 16 | 1,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_BULLET_CIRCLE	generated_sprite_ids.h	/^SPRITE_BULLET_CIRCLE = PACK_DEFAULT << 16 | 1,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_BULLET_DOT	code/generated_sprite_ids.h	/^SPRITE_BULLET_DOT = PACK_DEFAULT << 16 | 2,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_BULLET_DOT	generated_sprite_ids.h	/^SPRITE_BULLET_DOT = PACK_DEFAULT << 16 | 2,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_CIRCLE	code/generated_sprite_ids.h	/^SPRITE_CIRCLE = PACK_DEFAULT << 16 | 5,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_CIRCLE	generated_sprite_ids.h	/^SPRITE_CIRCLE = PACK_DEFAULT << 16 | 5,$/;"	e	language:C++	enum:Sprite_ID
sprite_count	code/game_assets.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
sprite_count	code/karu.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
sprite_count	code/sui_atlas.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:U32
sprite_count	code/sui_pack.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
sprite_count	game_assets.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Game_Assets	typeref:typename:U32
sprite_count	karu.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Karu_Header	typeref:typename:U32
sprite_count	sui_atlas.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Sui_Atlas	typeref:typename:U32
sprite_count	sui_pack.h	/^  U32 sprite_count;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:U32
sprite_id	code/game_mode_level_editor.h	/^  Sprite_ID sprite_id;$/;"	m	language:C++	struct:Editor_Toolbar_Button	typeref:typename:Sprite_ID
sprite_id	code/game_mode_lit_particles.h	/^  Sprite_ID sprite_id;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:Sprite_ID
Sprite_ID	code/generated_sprite_ids.h	/^enum Sprite_ID {$/;"	g	language:C++
sprite_id	game_mode_level_editor.h	/^  Sprite_ID sprite_id;$/;"	m	language:C++	struct:Editor_Toolbar_Button	typeref:typename:Sprite_ID
sprite_id	game_mode_lit_particles.h	/^  Sprite_ID sprite_id;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:Sprite_ID
Sprite_ID	generated_sprite_ids.h	/^enum Sprite_ID {$/;"	g	language:C++
sprite_id_file	code/sui_pack.h	/^  FILE* sprite_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
sprite_id_file	sui_pack.h	/^  FILE* sprite_id_file;$/;"	m	language:C++	struct:Sui_Packer	typeref:typename:FILE *
sprite_id_name	code/sui_atlas.h	/^  const char* sprite_id_name;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:const char *
sprite_id_name	sui_atlas.h	/^  const char* sprite_id_name;$/;"	m	language:C++	struct:Sui_Atlas_Sprite	typeref:typename:const char *
SPRITE_PLAYER_BLACK	code/generated_sprite_ids.h	/^SPRITE_PLAYER_BLACK = PACK_DEFAULT << 16 | 3,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_PLAYER_BLACK	generated_sprite_ids.h	/^SPRITE_PLAYER_BLACK = PACK_DEFAULT << 16 | 3,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_PLAYER_WHITE	code/generated_sprite_ids.h	/^SPRITE_PLAYER_WHITE = PACK_DEFAULT << 16 | 4,$/;"	e	language:C++	enum:Sprite_ID
SPRITE_PLAYER_WHITE	generated_sprite_ids.h	/^SPRITE_PLAYER_WHITE = PACK_DEFAULT << 16 | 4,$/;"	e	language:C++	enum:Sprite_ID
sqrt_f32	code/momo_intrinsics.h	/^sqrt_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
sqrt_f32	code/momo_intrinsics.h	/^static F32 sqrt_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
sqrt_f32	momo_intrinsics.h	/^sqrt_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
sqrt_f32	momo_intrinsics.h	/^static F32 sqrt_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
sqrt_f64	code/momo_intrinsics.h	/^sqrt_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
sqrt_f64	code/momo_intrinsics.h	/^static F64 sqrt_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
sqrt_f64	momo_intrinsics.h	/^sqrt_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
sqrt_f64	momo_intrinsics.h	/^static F64 sqrt_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
src	code/game_gfx.h	/^  Gfx_Blend_Type src;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
src	code/game_renderer.h	/^  Gfx_Blend_Type src;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
src	game_gfx.h	/^  Gfx_Blend_Type src;$/;"	m	language:C++	struct:Gfx_Command_Blend	typeref:typename:Gfx_Blend_Type
srm_consume	code/momo_streams.h	/^#define srm_consume(/;"	d	language:C++
srm_consume	momo_streams.h	/^#define srm_consume(/;"	d	language:C++
srm_consume_bits	code/momo_streams.h	/^srm_consume_bits(Stream* s, U32 amount){$/;"	f	language:C++	typeref:typename:U32
srm_consume_bits	code/momo_streams.h	/^static U32		srm_consume_bits(Stream* s, U32 amount);$/;"	p	language:C++	typeref:typename:U32
srm_consume_bits	momo_streams.h	/^srm_consume_bits(Stream* s, U32 amount){$/;"	f	language:C++	typeref:typename:U32
srm_consume_bits	momo_streams.h	/^static U32		srm_consume_bits(Stream* s, U32 amount);$/;"	p	language:C++	typeref:typename:U32
srm_consume_block	code/momo_streams.h	/^srm_consume_block(Stream* s, UMI amount) {$/;"	f	language:C++	typeref:typename:U8 *
srm_consume_block	code/momo_streams.h	/^static U8*    srm_consume_block(Stream* s, UMI amount);$/;"	p	language:C++	typeref:typename:U8 *
srm_consume_block	momo_streams.h	/^srm_consume_block(Stream* s, UMI amount) {$/;"	f	language:C++	typeref:typename:U8 *
srm_consume_block	momo_streams.h	/^static U8*    srm_consume_block(Stream* s, UMI amount);$/;"	p	language:C++	typeref:typename:U8 *
srm_flush_bits	code/momo_streams.h	/^srm_flush_bits(Stream* s){$/;"	f	language:C++	typeref:typename:void
srm_flush_bits	code/momo_streams.h	/^static void   srm_flush_bits(Stream* s);$/;"	p	language:C++	typeref:typename:void
srm_flush_bits	momo_streams.h	/^srm_flush_bits(Stream* s){$/;"	f	language:C++	typeref:typename:void
srm_flush_bits	momo_streams.h	/^static void   srm_flush_bits(Stream* s);$/;"	p	language:C++	typeref:typename:void
srm_init	code/momo_streams.h	/^srm_init(Stream* s, void* memory, UMI memory_size) {$/;"	f	language:C++	typeref:typename:void
srm_init	code/momo_streams.h	/^static void   srm_init(Stream* s, void* memory, UMI memory_size);$/;"	p	language:C++	typeref:typename:void
srm_init	momo_streams.h	/^srm_init(Stream* s, void* memory, UMI memory_size) {$/;"	f	language:C++	typeref:typename:void
srm_init	momo_streams.h	/^static void   srm_init(Stream* s, void* memory, UMI memory_size);$/;"	p	language:C++	typeref:typename:void
srm_is_eos	code/momo_streams.h	/^srm_is_eos(Stream* s) {$/;"	f	language:C++	typeref:typename:B32
srm_is_eos	code/momo_streams.h	/^static B32    srm_is_eos(Stream* s);$/;"	p	language:C++	typeref:typename:B32
srm_is_eos	momo_streams.h	/^srm_is_eos(Stream* s) {$/;"	f	language:C++	typeref:typename:B32
srm_is_eos	momo_streams.h	/^static B32    srm_is_eos(Stream* s);$/;"	p	language:C++	typeref:typename:B32
srm_reset	code/momo_streams.h	/^srm_reset(Stream* s) {$/;"	f	language:C++	typeref:typename:void
srm_reset	code/momo_streams.h	/^static void   srm_reset(Stream* s);$/;"	p	language:C++	typeref:typename:void
srm_reset	momo_streams.h	/^srm_reset(Stream* s) {$/;"	f	language:C++	typeref:typename:void
srm_reset	momo_streams.h	/^static void   srm_reset(Stream* s);$/;"	p	language:C++	typeref:typename:void
srm_write	code/momo_streams.h	/^#define srm_write(/;"	d	language:C++
srm_write	momo_streams.h	/^#define srm_write(/;"	d	language:C++
srm_write_block	code/momo_streams.h	/^srm_write_block(Stream* s, void* src, UMI src_size) {$/;"	f	language:C++	typeref:typename:void
srm_write_block	code/momo_streams.h	/^static void   srm_write_block(Stream* s, void* src, UMI size);$/;"	p	language:C++	typeref:typename:void
srm_write_block	momo_streams.h	/^srm_write_block(Stream* s, void* src, UMI src_size) {$/;"	f	language:C++	typeref:typename:void
srm_write_block	momo_streams.h	/^static void   srm_write_block(Stream* s, void* src, UMI size);$/;"	p	language:C++	typeref:typename:void
ssbo	test.c	/^        bool ssbo;                          \/\/ Shader storage buffer object support (GL_ARB_sh/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
stack	test.c	/^        Matrix stack[RL_MAX_MATRIX_STACK_SIZE];\/\/ Matrix stack for push\/pop$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix[]	file:
stackCounter	test.c	/^        int stackCounter;                   \/\/ Matrix stack counter$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
stage_fade	code/game_mode_lit.h	/^  F32 stage_fade;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:F32
stage_fade	game_mode_lit.h	/^  F32 stage_fade;$/;"	m	language:C++	struct:Lit	typeref:typename:F32
start_cycles	code/game_profiler.h	/^  U32 start_cycles;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
start_cycles	game_profiler.h	/^  U32 start_cycles;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
start_hits	code/game_profiler.h	/^  U32 start_hits;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
start_hits	game_profiler.h	/^  U32 start_hits;$/;"	m	language:C++	struct:Profiler_Entry	typeref:typename:U32
start_pt	code/game_mode_lit.h	/^  V2 start_pt;$/;"	m	language:C++	struct:Lit_Edge	typeref:typename:V2
Stat	code/game_profiler_rendering.h	/^struct Stat {$/;"	s	language:C++
Stat	game_profiler_rendering.h	/^struct Stat {$/;"	s	language:C++
state	code/game_gfx.h	/^  volatile Gfx_Texture_Payload_State state;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:volatile Gfx_Texture_Payload_State
state	code/game_mode_level.h	/^  Level_State state;$/;"	m	language:C++	struct:Level_Mode	typeref:typename:Level_State
state	code/game_mode_lit.h	/^  Lit_State_Type state;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:Lit_State_Type
state	code/game_renderer.h	/^  volatile Gfx_Texture_Payload_State state;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:volatile Gfx_Texture_Payload_State
state	code/meta.cpp	/^  U32 state; \/\/ $/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:U32	file:
state	game_gfx.h	/^  volatile Gfx_Texture_Payload_State state;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:volatile Gfx_Texture_Payload_State
state	game_mode_lit.h	/^  Lit_State_Type state;$/;"	m	language:C++	struct:Lit	typeref:typename:Lit_State_Type
state	meta.cpp	/^  U32 state; \/\/ $/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:U32	file:
State	test.c	/^    } State;            \/\/ Renderer state$/;"	m	language:C	struct:rlglData	typeref:struct:rlglData::__anon1dda1bf60b08	file:
state_btns	code/game_mode_level_editor.h	/^  Editor_Toolbar_Button state_btns[EDITOR_STATE_MAX];$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_Toolbar_Button[]
state_btns	game_mode_level_editor.h	/^  Editor_Toolbar_Button state_btns[EDITOR_STATE_MAX];$/;"	m	language:C++	struct:Editor	typeref:typename:Editor_Toolbar_Button[]
stereoRender	test.c	/^        bool stereoRender;                  \/\/ Stereo rendering flag$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:bool	file:
stmt	code/momo_common.h	/^#define stmt(/;"	d	language:C++
stmt	momo_common.h	/^#define stmt(/;"	d	language:C++
str	code/game_console.h	/^  String8 str;$/;"	m	language:C++	struct:Console_Line	typeref:typename:String8
str	code/momo_strings.h	/^		String8 str;$/;"	m	language:C++	union:__anon713555860208::__anon71355586030a	typeref:typename:String8
str	game_console.h	/^  String8 str;$/;"	m	language:C++	struct:Console_Line	typeref:typename:String8
str	momo_strings.h	/^		String8 str;$/;"	m	language:C++	union:__anon81c9ba5c0208::__anon81c9ba5c030a	typeref:typename:String8
str8	code/momo_strings.h	/^static String8 str8(U8* str, UMI size);$/;"	p	language:C++	typeref:typename:String8
str8	code/momo_strings.h	/^str8(U8* str, UMI size) {$/;"	f	language:C++	typeref:typename:String8
str8	momo_strings.h	/^static String8 str8(U8* str, UMI size);$/;"	p	language:C++	typeref:typename:String8
str8	momo_strings.h	/^str8(U8* str, UMI size) {$/;"	f	language:C++	typeref:typename:String8
str8_compare_lexographically	code/momo_strings.h	/^str8_compare_lexographically(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:SMI
str8_compare_lexographically	momo_strings.h	/^str8_compare_lexographically(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:SMI
str8_from_cstr	code/momo_strings.h	/^static String8 str8_from_cstr(const char* cstr);$/;"	p	language:C++	typeref:typename:String8
str8_from_cstr	code/momo_strings.h	/^str8_from_cstr(const C8* cstr) {$/;"	f	language:C++	typeref:typename:String8
str8_from_cstr	momo_strings.h	/^static String8 str8_from_cstr(const char* cstr);$/;"	p	language:C++	typeref:typename:String8
str8_from_cstr	momo_strings.h	/^str8_from_cstr(const C8* cstr) {$/;"	f	language:C++	typeref:typename:String8
str8_from_lit	code/momo_strings.h	/^#define str8_from_lit(/;"	d	language:C++
str8_from_lit	momo_strings.h	/^#define str8_from_lit(/;"	d	language:C++
str8_match	code/momo_strings.h	/^static B32 str8_match(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
str8_match	code/momo_strings.h	/^str8_match(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
str8_match	momo_strings.h	/^static B32 str8_match(String8 lhs, String8 rhs);$/;"	p	language:C++	typeref:typename:B32
str8_match	momo_strings.h	/^str8_match(String8 lhs, String8 rhs) {$/;"	f	language:C++	typeref:typename:B32
str8_range_to	code/momo_strings.h	/^B32 str8_range_to(U32* out);$/;"	p	language:C++	typeref:typename:B32
str8_range_to	momo_strings.h	/^B32 str8_range_to(U32* out);$/;"	p	language:C++	typeref:typename:B32
str8_substr	code/momo_strings.h	/^static String8 str8_substr(String8 str, UMI start, UMI ope);$/;"	p	language:C++	typeref:typename:String8
str8_substr	code/momo_strings.h	/^str8_substr(String8 str, UMI start, UMI count) {$/;"	f	language:C++	typeref:typename:String8
str8_substr	momo_strings.h	/^static String8 str8_substr(String8 str, UMI start, UMI ope);$/;"	p	language:C++	typeref:typename:String8
str8_substr	momo_strings.h	/^str8_substr(String8 str, UMI start, UMI count) {$/;"	f	language:C++	typeref:typename:String8
str8_to_f32	code/momo_strings.h	/^str8_to_f32(String8 s, F32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_f32	momo_strings.h	/^str8_to_f32(String8 s, F32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_f32_range	code/momo_strings.h	/^str8_to_f32_range(String8 s, UMI begin, UMI ope, F32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_f32_range	momo_strings.h	/^str8_to_f32_range(String8 s, UMI begin, UMI ope, F32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_s32	code/momo_strings.h	/^str8_to_s32(String8 s, S32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_s32	momo_strings.h	/^str8_to_s32(String8 s, S32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_s32_range	code/momo_strings.h	/^str8_to_s32_range(String8 s, UMI begin, UMI ope, S32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_s32_range	momo_strings.h	/^str8_to_s32_range(String8 s, UMI begin, UMI ope, S32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_u32	code/momo_strings.h	/^B32 str8_to_u32(U32* out);$/;"	p	language:C++	typeref:typename:B32
str8_to_u32	code/momo_strings.h	/^str8_to_u32(String8 s, U32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_u32	momo_strings.h	/^B32 str8_to_u32(U32* out);$/;"	p	language:C++	typeref:typename:B32
str8_to_u32	momo_strings.h	/^str8_to_u32(String8 s, U32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_u32_range	code/momo_strings.h	/^str8_to_u32_range(String8 s, UMI begin, UMI ope, U32* out) {$/;"	f	language:C++	typeref:typename:B32
str8_to_u32_range	momo_strings.h	/^str8_to_u32_range(String8 s, UMI begin, UMI ope, U32* out) {$/;"	f	language:C++	typeref:typename:B32
stream	code/momo_png.h	/^  Stream stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
Stream	code/momo_streams.h	/^struct Stream {$/;"	s	language:C++
stream	momo_png.h	/^  Stream stream;$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
Stream	momo_streams.h	/^struct Stream {$/;"	s	language:C++
string	code/momo_json.h	/^    String8 string;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:String8
string	momo_json.h	/^    String8 string;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:String8
String8	code/momo_strings.h	/^} String8;$/;"	t	language:C++	typeref:struct:__anon713555860108
String8	momo_strings.h	/^} String8;$/;"	t	language:C++	typeref:struct:__anon81c9ba5c0108
String8_Builder	code/momo_strings.h	/^} String8_Builder;$/;"	t	language:C++	typeref:struct:__anon713555860208
String8_Builder	momo_strings.h	/^} String8_Builder;$/;"	t	language:C++	typeref:struct:__anon81c9ba5c0208
stringify	code/momo_common.h	/^#define stringify(/;"	d	language:C++
stringify	momo_common.h	/^#define stringify(/;"	d	language:C++
stringify_	code/momo_common.h	/^#define stringify_(/;"	d	language:C++
stringify_	momo_common.h	/^#define stringify_(/;"	d	language:C++
Sui_Atlas	code/sui_atlas.h	/^struct Sui_Atlas {  $/;"	s	language:C++
Sui_Atlas	sui_atlas.h	/^struct Sui_Atlas {  $/;"	s	language:C++
Sui_Atlas_Context	code/sui_atlas.h	/^struct Sui_Atlas_Context {$/;"	s	language:C++
Sui_Atlas_Context	sui_atlas.h	/^struct Sui_Atlas_Context {$/;"	s	language:C++
Sui_Atlas_Context_Type	code/sui_atlas.h	/^enum Sui_Atlas_Context_Type {$/;"	g	language:C++
Sui_Atlas_Context_Type	sui_atlas.h	/^enum Sui_Atlas_Context_Type {$/;"	g	language:C++
SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH	code/sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH,$/;"	e	language:C++	enum:Sui_Atlas_Context_Type
SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH	sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_FONT_GLYPH,$/;"	e	language:C++	enum:Sui_Atlas_Context_Type
SUI_ATLAS_CONTEXT_TYPE_SPRITE	code/sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_SPRITE,$/;"	e	language:C++	enum:Sui_Atlas_Context_Type
SUI_ATLAS_CONTEXT_TYPE_SPRITE	sui_atlas.h	/^  SUI_ATLAS_CONTEXT_TYPE_SPRITE,$/;"	e	language:C++	enum:Sui_Atlas_Context_Type
Sui_Atlas_Font	code/sui_atlas.h	/^struct Sui_Atlas_Font {$/;"	s	language:C++
Sui_Atlas_Font	sui_atlas.h	/^struct Sui_Atlas_Font {$/;"	s	language:C++
Sui_Atlas_Font_Glyph_Context	code/sui_atlas.h	/^struct Sui_Atlas_Font_Glyph_Context {$/;"	s	language:C++
Sui_Atlas_Font_Glyph_Context	sui_atlas.h	/^struct Sui_Atlas_Font_Glyph_Context {$/;"	s	language:C++
SUI_ATLAS_H	code/sui_atlas.h	/^#define SUI_ATLAS_H$/;"	d	language:C++
SUI_ATLAS_H	sui_atlas.h	/^#define SUI_ATLAS_H$/;"	d	language:C++
Sui_Atlas_Sprite	code/sui_atlas.h	/^struct Sui_Atlas_Sprite {$/;"	s	language:C++
Sui_Atlas_Sprite	sui_atlas.h	/^struct Sui_Atlas_Sprite {$/;"	s	language:C++
Sui_Atlas_Sprite_Context	code/sui_atlas.h	/^struct Sui_Atlas_Sprite_Context {$/;"	s	language:C++
Sui_Atlas_Sprite_Context	sui_atlas.h	/^struct Sui_Atlas_Sprite_Context {$/;"	s	language:C++
sui_check_death	code/sui.cpp	/^#define sui_check_death(/;"	d	language:C++	file:
sui_check_death	sui.cpp	/^#define sui_check_death(/;"	d	language:C++	file:
sui_create_log_section_until_scope	code/sui.h	/^#define sui_create_log_section_until_scope /;"	d	language:C++
sui_create_log_section_until_scope	sui.h	/^#define sui_create_log_section_until_scope /;"	d	language:C++
sui_free	code/sui.h	/^sui_free(Block* mem) {$/;"	f	language:C++	typeref:typename:void
sui_free	sui.h	/^sui_free(Block* mem) {$/;"	f	language:C++	typeref:typename:void
SUI_H	code/sui.h	/^#define SUI_H$/;"	d	language:C++
SUI_H	sui.h	/^#define SUI_H$/;"	d	language:C++
sui_log	code/sui.h	/^#define sui_log(/;"	d	language:C++
sui_log	sui.h	/^#define sui_log(/;"	d	language:C++
sui_log_spaces	code/sui.h	/^static unsigned sui_log_spaces = 0;$/;"	v	language:C++	typeref:typename:unsigned
sui_log_spaces	sui.h	/^static unsigned sui_log_spaces = 0;$/;"	v	language:C++	typeref:typename:unsigned
sui_malloc	code/sui.h	/^sui_malloc(UMI size) {$/;"	f	language:C++	typeref:typename:Block
sui_malloc	sui.h	/^sui_malloc(UMI size) {$/;"	f	language:C++	typeref:typename:Block
Sui_Packer	code/sui_pack.h	/^struct Sui_Packer {$/;"	s	language:C++
Sui_Packer	sui_pack.h	/^struct Sui_Packer {$/;"	s	language:C++
Sui_Packer_Bitmap	code/sui_pack.h	/^struct Sui_Packer_Bitmap {$/;"	s	language:C++
Sui_Packer_Bitmap	sui_pack.h	/^struct Sui_Packer_Bitmap {$/;"	s	language:C++
Sui_Packer_Font	code/sui_pack.h	/^struct Sui_Packer_Font {$/;"	s	language:C++
Sui_Packer_Font	sui_pack.h	/^struct Sui_Packer_Font {$/;"	s	language:C++
Sui_Packer_Font_Glyph	code/sui_pack.h	/^struct Sui_Packer_Font_Glyph{ $/;"	s	language:C++
Sui_Packer_Font_Glyph	sui_pack.h	/^struct Sui_Packer_Font_Glyph{ $/;"	s	language:C++
Sui_Packer_Sound	code/sui_pack.h	/^struct Sui_Packer_Sound {$/;"	s	language:C++
Sui_Packer_Sound	sui_pack.h	/^struct Sui_Packer_Sound {$/;"	s	language:C++
Sui_Packer_Sprite	code/sui_pack.h	/^struct Sui_Packer_Sprite {$/;"	s	language:C++
Sui_Packer_Sprite	sui_pack.h	/^struct Sui_Packer_Sprite {$/;"	s	language:C++
SUI_PACK_H	code/sui_pack.h	/^#define SUI_PACK_H$/;"	d	language:C++
SUI_PACK_H	sui_pack.h	/^#define SUI_PACK_H$/;"	d	language:C++
sui_read_file_to_blk	code/sui.h	/^sui_read_file_to_blk(Block* mem, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_read_file_to_blk	sui.h	/^sui_read_file_to_blk(Block* mem, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_read_font_from_file	code/sui.h	/^sui_read_font_from_file(TTF* ttf, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_read_font_from_file	sui.h	/^sui_read_font_from_file(TTF* ttf, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_read_wav_from_file	code/sui.h	/^sui_read_wav_from_file(WAV* wav, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_read_wav_from_file	sui.h	/^sui_read_wav_from_file(WAV* wav, const char* filename, Bump_Allocator* allocator) {$/;"	f	language:C++	typeref:typename:B32
sui_write_file_from_blk	code/sui.h	/^sui_write_file_from_blk(const char* filename, Block blk) {$/;"	f	language:C++	typeref:typename:B32
sui_write_file_from_blk	sui.h	/^sui_write_file_from_blk(const char* filename, Block blk) {$/;"	f	language:C++	typeref:typename:B32
swap	code/momo_common.h	/^#define swap(/;"	d	language:C++
swap	momo_common.h	/^#define swap(/;"	d	language:C++
swap_memory	code/momo_common.h	/^swap_memory(void* lhs, void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:void
swap_memory	momo_common.h	/^swap_memory(void* lhs, void* rhs, UMI size) {$/;"	f	language:C++	typeref:typename:void
symbols	code/momo_png.h	/^  U16* symbols; $/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U16 *
symbols	momo_png.h	/^  U16* symbols; $/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U16 *
symbol_count	code/momo_png.h	/^  U32 symbol_count;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U32
symbol_count	momo_png.h	/^  U32 symbol_count;$/;"	m	language:C++	struct:_PNG_Huffman	typeref:typename:U32
t2_is_point_within	code/momo_shapes.h	/^t2_is_point_within(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
t2_is_point_within	momo_shapes.h	/^t2_is_point_within(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
tail	code/momo_json.h	/^  struct _JSON_Array_Node* tail;$/;"	m	language:C++	struct:JSON_Array	typeref:struct:_JSON_Array_Node *
tail	momo_json.h	/^  struct _JSON_Array_Node* tail;$/;"	m	language:C++	struct:JSON_Array	typeref:struct:_JSON_Array_Node *
tan_f32	code/momo_intrinsics.h	/^static F32 tan_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
tan_f32	code/momo_intrinsics.h	/^tan_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
tan_f32	momo_intrinsics.h	/^static F32 tan_f32(F32 x);$/;"	p	language:C++	typeref:typename:F32
tan_f32	momo_intrinsics.h	/^tan_f32(F32 x) {$/;"	f	language:C++	typeref:typename:F32
tan_f64	code/momo_intrinsics.h	/^static F64 tan_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
tan_f64	code/momo_intrinsics.h	/^tan_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
tan_f64	momo_intrinsics.h	/^static F64 tan_f64(F64 x);$/;"	p	language:C++	typeref:typename:F64
tan_f64	momo_intrinsics.h	/^tan_f64(F64 x) {$/;"	f	language:C++	typeref:typename:F64
target_color	.\code\game_sb1.h	/^  U32 target_color;$/;"	m	language:C++	struct:SB1_Sensor
target_color	code/game_mode_level.h	/^  U32 target_color;$/;"	m	language:C++	struct:Sensor	typeref:typename:U32
target_color	code/game_mode_lit_sensors.h	/^  U32 target_color;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:U32
target_color	game_mode_lit_sensors.h	/^  U32 target_color;$/;"	m	language:C++	struct:Lit_Sensor	typeref:typename:U32
TAU_32	code/momo_common.h	/^#define TAU_32 /;"	d	language:C++
TAU_32	momo_common.h	/^#define TAU_32 /;"	d	language:C++
TAU_64	code/momo_common.h	/^#define TAU_64 /;"	d	language:C++
TAU_64	momo_common.h	/^#define TAU_64 /;"	d	language:C++
test_assets_dir	code/test.h	/^#define test_assets_dir(/;"	d	language:C++
test_assets_dir	test.h	/^#define test_assets_dir(/;"	d	language:C++
test_create_log_section_until_scope	code/test.h	/^#define test_create_log_section_until_scope /;"	d	language:C++
test_create_log_section_until_scope	test.h	/^#define test_create_log_section_until_scope /;"	d	language:C++
test_essentials	code/test_essentials.h	/^void test_essentials() { $/;"	f	language:C++	typeref:typename:void
test_essentials	test_essentials.h	/^void test_essentials() { $/;"	f	language:C++	typeref:typename:void
TEST_ESSENTIALS_H	code/test_essentials.h	/^#define TEST_ESSENTIALS_H$/;"	d	language:C++
TEST_ESSENTIALS_H	test_essentials.h	/^#define TEST_ESSENTIALS_H$/;"	d	language:C++
test_eval_d	code/test.h	/^#define test_eval_d(/;"	d	language:C++
test_eval_d	test.h	/^#define test_eval_d(/;"	d	language:C++
test_eval_f	code/test.h	/^#define test_eval_f(/;"	d	language:C++
test_eval_f	test.h	/^#define test_eval_f(/;"	d	language:C++
test_eval_lld	code/test.h	/^#define test_eval_lld(/;"	d	language:C++
test_eval_lld	test.h	/^#define test_eval_lld(/;"	d	language:C++
TEST_H	code/test.h	/^#define TEST_H$/;"	d	language:C++
TEST_H	test.h	/^#define TEST_H$/;"	d	language:C++
test_list	code/test_list.h	/^test_list() {$/;"	f	language:C++	typeref:typename:void
test_list	test_list.h	/^test_list() {$/;"	f	language:C++	typeref:typename:void
TEST_LIST_H	code/test_list.h	/^#define TEST_LIST_H$/;"	d	language:C++
TEST_LIST_H	test_list.h	/^#define TEST_LIST_H$/;"	d	language:C++
test_log	code/test.h	/^#define test_log(/;"	d	language:C++
test_log	test.h	/^#define test_log(/;"	d	language:C++
test_log_spaces	code/test.h	/^static unsigned test_log_spaces = 0;$/;"	v	language:C++	typeref:typename:unsigned
test_log_spaces	test.h	/^static unsigned test_log_spaces = 0;$/;"	v	language:C++	typeref:typename:unsigned
test_png	code/test_png.h	/^void test_png() {$/;"	f	language:C++	typeref:typename:void
test_png	test_png.h	/^void test_png() {$/;"	f	language:C++	typeref:typename:void
TEST_PNG_H	code/test_png.h	/^#define TEST_PNG_H$/;"	d	language:C++
TEST_PNG_H	test_png.h	/^#define TEST_PNG_H$/;"	d	language:C++
test_read_file_to_memory	code/test.h	/^test_read_file_to_memory(Bump_Allocator* allocator, const char* filename) {$/;"	f	language:C++	typeref:typename:Memory
test_read_file_to_memory	test.h	/^test_read_file_to_memory(Bump_Allocator* allocator, const char* filename) {$/;"	f	language:C++	typeref:typename:Memory
test_sort	code/test_sort.h	/^void test_sort() {$/;"	f	language:C++	typeref:typename:void
test_sort	test_sort.h	/^void test_sort() {$/;"	f	language:C++	typeref:typename:void
TEST_SORT_H	code/test_sort.h	/^#define TEST_SORT_H$/;"	d	language:C++
TEST_SORT_H	test_sort.h	/^#define TEST_SORT_H$/;"	d	language:C++
Test_Struct	build/meta_test.cpp	/^struct Test_Struct {$/;"	s	language:C++	file:
test_ttf	code/test_ttf.h	/^void test_ttf() {$/;"	f	language:C++	typeref:typename:void
test_ttf	test_ttf.h	/^void test_ttf() {$/;"	f	language:C++	typeref:typename:void
TEST_TTF_H	code/test_ttf.h	/^#define TEST_TTF_H$/;"	d	language:C++
TEST_TTF_H	test_ttf.h	/^#define TEST_TTF_H$/;"	d	language:C++
test_unit	code/test.h	/^#define test_unit(/;"	d	language:C++
test_unit	test.h	/^#define test_unit(/;"	d	language:C++
test_write_memory_to_file	code/test.h	/^test_write_memory_to_file(Memory block, const char* filename) {$/;"	f	language:C++	typeref:typename:B32
test_write_memory_to_file	test.h	/^test_write_memory_to_file(Memory block, const char* filename) {$/;"	f	language:C++	typeref:typename:B32
texAnisoFilter	test.c	/^        bool texAnisoFilter;                \/\/ Anisotropic texture filtering support (GL_EXT_t/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texCompASTC	test.c	/^        bool texCompASTC;                   \/\/ ASTC texture compression support (GL_KHR_textur/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texCompDXT	test.c	/^        bool texCompDXT;                    \/\/ DDS texture compression support (GL_EXT_texture/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texCompETC1	test.c	/^        bool texCompETC1;                   \/\/ ETC1 texture compression support (GL_OES_compre/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texCompETC2	test.c	/^        bool texCompETC2;                   \/\/ ETC2\/EAC texture compression support (GL_ARB_E/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texCompPVRT	test.c	/^        bool texCompPVRT;                   \/\/ PVR texture compression support (GL_IMG_texture/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texcoords	test.c	/^    float *texcoords;           \/\/ Vertex texture coordinates (UV - 2 components per vertex) (/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:float *	file:
texcoordx	test.c	/^        float texcoordx, texcoordy;         \/\/ Current active texture coordinate (added on glV/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:float	file:
texcoordy	test.c	/^        float texcoordx, texcoordy;         \/\/ Current active texture coordinate (added on glV/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:float	file:
texDepth	test.c	/^        bool texDepth;                      \/\/ Depth textures supported (GL_ARB_depth_texture,/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texel_uv	code/game_assets.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Font_Glyph_Asset	typeref:typename:Rect2U
texel_uv	code/game_assets.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Sprite_Asset	typeref:typename:Rect2U
texel_uv	code/game_gfx.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2U
texel_uv	code/game_renderer.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2U
texel_uv	code/karu.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:Rect2U
texel_uv	code/karu.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Karu_Sprite	typeref:typename:Rect2U
texel_uv	game_assets.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Font_Glyph_Asset	typeref:typename:Rect2U
texel_uv	game_assets.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Sprite_Asset	typeref:typename:Rect2U
texel_uv	game_gfx.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2U
texel_uv	karu.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Karu_Font_Glyph	typeref:typename:Rect2U
texel_uv	karu.h	/^  Rect2U texel_uv;$/;"	m	language:C++	struct:Karu_Sprite	typeref:typename:Rect2U
texFloat32	test.c	/^        bool texFloat32;                    \/\/ float textures support (32 bit per channel) (GL/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texMirrorClamp	test.c	/^        bool texMirrorClamp;                \/\/ Clamp mirror wrap mode supported (GL_EXT_textur/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
texNPOT	test.c	/^        bool texNPOT;                       \/\/ NPOT textures full support (GL_ARB_texture_non_/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
text	code/game_mode_computer.h	/^  String8 text;$/;"	m	language:C++	struct:__anond0a24e910108	typeref:typename:String8
text	code/meta.cpp	/^  C8* text;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:C8 *	file:
text	code/momo_json.h	/^  String8 text;$/;"	m	language:C++	struct:__anond7a9c0d60608	typeref:typename:String8
text	game_mode_computer.h	/^  String8 text;$/;"	m	language:C++	struct:__anon19207be70108	typeref:typename:String8
text	meta.cpp	/^  C8* text;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:C8 *	file:
text	momo_json.h	/^  String8 text;$/;"	m	language:C++	struct:__anon0e7e656c0608	typeref:typename:String8
Texture	code/game_renderer_opengl.h	/^struct Texture {$/;"	s	language:C++
textureId	test.c	/^    unsigned int textureId;     \/\/ Texture id to be used on the draw -> Use to create new draw/;"	m	language:C	struct:rlDrawCall	typeref:typename:unsigned int	file:
textures	code/game_gfx_opengl.h	/^  OGL_Texture textures[256];$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture[256]
textures	code/game_renderer_opengl.h	/^  Texture textures[256];$/;"	m	language:C++	struct:Opengl	typeref:typename:Texture[256]
textures	game_gfx_opengl.h	/^  OGL_Texture textures[256];$/;"	m	language:C++	struct:Opengl	typeref:typename:OGL_Texture[256]
texture_data	code/game_gfx.h	/^  void* texture_data;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:void *
texture_data	code/game_renderer.h	/^  void* texture_data;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:void *
texture_data	game_gfx.h	/^  void* texture_data;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:void *
texture_height	code/game_gfx.h	/^  U32 texture_height;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_height	code/game_renderer.h	/^  U32 texture_height;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_height	game_gfx.h	/^  U32 texture_height;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_index	code/game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Delete_Texture	typeref:typename:U32
texture_index	code/game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:U32
texture_index	code/game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_index	code/game_renderer.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Delete_Texture	typeref:typename:U32
texture_index	code/game_renderer.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:U32
texture_index	code/game_renderer.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_index	game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Delete_Texture	typeref:typename:U32
texture_index	game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:U32
texture_index	game_gfx.h	/^  U32 texture_index;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_queue	code/game_gfx.h	/^  Gfx_Texture_Queue texture_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Texture_Queue
texture_queue	code/game_renderer.h	/^  Gfx_Texture_Queue texture_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Texture_Queue
texture_queue	game_gfx.h	/^  Gfx_Texture_Queue texture_queue;$/;"	m	language:C++	struct:Gfx	typeref:typename:Gfx_Texture_Queue
texture_width	code/game_gfx.h	/^  U32 texture_width;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_width	code/game_renderer.h	/^  U32 texture_width;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
texture_width	game_gfx.h	/^  U32 texture_width;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:U32
text_length	code/meta.cpp	/^  U32 text_length;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:U32	file:
text_length	meta.cpp	/^  U32 text_length;$/;"	m	language:C++	struct:Meta_Tokenizer	typeref:typename:U32	file:
timer	code/game_mode_splash.h	/^  F32 timer;$/;"	m	language:C++	struct:__anoncf1e9d2d0108	typeref:typename:F32
timer	game_mode_splash.h	/^  F32 timer;$/;"	m	language:C++	struct:__anon2a657d030108	typeref:typename:F32
tmp_path	code/w32_loaded_code.h	/^  const char* tmp_path;$/;"	m	language:C++	struct:W32_Loaded_Code	typeref:typename:const char *
tmp_path	code/win_loaded_code.h	/^  const char* tmp_path;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char *
tmp_path	w32_loaded_code.h	/^  const char* tmp_path;$/;"	m	language:C++	struct:Win_Loaded_Code	typeref:typename:const char *
toolbar_follow_mouse	code/game_mode_level_editor.h	/^  B32 toolbar_follow_mouse;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
toolbar_follow_mouse	game_mode_level_editor.h	/^  B32 toolbar_follow_mouse;$/;"	m	language:C++	struct:Editor	typeref:typename:B32
toolbar_follow_mouse_offset	code/game_mode_level_editor.h	/^  V2 toolbar_follow_mouse_offset;$/;"	m	language:C++	struct:Editor	typeref:typename:V2
toolbar_follow_mouse_offset	game_mode_level_editor.h	/^  V2 toolbar_follow_mouse_offset;$/;"	m	language:C++	struct:Editor	typeref:typename:V2
toolbar_pos	code/game_mode_level_editor.h	/^  V2 toolbar_pos;$/;"	m	language:C++	struct:Editor	typeref:typename:V2
toolbar_pos	game_mode_level_editor.h	/^  V2 toolbar_pos;$/;"	m	language:C++	struct:Editor	typeref:typename:V2
TRACELOG	test.c	/^    #define TRACELOG(/;"	d	language:C	file:
TRACELOGD	test.c	/^    #define TRACELOGD(/;"	d	language:C	file:
transfer_memory	code/game_gfx.h	/^  U8* transfer_memory;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:U8 *
transfer_memory	code/game_renderer.h	/^  U8* transfer_memory;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:U8 *
transfer_memory	game_gfx.h	/^  U8* transfer_memory;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:U8 *
transfer_memory_end	code/game_gfx.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_end	code/game_gfx.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_end	code/game_renderer.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_end	code/game_renderer.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_end	game_gfx.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_end	game_gfx.h	/^  UMI transfer_memory_end;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_size	code/game_gfx.h	/^  UMI transfer_memory_size;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_size	code/game_renderer.h	/^  UMI transfer_memory_size;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_size	game_gfx.h	/^  UMI transfer_memory_size;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_start	code/game_gfx.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_start	code/game_gfx.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_start	code/game_renderer.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_start	code/game_renderer.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transfer_memory_start	game_gfx.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Payload	typeref:typename:UMI
transfer_memory_start	game_gfx.h	/^  UMI transfer_memory_start;$/;"	m	language:C++	struct:Gfx_Texture_Queue	typeref:typename:UMI
transform	test.c	/^        Matrix transform;                   \/\/ Transform matrix to be used with rlTranslate, r/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix	file:
transformRequired	test.c	/^        bool transformRequired;             \/\/ Require transform matrix application to current/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:bool	file:
Tri2	code/momo_shapes.h	/^}Tri2;$/;"	t	language:C++	typeref:struct:__anon484784200908
Tri2	momo_shapes.h	/^}Tri2;$/;"	t	language:C++	typeref:struct:__anon86d7a6360908
tri2_is_point_within	code/momo_shapes.h	/^static B32 tri2_is_point_within(Tri2 tri, V2 pt);$/;"	p	language:C++	typeref:typename:B32
tri2_is_point_within	momo_shapes.h	/^static B32 tri2_is_point_within(Tri2 tri, V2 pt);$/;"	p	language:C++	typeref:typename:B32
triangles	.\code\game_sb1.h	/^  SB1_Light_Triangle_List triangles;$/;"	m	language:C++	struct:SB1_Light
triangles	code/game_mode_lit_light.h	/^  Lit_Light_Triangle_List triangles;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Triangle_List
triangles	game_mode_lit_light.h	/^  Lit_Light_Triangle_List triangles;$/;"	m	language:C++	struct:Lit_Light	typeref:typename:Lit_Light_Triangle_List
triangle_batch	code/game_gfx_opengl.h	/^  Triangle_Batch triangle_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Triangle_Batch
Triangle_Batch	code/game_gfx_opengl.h	/^} Triangle_Batch;$/;"	t	language:C++	typeref:struct:__anon1d4ae8470908
triangle_batch	game_gfx_opengl.h	/^  Triangle_Batch triangle_batch;$/;"	m	language:C++	struct:Opengl	typeref:typename:Triangle_Batch
Triangle_Batch	game_gfx_opengl.h	/^} Triangle_Batch;$/;"	t	language:C++	typeref:struct:__anon8caa255d0908
triangle_batcher	code/game_renderer_opengl.h	/^  Triangle_Batcher triangle_batcher;$/;"	m	language:C++	struct:Opengl	typeref:typename:Triangle_Batcher
Triangle_Batcher	code/game_renderer_opengl.h	/^struct Triangle_Batcher {$/;"	s	language:C++
true	code/momo_common.h	/^# define true /;"	d	language:C++
true	momo_common.h	/^# define true /;"	d	language:C++
TTF	code/momo_ttf.h	/^}TTF;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0108
ttf	code/sui_atlas.h	/^  TTF ttf;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:TTF
TTF	momo_ttf.h	/^}TTF;$/;"	t	language:C++	typeref:struct:__anon4eb927a00108
ttf	sui_atlas.h	/^  TTF ttf;$/;"	m	language:C++	struct:Sui_Atlas_Font	typeref:typename:TTF
ttf_get_bitmap_dims_from_glyph_box	code/momo_ttf.h	/^static V2U ttf_get_bitmap_dims_from_glyph_box(Rect2 glyph_box);$/;"	p	language:C++	typeref:typename:V2U
ttf_get_bitmap_dims_from_glyph_box	code/momo_ttf.h	/^ttf_get_bitmap_dims_from_glyph_box(Rect2 glyph_box) {$/;"	f	language:C++	typeref:typename:V2U
ttf_get_bitmap_dims_from_glyph_box	momo_ttf.h	/^static V2U ttf_get_bitmap_dims_from_glyph_box(Rect2 glyph_box);$/;"	p	language:C++	typeref:typename:V2U
ttf_get_bitmap_dims_from_glyph_box	momo_ttf.h	/^ttf_get_bitmap_dims_from_glyph_box(Rect2 glyph_box) {$/;"	f	language:C++	typeref:typename:V2U
ttf_get_glyph_box	code/momo_ttf.h	/^static Rect2 ttf_get_glyph_box(TTF* ttf, U32 glyph_index, F32 scale_factor);$/;"	p	language:C++	typeref:typename:Rect2
ttf_get_glyph_box	code/momo_ttf.h	/^ttf_get_glyph_box(TTF* ttf, U32 glyph_index, F32 scale_factor) {$/;"	f	language:C++	typeref:typename:Rect2
ttf_get_glyph_box	momo_ttf.h	/^static Rect2 ttf_get_glyph_box(TTF* ttf, U32 glyph_index, F32 scale_factor);$/;"	p	language:C++	typeref:typename:Rect2
ttf_get_glyph_box	momo_ttf.h	/^ttf_get_glyph_box(TTF* ttf, U32 glyph_index, F32 scale_factor) {$/;"	f	language:C++	typeref:typename:Rect2
ttf_get_glyph_horiozontal_metrics	code/momo_ttf.h	/^static TTF_Glyph_Horizontal_Metrics ttf_get_glyph_horiozontal_metrics(TTF* ttf, U32 glyph_index)/;"	p	language:C++	typeref:typename:TTF_Glyph_Horizontal_Metrics
ttf_get_glyph_horiozontal_metrics	code/momo_ttf.h	/^ttf_get_glyph_horiozontal_metrics(TTF* ttf, U32 glyph_index)$/;"	f	language:C++	typeref:typename:TTF_Glyph_Horizontal_Metrics
ttf_get_glyph_horiozontal_metrics	momo_ttf.h	/^static TTF_Glyph_Horizontal_Metrics ttf_get_glyph_horiozontal_metrics(TTF* ttf, U32 glyph_index)/;"	p	language:C++	typeref:typename:TTF_Glyph_Horizontal_Metrics
ttf_get_glyph_horiozontal_metrics	momo_ttf.h	/^ttf_get_glyph_horiozontal_metrics(TTF* ttf, U32 glyph_index)$/;"	f	language:C++	typeref:typename:TTF_Glyph_Horizontal_Metrics
ttf_get_glyph_index	code/momo_ttf.h	/^static U32 ttf_get_glyph_index(TTF* ttf, U32 codepoint);$/;"	p	language:C++	typeref:typename:U32
ttf_get_glyph_index	code/momo_ttf.h	/^ttf_get_glyph_index(TTF* ttf, U32 codepoint) {$/;"	f	language:C++	typeref:typename:U32
ttf_get_glyph_index	momo_ttf.h	/^static U32 ttf_get_glyph_index(TTF* ttf, U32 codepoint);$/;"	p	language:C++	typeref:typename:U32
ttf_get_glyph_index	momo_ttf.h	/^ttf_get_glyph_index(TTF* ttf, U32 codepoint) {$/;"	f	language:C++	typeref:typename:U32
ttf_get_glyph_kerning	code/momo_ttf.h	/^static S32 ttf_get_glyph_kerning(TTF* ttf, U32 glyph_index_1, U32 glyph_index_2);$/;"	p	language:C++	typeref:typename:S32
ttf_get_glyph_kerning	code/momo_ttf.h	/^ttf_get_glyph_kerning(TTF* ttf, U32 glyph_index_1, U32 glyph_index_2) {$/;"	f	language:C++	typeref:typename:S32
ttf_get_glyph_kerning	momo_ttf.h	/^static S32 ttf_get_glyph_kerning(TTF* ttf, U32 glyph_index_1, U32 glyph_index_2);$/;"	p	language:C++	typeref:typename:S32
ttf_get_glyph_kerning	momo_ttf.h	/^ttf_get_glyph_kerning(TTF* ttf, U32 glyph_index_1, U32 glyph_index_2) {$/;"	f	language:C++	typeref:typename:S32
ttf_get_scale_for_pixel_height	code/momo_ttf.h	/^static F32 ttf_get_scale_for_pixel_height(TTF* ttf, F32 pixel_height);$/;"	p	language:C++	typeref:typename:F32
ttf_get_scale_for_pixel_height	code/momo_ttf.h	/^ttf_get_scale_for_pixel_height(TTF* ttf, F32 pixel_height) {$/;"	f	language:C++	typeref:typename:F32
ttf_get_scale_for_pixel_height	momo_ttf.h	/^static F32 ttf_get_scale_for_pixel_height(TTF* ttf, F32 pixel_height);$/;"	p	language:C++	typeref:typename:F32
ttf_get_scale_for_pixel_height	momo_ttf.h	/^ttf_get_scale_for_pixel_height(TTF* ttf, F32 pixel_height) {$/;"	f	language:C++	typeref:typename:F32
TTF_Glyph_Horizontal_Metrics	code/momo_ttf.h	/^} TTF_Glyph_Horizontal_Metrics;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0208
TTF_Glyph_Horizontal_Metrics	momo_ttf.h	/^} TTF_Glyph_Horizontal_Metrics;$/;"	t	language:C++	typeref:struct:__anon4eb927a00208
ttf_log	code/momo_ttf.h	/^# define ttf_log(/;"	d	language:C++
ttf_log	momo_ttf.h	/^# define ttf_log(/;"	d	language:C++
ttf_rasterize_glyph	code/momo_ttf.h	/^static Image32 ttf_rasterize_glyph(TTF* ttf, U32 glyph_index, F32 scale_factor, Bump_Allocator* /;"	p	language:C++	typeref:typename:Image32
ttf_rasterize_glyph	code/momo_ttf.h	/^ttf_rasterize_glyph(TTF* ttf, $/;"	f	language:C++	typeref:typename:Image32
ttf_rasterize_glyph	momo_ttf.h	/^static Image32 ttf_rasterize_glyph(TTF* ttf, U32 glyph_index, F32 scale_factor, Bump_Allocator* /;"	p	language:C++	typeref:typename:Image32
ttf_rasterize_glyph	momo_ttf.h	/^ttf_rasterize_glyph(TTF* ttf, $/;"	f	language:C++	typeref:typename:Image32
ttf_read	code/momo_ttf.h	/^static B32 ttf_read(TTF* ttf, void* memory, UMI memory_size);$/;"	p	language:C++	typeref:typename:B32
ttf_read	code/momo_ttf.h	/^ttf_read(TTF* ttf, void* memory, UMI memory_size) {$/;"	f	language:C++	typeref:typename:B32
ttf_read	momo_ttf.h	/^static B32 ttf_read(TTF* ttf, void* memory, UMI memory_size);$/;"	p	language:C++	typeref:typename:B32
ttf_read	momo_ttf.h	/^ttf_read(TTF* ttf, void* memory, UMI memory_size) {$/;"	f	language:C++	typeref:typename:B32
tutorial_id	code/game_mode_lit.h	/^  U32 tutorial_id;$/;"	m	language:C++	struct:__anonfc57340b0208	typeref:typename:U32
txt	README.md	/^# txt/;"	c	language:Markdown
type	code/game_inspector.h	/^  Inspector_Entry_Type type;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:Inspector_Entry_Type
type	code/meta.cpp	/^  Meta_Token_Type type;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:Meta_Token_Type	file:
type	code/momo_json.h	/^  _JSON_Token_Type type;$/;"	m	language:C++	struct:__anond7a9c0d60508	typeref:typename:_JSON_Token_Type
type	code/momo_json.h	/^  _JSON_Value_Type type;$/;"	m	language:C++	struct:__anond7a9c0d60708	typeref:typename:_JSON_Value_Type
type	code/momo_png.h	/^    U8 type[4];$/;"	m	language:C++	union:_PNG_Chunk_Header::__anon548615c1020a	typeref:typename:U8[4]
type	code/sui_atlas.h	/^  Sui_Atlas_Context_Type type;$/;"	m	language:C++	struct:Sui_Atlas_Context	typeref:typename:Sui_Atlas_Context_Type
type	game_inspector.h	/^  Inspector_Entry_Type type;$/;"	m	language:C++	struct:Inspector_Entry	typeref:typename:Inspector_Entry_Type
type	meta.cpp	/^  Meta_Token_Type type;$/;"	m	language:C++	struct:Meta_Token	typeref:typename:Meta_Token_Type	file:
type	momo_json.h	/^  _JSON_Token_Type type;$/;"	m	language:C++	struct:__anon0e7e656c0508	typeref:typename:_JSON_Token_Type
type	momo_json.h	/^  _JSON_Value_Type type;$/;"	m	language:C++	struct:__anon0e7e656c0708	typeref:typename:_JSON_Value_Type
type	momo_png.h	/^    U8 type[4];$/;"	m	language:C++	union:_PNG_Chunk_Header::__anon4e6d7f97020a	typeref:typename:U8[4]
type	sui_atlas.h	/^  Sui_Atlas_Context_Type type;$/;"	m	language:C++	struct:Sui_Atlas_Context	typeref:typename:Sui_Atlas_Context_Type
type_U32	code/momo_png.h	/^    U32 type_U32;$/;"	m	language:C++	union:_PNG_Chunk_Header::__anon548615c1020a	typeref:typename:U32
type_U32	momo_png.h	/^    U32 type_U32;$/;"	m	language:C++	union:_PNG_Chunk_Header::__anon4e6d7f97020a	typeref:typename:U32
u	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_INFINITY::__anonbacee3e5010a	typeref:typename:U32
u	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NAN::__anonbacee3e5030a	typeref:typename:U32
u	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NEG_INFINITY::__anonbacee3e5020a	typeref:typename:U32
u	code/momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonbacee3e5070a	typeref:typename:U32
u	code/momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonbacee3e50b0a	typeref:typename:U64
u	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_INFINITY::__anonbacee3e5050a	typeref:typename:U64
u	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NAN::__anonbacee3e5040a	typeref:typename:U64
u	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NEG_INFINITY::__anonbacee3e5060a	typeref:typename:U64
u	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonbacee3e50c0a	typeref:typename:U64
u	code/momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonbacee3e5080a	typeref:typename:U64
u	code/momo_vectors.h	/^	struct { F32 u, v; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20a08	typeref:typename:F32
u	code/test_essentials.h	/^      U16 u;$/;"	m	language:C++	union:test_essentials::__anon6a37947f010a	typeref:typename:U16
u	code/test_essentials.h	/^      U32 u;$/;"	m	language:C++	union:test_essentials::__anon6a37947f020a	typeref:typename:U32
u	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_INFINITY::__anonf95f05fb010a	typeref:typename:U32
u	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NAN::__anonf95f05fb030a	typeref:typename:U32
u	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	m	language:C++	union:F32_NEG_INFINITY::__anonf95f05fb020a	typeref:typename:U32
u	momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	m	language:C++	union:abs_f32::__anonf95f05fb070a	typeref:typename:U32
u	momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f32::__anonf95f05fb0b0a	typeref:typename:U64
u	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_INFINITY::__anonf95f05fb050a	typeref:typename:U64
u	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NAN::__anonf95f05fb040a	typeref:typename:U64
u	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:F64_NEG_INFINITY::__anonf95f05fb060a	typeref:typename:U64
u	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	m	language:C++	union:is_nan_f64::__anonf95f05fb0c0a	typeref:typename:U64
u	momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	m	language:C++	union:abs_f64::__anonf95f05fb080a	typeref:typename:U64
u	momo_vectors.h	/^	struct { F32 u, v; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780a08	typeref:typename:F32
u	test_essentials.h	/^      U16 u;$/;"	m	language:C++	union:test_essentials::__anond996d195010a	typeref:typename:U16
u	test_essentials.h	/^      U32 u;$/;"	m	language:C++	union:test_essentials::__anond996d195020a	typeref:typename:U32
U16	code/momo_common.h	/^typedef uint16_t U16;$/;"	t	language:C++	typeref:typename:uint16_t
U16	momo_common.h	/^typedef uint16_t U16;$/;"	t	language:C++	typeref:typename:uint16_t
U16_MAX	code/momo_common.h	/^#define U16_MAX /;"	d	language:C++
U16_MAX	momo_common.h	/^#define U16_MAX /;"	d	language:C++
U32	code/momo_common.h	/^typedef uint32_t U32;$/;"	t	language:C++	typeref:typename:uint32_t
u32	code/momo_json.h	/^    U32 u32;$/;"	m	language:C++	union:__anond7a9c0d60708::__anond7a9c0d6080a	typeref:typename:U32
U32	momo_common.h	/^typedef uint32_t U32;$/;"	t	language:C++	typeref:typename:uint32_t
u32	momo_json.h	/^    U32 u32;$/;"	m	language:C++	union:__anon0e7e656c0708::__anon0e7e656c080a	typeref:typename:U32
U32_MAX	code/momo_common.h	/^#define U32_MAX /;"	d	language:C++
U32_MAX	momo_common.h	/^#define U32_MAX /;"	d	language:C++
U64	code/momo_common.h	/^typedef uint64_t U64;$/;"	t	language:C++	typeref:typename:uint64_t
U64	momo_common.h	/^typedef uint64_t U64;$/;"	t	language:C++	typeref:typename:uint64_t
U64_MAX	code/momo_common.h	/^#define U64_MAX /;"	d	language:C++
U64_MAX	momo_common.h	/^#define U64_MAX /;"	d	language:C++
U8	code/momo_common.h	/^typedef uint8_t U8;$/;"	t	language:C++	typeref:typename:uint8_t
U8	momo_common.h	/^typedef uint8_t U8;$/;"	t	language:C++	typeref:typename:uint8_t
U8_MAX	code/momo_common.h	/^#define U8_MAX /;"	d	language:C++
U8_MAX	momo_common.h	/^#define U8_MAX /;"	d	language:C++
UMI	code/momo_common.h	/^typedef uintptr_t UMI; \/\/ aka 'unsigned memory index'$/;"	t	language:C++	typeref:typename:uintptr_t
UMI	momo_common.h	/^typedef uintptr_t UMI; \/\/ aka 'unsigned memory index'$/;"	t	language:C++	typeref:typename:uintptr_t
unfiltered_image_stream	code/momo_png.h	/^  Stream unfiltered_image_stream; \/\/ for filtering and deflating$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
unfiltered_image_stream	momo_png.h	/^  Stream unfiltered_image_stream; \/\/ for filtering and deflating$/;"	m	language:C++	struct:_PNG_Context	typeref:typename:Stream
units	code/meta.cpp	/^  U32 units;$/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:U32	file:
units	meta.cpp	/^  U32 units;$/;"	m	language:C++	struct:Profiler_Codegen	typeref:typename:U32	file:
unload	code/win_renderer.h	/^  Win_Gfx_Unload* unload;$/;"	m	language:C++	struct:Win_Gfx_Functions	typeref:typename:Win_Gfx_Unload *
unload_game_assets	code/game_assets.h	/^unload_game_assets(Game_Assets* ga, $/;"	f	language:C++	typeref:typename:B32
unload_game_assets	game_assets.h	/^unload_game_assets(Game_Assets* ga, $/;"	f	language:C++	typeref:typename:B32
update_and_render	code/game_platform.h	/^  Game_Update_And_Render* update_and_render;$/;"	m	language:C++	struct:Game_Functions	typeref:typename:Game_Update_And_Render *
update_and_render	game_platform.h	/^  Game_Update_And_Render* update_and_render;$/;"	m	language:C++	struct:Game_Functions	typeref:typename:Game_Update_And_Render *
update_and_render_console	code/game_console.h	/^update_and_render_console(Console* dc, Painter* p, Platform* pf) {$/;"	f	language:C++	typeref:typename:void
update_and_render_console	game_console.h	/^update_and_render_console(Console* dc, Painter* p, Platform* pf) {$/;"	f	language:C++	typeref:typename:void
update_and_render_inspector	code/game_inspector_rendering.h	/^update_and_render_inspector(Inspector* in, Painter* p) $/;"	f	language:C++	typeref:typename:void
update_and_render_inspector	game_inspector_rendering.h	/^update_and_render_inspector(Inspector* in, Painter* p) $/;"	f	language:C++	typeref:typename:void
update_and_render_profiler	code/game_profiler_rendering.h	/^update_and_render_profiler(Profiler* pf, Painter* p) {$/;"	f	language:C++	typeref:typename:void
update_and_render_profiler	game_profiler_rendering.h	/^update_and_render_profiler(Profiler* pf, Painter* p) {$/;"	f	language:C++	typeref:typename:void
update_editor	code/game_mode_level_editor.cpp	/^update_editor(Editor* e, Level_Mode* m, Game_Input* input, F32 dt) {$/;"	f	language:C++	typeref:typename:void	file:
update_editor	game_mode_level_editor.cpp	/^update_editor(Editor* e, Level_Mode* m, Game_Input* input, F32 dt) {$/;"	f	language:C++	typeref:typename:void	file:
update_editor_place_edges	code/game_mode_level_editor.cpp	/^update_editor_place_edges(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
update_editor_place_edges	game_mode_level_editor.cpp	/^update_editor_place_edges(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
update_editor_place_lights	code/game_mode_level_editor.cpp	/^update_editor_place_lights(Level_Mode* m,$/;"	f	language:C++	typeref:typename:void	file:
update_editor_place_lights	game_mode_level_editor.cpp	/^update_editor_place_lights(Level_Mode* m,$/;"	f	language:C++	typeref:typename:void	file:
update_editor_state_edit_edges	code/game_mode_level_editor.cpp	/^update_editor_state_edit_edges(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
update_editor_state_edit_edges	game_mode_level_editor.cpp	/^update_editor_state_edit_edges(Editor* e, $/;"	f	language:C++	typeref:typename:void	file:
user_data	code/momo_rect_pack.h	/^  void* user_data;$/;"	m	language:C++	struct:__anonb69b67e80208	typeref:typename:void *
user_data	momo_rect_pack.h	/^  void* user_data;$/;"	m	language:C++	struct:__anon3ddc5a3e0208	typeref:typename:void *
uv	code/game_gfx.h	/^  Rect2 uv; $/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2
uv	code/game_renderer.h	/^  Rect2 uv; $/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2
uv	game_gfx.h	/^  Rect2 uv; $/;"	m	language:C++	struct:Gfx_Command_Sprite	typeref:typename:Rect2
v	code/momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon71355586050a	typeref:typename:U32
v	code/momo_vectors.h	/^	struct { F32 u, v; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20a08	typeref:typename:F32
v	momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	m	language:C++	union:sb8_push_hex_u32::__anon81c9ba5c050a	typeref:typename:U32
v	momo_vectors.h	/^	struct { F32 u, v; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780a08	typeref:typename:F32
v2	code/momo_vectors.h	/^static V2    v2(F32 x, F32 y); $/;"	p	language:C++	typeref:typename:V2
v2	code/momo_vectors.h	/^v2(F32 x, F32 y){$/;"	f	language:C++	typeref:typename:V2
V2	code/momo_vectors.h	/^} V2;$/;"	t	language:C++	typeref:union:__anon8de67fa2070a
v2	momo_vectors.h	/^static V2    v2(F32 x, F32 y); $/;"	p	language:C++	typeref:typename:V2
v2	momo_vectors.h	/^v2(F32 x, F32 y){$/;"	f	language:C++	typeref:typename:V2
V2	momo_vectors.h	/^} V2;$/;"	t	language:C++	typeref:union:__anon9e7ae478070a
V2S	code/momo_vectors.h	/^} V2S;$/;"	t	language:C++	typeref:union:__anon8de67fa2040a
V2S	momo_vectors.h	/^} V2S;$/;"	t	language:C++	typeref:union:__anon9e7ae478040a
V2U	code/momo_vectors.h	/^} V2U;$/;"	t	language:C++	typeref:union:__anon8de67fa2010a
V2U	momo_vectors.h	/^} V2U;$/;"	t	language:C++	typeref:union:__anon9e7ae478010a
v2u_add	code/momo_vectors.h	/^static V2U   v2u_add(V2U lhs, V2U rhs);$/;"	p	language:C++	typeref:typename:V2U
v2u_add	code/momo_vectors.h	/^v2u_add(V2U lhs, V2U rhs) {$/;"	f	language:C++	typeref:typename:V2U
v2u_add	momo_vectors.h	/^static V2U   v2u_add(V2U lhs, V2U rhs);$/;"	p	language:C++	typeref:typename:V2U
v2u_add	momo_vectors.h	/^v2u_add(V2U lhs, V2U rhs) {$/;"	f	language:C++	typeref:typename:V2U
v2u_from_v2	code/momo_vectors.h	/^static V2U   v2u_from_v2(V2 v);$/;"	p	language:C++	typeref:typename:V2U
v2u_from_v2	code/momo_vectors.h	/^v2u_from_v2(V2 v) {$/;"	f	language:C++	typeref:typename:V2U
v2u_from_v2	momo_vectors.h	/^static V2U   v2u_from_v2(V2 v);$/;"	p	language:C++	typeref:typename:V2U
v2u_from_v2	momo_vectors.h	/^v2u_from_v2(V2 v) {$/;"	f	language:C++	typeref:typename:V2U
v2u_sub	code/momo_vectors.h	/^static V2U   v2u_sub(V2U lhs, V2U rhs);$/;"	p	language:C++	typeref:typename:V2U
v2u_sub	code/momo_vectors.h	/^v2u_sub(V2U lhs, V2U rhs){$/;"	f	language:C++	typeref:typename:V2U
v2u_sub	momo_vectors.h	/^static V2U   v2u_sub(V2U lhs, V2U rhs);$/;"	p	language:C++	typeref:typename:V2U
v2u_sub	momo_vectors.h	/^v2u_sub(V2U lhs, V2U rhs){$/;"	f	language:C++	typeref:typename:V2U
v2_add	code/momo_vectors.h	/^static V2    v2_add(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_add	code/momo_vectors.h	/^v2_add(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_add	momo_vectors.h	/^static V2    v2_add(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_add	momo_vectors.h	/^v2_add(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_angle	code/momo_vectors.h	/^static F32   v2_angle(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_angle	code/momo_vectors.h	/^v2_angle(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_angle	momo_vectors.h	/^static F32   v2_angle(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_angle	momo_vectors.h	/^v2_angle(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_cross	code/momo_vectors.h	/^static F32   v2_cross(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_cross	code/momo_vectors.h	/^v2_cross(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_cross	momo_vectors.h	/^static F32   v2_cross(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_cross	momo_vectors.h	/^v2_cross(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_dist	code/momo_vectors.h	/^static F32   v2_dist(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dist	code/momo_vectors.h	/^v2_dist(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_dist	momo_vectors.h	/^static F32   v2_dist(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dist	momo_vectors.h	/^v2_dist(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_dist_sq	code/momo_vectors.h	/^static F32   v2_dist_sq(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dist_sq	code/momo_vectors.h	/^v2_dist_sq(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_dist_sq	momo_vectors.h	/^static F32   v2_dist_sq(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dist_sq	momo_vectors.h	/^v2_dist_sq(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_div	code/momo_vectors.h	/^static V2    v2_div(V2 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_div	code/momo_vectors.h	/^v2_div(V2 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_div	momo_vectors.h	/^static V2    v2_div(V2 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_div	momo_vectors.h	/^v2_div(V2 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_dot	code/momo_vectors.h	/^static F32   v2_dot(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dot	code/momo_vectors.h	/^v2_dot(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_dot	momo_vectors.h	/^static F32   v2_dot(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:F32
v2_dot	momo_vectors.h	/^v2_dot(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:F32
v2_from_v2u	code/momo_vectors.h	/^static V2    v2_from_v2u(V2U v);$/;"	p	language:C++	typeref:typename:V2
v2_from_v2u	code/momo_vectors.h	/^v2_from_v2u(V2U v){$/;"	f	language:C++	typeref:typename:V2
v2_from_v2u	momo_vectors.h	/^static V2    v2_from_v2u(V2U v);$/;"	p	language:C++	typeref:typename:V2
v2_from_v2u	momo_vectors.h	/^v2_from_v2u(V2U v){$/;"	f	language:C++	typeref:typename:V2
v2_inv	code/momo_vectors.h	/^static V2		 v2_inv(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_inv	code/momo_vectors.h	/^v2_inv(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_inv	momo_vectors.h	/^static V2		 v2_inv(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_inv	momo_vectors.h	/^v2_inv(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_is_close	code/momo_vectors.h	/^static B32   v2_is_close(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
v2_is_close	code/momo_vectors.h	/^v2_is_close(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:B32
v2_is_close	momo_vectors.h	/^static B32   v2_is_close(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:B32
v2_is_close	momo_vectors.h	/^v2_is_close(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:B32
v2_len	code/momo_vectors.h	/^static F32   v2_len(V2 v);$/;"	p	language:C++	typeref:typename:F32
v2_len	code/momo_vectors.h	/^v2_len(V2 v) {$/;"	f	language:C++	typeref:typename:F32
v2_len	momo_vectors.h	/^static F32   v2_len(V2 v);$/;"	p	language:C++	typeref:typename:F32
v2_len	momo_vectors.h	/^v2_len(V2 v) {$/;"	f	language:C++	typeref:typename:F32
v2_len_sq	code/momo_vectors.h	/^static F32   v2_len_sq(V2 v);$/;"	p	language:C++	typeref:typename:F32
v2_len_sq	code/momo_vectors.h	/^v2_len_sq(V2 v) {$/;"	f	language:C++	typeref:typename:F32
v2_len_sq	momo_vectors.h	/^static F32   v2_len_sq(V2 v);$/;"	p	language:C++	typeref:typename:F32
v2_len_sq	momo_vectors.h	/^v2_len_sq(V2 v) {$/;"	f	language:C++	typeref:typename:F32
v2_mid	code/momo_vectors.h	/^static V2    v2_mid(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_mid	code/momo_vectors.h	/^v2_mid(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_mid	momo_vectors.h	/^static V2    v2_mid(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_mid	momo_vectors.h	/^v2_mid(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_negate	code/momo_vectors.h	/^static V2    v2_negate(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_negate	code/momo_vectors.h	/^v2_negate(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_negate	momo_vectors.h	/^static V2    v2_negate(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_negate	momo_vectors.h	/^v2_negate(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_norm	code/momo_vectors.h	/^static V2    v2_norm(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_norm	code/momo_vectors.h	/^v2_norm(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_norm	momo_vectors.h	/^static V2    v2_norm(V2 v);$/;"	p	language:C++	typeref:typename:V2
v2_norm	momo_vectors.h	/^v2_norm(V2 v) {$/;"	f	language:C++	typeref:typename:V2
v2_proj	code/momo_vectors.h	/^static V2    v2_proj(V2 v, V2 onto);$/;"	p	language:C++	typeref:typename:V2
v2_proj	code/momo_vectors.h	/^v2_proj(V2 v, V2 onto) {$/;"	f	language:C++	typeref:typename:V2
v2_proj	momo_vectors.h	/^static V2    v2_proj(V2 v, V2 onto);$/;"	p	language:C++	typeref:typename:V2
v2_proj	momo_vectors.h	/^v2_proj(V2 v, V2 onto) {$/;"	f	language:C++	typeref:typename:V2
v2_ratio	code/momo_vectors.h	/^static V2		 v2_ratio(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_ratio	momo_vectors.h	/^static V2		 v2_ratio(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_rotate	code/momo_vectors.h	/^static V2    v2_rotate(V2 v, F32 rad);$/;"	p	language:C++	typeref:typename:V2
v2_rotate	code/momo_vectors.h	/^v2_rotate(V2 v, F32 rad) {$/;"	f	language:C++	typeref:typename:V2
v2_rotate	momo_vectors.h	/^static V2    v2_rotate(V2 v, F32 rad);$/;"	p	language:C++	typeref:typename:V2
v2_rotate	momo_vectors.h	/^v2_rotate(V2 v, F32 rad) {$/;"	f	language:C++	typeref:typename:V2
v2_scale	code/momo_vectors.h	/^static V2    v2_scale(V2 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_scale	code/momo_vectors.h	/^v2_scale(V2 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_scale	momo_vectors.h	/^static V2    v2_scale(V2 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_scale	momo_vectors.h	/^v2_scale(V2 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_sub	code/momo_vectors.h	/^static V2    v2_sub(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_sub	code/momo_vectors.h	/^v2_sub(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
v2_sub	momo_vectors.h	/^static V2    v2_sub(V2 lhs, V2 rhs);$/;"	p	language:C++	typeref:typename:V2
v2_sub	momo_vectors.h	/^v2_sub(V2 lhs, V2 rhs) {$/;"	f	language:C++	typeref:typename:V2
V3	code/momo_vectors.h	/^} V3;$/;"	t	language:C++	typeref:union:__anon8de67fa20b0a
V3	momo_vectors.h	/^} V3;$/;"	t	language:C++	typeref:union:__anon9e7ae4780b0a
v3_add	code/momo_vectors.h	/^static V3    v3_add(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_add	code/momo_vectors.h	/^v3_add(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_add	momo_vectors.h	/^static V3    v3_add(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_add	momo_vectors.h	/^v3_add(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_angle	code/momo_vectors.h	/^static F32 	 v3_angle(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_angle	code/momo_vectors.h	/^v3_angle(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_angle	momo_vectors.h	/^static F32 	 v3_angle(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_angle	momo_vectors.h	/^v3_angle(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_cross	code/momo_vectors.h	/^static V3    v3_cross(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_cross	code/momo_vectors.h	/^v3_cross(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_cross	momo_vectors.h	/^static V3    v3_cross(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_cross	momo_vectors.h	/^v3_cross(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_dist	code/momo_vectors.h	/^static F32   v3_dist(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dist	code/momo_vectors.h	/^v3_dist(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_dist	momo_vectors.h	/^static F32   v3_dist(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dist	momo_vectors.h	/^v3_dist(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_dist_sq	code/momo_vectors.h	/^static F32   v3_dist_sq(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dist_sq	code/momo_vectors.h	/^v3_dist_sq(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_dist_sq	momo_vectors.h	/^static F32   v3_dist_sq(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dist_sq	momo_vectors.h	/^v3_dist_sq(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_div	code/momo_vectors.h	/^static V3    v3_div(V3 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_div	code/momo_vectors.h	/^v3_div(V3 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_div	momo_vectors.h	/^static V3    v3_div(V3 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_div	momo_vectors.h	/^v3_div(V3 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_dot	code/momo_vectors.h	/^static F32   v3_dot(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dot	code/momo_vectors.h	/^v3_dot(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_dot	momo_vectors.h	/^static F32   v3_dot(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:F32
v3_dot	momo_vectors.h	/^v3_dot(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:F32
v3_is_close	code/momo_vectors.h	/^static B32   v3_is_close(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
v3_is_close	code/momo_vectors.h	/^v3_is_close(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:B32
v3_is_close	momo_vectors.h	/^static B32   v3_is_close(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:B32
v3_is_close	momo_vectors.h	/^v3_is_close(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:B32
v3_len	code/momo_vectors.h	/^static F32   v3_len(V3 v);$/;"	p	language:C++	typeref:typename:F32
v3_len	code/momo_vectors.h	/^v3_len(V3 v) {$/;"	f	language:C++	typeref:typename:F32
v3_len	momo_vectors.h	/^static F32   v3_len(V3 v);$/;"	p	language:C++	typeref:typename:F32
v3_len	momo_vectors.h	/^v3_len(V3 v) {$/;"	f	language:C++	typeref:typename:F32
v3_len_sq	code/momo_vectors.h	/^static F32   v3_len_sq(V3 v);$/;"	p	language:C++	typeref:typename:F32
v3_len_sq	code/momo_vectors.h	/^v3_len_sq(V3 v) {$/;"	f	language:C++	typeref:typename:F32
v3_len_sq	momo_vectors.h	/^static F32   v3_len_sq(V3 v);$/;"	p	language:C++	typeref:typename:F32
v3_len_sq	momo_vectors.h	/^v3_len_sq(V3 v) {$/;"	f	language:C++	typeref:typename:F32
v3_mid	code/momo_vectors.h	/^static V3    v3_mid(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_mid	code/momo_vectors.h	/^v3_mid(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_mid	momo_vectors.h	/^static V3    v3_mid(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_mid	momo_vectors.h	/^v3_mid(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_negate	code/momo_vectors.h	/^static V3    v3_negate(V3 v);$/;"	p	language:C++	typeref:typename:V3
v3_negate	code/momo_vectors.h	/^v3_negate(V3 v) {$/;"	f	language:C++	typeref:typename:V3
v3_negate	momo_vectors.h	/^static V3    v3_negate(V3 v);$/;"	p	language:C++	typeref:typename:V3
v3_negate	momo_vectors.h	/^v3_negate(V3 v) {$/;"	f	language:C++	typeref:typename:V3
v3_norm	code/momo_vectors.h	/^static V3    v3_norm(V3 v);$/;"	p	language:C++	typeref:typename:V3
v3_norm	code/momo_vectors.h	/^v3_norm(V3 v) {$/;"	f	language:C++	typeref:typename:V3
v3_norm	momo_vectors.h	/^static V3    v3_norm(V3 v);$/;"	p	language:C++	typeref:typename:V3
v3_norm	momo_vectors.h	/^v3_norm(V3 v) {$/;"	f	language:C++	typeref:typename:V3
v3_proj	code/momo_vectors.h	/^static V3    v3_proj(V3 v, V3 onto);$/;"	p	language:C++	typeref:typename:V3
v3_proj	momo_vectors.h	/^static V3    v3_proj(V3 v, V3 onto);$/;"	p	language:C++	typeref:typename:V3
v3_project	code/momo_vectors.h	/^v3_project(V3 v, V3 onto) {$/;"	f	language:C++	typeref:typename:V3
v3_project	momo_vectors.h	/^v3_project(V3 v, V3 onto) {$/;"	f	language:C++	typeref:typename:V3
v3_scale	code/momo_vectors.h	/^static V3    v3_scale(V3 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_scale	code/momo_vectors.h	/^v3_scale(V3 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_scale	momo_vectors.h	/^static V3    v3_scale(V3 lhs, F32 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_scale	momo_vectors.h	/^v3_scale(V3 lhs, F32 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_sub	code/momo_vectors.h	/^static V3    v3_sub(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_sub	code/momo_vectors.h	/^v3_sub(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
v3_sub	momo_vectors.h	/^static V3    v3_sub(V3 lhs, V3 rhs);$/;"	p	language:C++	typeref:typename:V3
v3_sub	momo_vectors.h	/^v3_sub(V3 lhs, V3 rhs) {$/;"	f	language:C++	typeref:typename:V3
V4	code/momo_vectors.h	/^} V4;$/;"	t	language:C++	typeref:union:__anon8de67fa20e0a
V4	momo_vectors.h	/^} V4;$/;"	t	language:C++	typeref:union:__anon9e7ae4780e0a
value	code/momo_json.h	/^  _JSON_Value value;$/;"	m	language:C++	struct:_JSON_Array_Node	typeref:typename:_JSON_Value
value	code/momo_json.h	/^  _JSON_Value value;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:typename:_JSON_Value
value	momo_json.h	/^  _JSON_Value value;$/;"	m	language:C++	struct:_JSON_Array_Node	typeref:typename:_JSON_Value
value	momo_json.h	/^  _JSON_Value value;$/;"	m	language:C++	struct:_JSON_Object_Node	typeref:typename:_JSON_Value
vao	test.c	/^        bool vao;                           \/\/ VAO support (OpenGL ES2 could not support VAO e/;"	m	language:C	struct:rlglData::__anon1dda1bf60c08	typeref:typename:bool	file:
vaoId	test.c	/^    unsigned int vaoId;         \/\/ OpenGL Vertex Array Object id$/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:unsigned int	file:
vboId	test.c	/^    unsigned int vboId[4];      \/\/ OpenGL Vertex Buffer Objects id (4 types of vertex data)$/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:unsigned int[4]	file:
vel	code/game_mode_level.h	/^  V2 vel;$/;"	m	language:C++	struct:Player	typeref:typename:V2
vel	code/game_mode_lit_particles.h	/^  V2 pos, vel;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
vel	game_mode_lit_particles.h	/^  V2 pos, vel;$/;"	m	language:C++	struct:Lit_Particle	typeref:typename:V2
vertexAlignment	test.c	/^    int vertexAlignment;        \/\/ Number of vertex required for index alignment (LINES, TRIAN/;"	m	language:C	struct:rlDrawCall	typeref:typename:int	file:
vertexBuffer	test.c	/^    rlVertexBuffer *vertexBuffer; \/\/ Dynamic buffer(s) for vertex data$/;"	m	language:C	struct:rlRenderBatch	typeref:typename:rlVertexBuffer *	file:
vertexCount	test.c	/^    int vertexCount;            \/\/ Number of vertex of the draw$/;"	m	language:C	struct:rlDrawCall	typeref:typename:int	file:
vertexCounter	test.c	/^        int vertexCounter;                  \/\/ Current active render batch vertex counter (gen/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:int	file:
VERTEX_ARRAY_BINDING	code/game_renderer_opengl.h	/^enum VERTEX_ARRAY_BINDING {$/;"	g	language:C++
VERTEX_ARRAY_BINDING_COLORS	code/game_renderer_opengl.h	/^  VERTEX_ARRAY_BINDING_COLORS,$/;"	e	language:C++	enum:VERTEX_ARRAY_BINDING
VERTEX_ARRAY_BINDING_MODEL	code/game_renderer_opengl.h	/^  VERTEX_ARRAY_BINDING_MODEL,$/;"	e	language:C++	enum:VERTEX_ARRAY_BINDING
VERTEX_ARRAY_BINDING_TEXTURE	code/game_renderer_opengl.h	/^  VERTEX_ARRAY_BINDING_TEXTURE,$/;"	e	language:C++	enum:VERTEX_ARRAY_BINDING
VERTEX_ARRAY_BINDING_TRANSFORM	code/game_renderer_opengl.h	/^  VERTEX_ARRAY_BINDING_TRANSFORM$/;"	e	language:C++	enum:VERTEX_ARRAY_BINDING
Vertex_Attribute_Type	code/game_renderer_opengl.h	/^enum Vertex_Attribute_Type { $/;"	g	language:C++
VERTEX_ATTRIBUTE_TYPE_COLORS	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_COLORS,   \/\/ 1$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_MODEL	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_MODEL,    \/\/ 0 $/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TEXTURE_1	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TEXTURE_1, \/\/ 2$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TEXTURE_2	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TEXTURE_2, \/\/ 3$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TEXTURE_3	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TEXTURE_3, \/\/ 4$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TEXTURE_4	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TEXTURE_4, \/\/ 5$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TRANSFORM_1, \/\/ 6$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TRANSFORM_2, \/\/ 7$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TRANSFORM_3, \/\/ 8$/;"	e	language:C++	enum:Vertex_Attribute_Type
VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4	code/game_renderer_opengl.h	/^  VERTEX_ATTRIBUTE_TYPE_TRANSFORM_4  \/\/ 9$/;"	e	language:C++	enum:Vertex_Attribute_Type
Vertex_Buffer_Type	code/game_renderer_opengl.h	/^enum Vertex_Buffer_Type {$/;"	g	language:C++
VERTEX_BUFFER_TYPE_COLORS	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_COLORS,$/;"	e	language:C++	enum:Vertex_Buffer_Type
VERTEX_BUFFER_TYPE_COUNT	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_COUNT \/\/ 5$/;"	e	language:C++	enum:Vertex_Buffer_Type
VERTEX_BUFFER_TYPE_INDICES	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_INDICES,$/;"	e	language:C++	enum:Vertex_Buffer_Type
VERTEX_BUFFER_TYPE_MODEL	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_MODEL,$/;"	e	language:C++	enum:Vertex_Buffer_Type
VERTEX_BUFFER_TYPE_TEXTURE	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_TEXTURE,$/;"	e	language:C++	enum:Vertex_Buffer_Type
VERTEX_BUFFER_TYPE_TRANSFORM	code/game_renderer_opengl.h	/^  VERTEX_BUFFER_TYPE_TRANSFORM,$/;"	e	language:C++	enum:Vertex_Buffer_Type
vertex_count	code/momo_ttf.h	/^  U32 vertex_count;$/;"	m	language:C++	struct:__anon54d1bdca0508	typeref:typename:U32
vertex_count	momo_ttf.h	/^  U32 vertex_count;$/;"	m	language:C++	struct:__anon4eb927a00508	typeref:typename:U32
vertices	code/game_mode_level_editor.h	/^  Array_List<V2> vertices;$/;"	m	language:C++	struct:Editor	typeref:typename:Array_List<V2>
vertices	code/momo_ttf.h	/^  V2* vertices;$/;"	m	language:C++	struct:__anon54d1bdca0508	typeref:typename:V2 *
vertices	game_mode_level_editor.h	/^  Array_List<V2> vertices;$/;"	m	language:C++	struct:Editor	typeref:typename:Array_List<V2>
vertices	momo_ttf.h	/^  V2* vertices;$/;"	m	language:C++	struct:__anon4eb927a00508	typeref:typename:V2 *
vertices	test.c	/^    float *vertices;            \/\/ Vertex position (XYZ - 3 components per vertex) (shader-loc/;"	m	language:C	struct:rlVertexBuffer	typeref:typename:float *	file:
viewOffsetStereo	test.c	/^        Matrix viewOffsetStereo[2];         \/\/ VR stereo rendering eyes view offset matrices$/;"	m	language:C	struct:rlglData::__anon1dda1bf60b08	typeref:typename:Matrix[2]	file:
w	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80208	typeref:typename:U32
w	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80308	typeref:typename:U32
w	code/momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20d08	typeref:typename:F32
w	code/momo_vectors.h	/^	struct { F32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20908	typeref:typename:F32
w	code/momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon8de67fa20e0a::__anon8de67fa20f08	typeref:typename:F32
w	code/momo_vectors.h	/^	struct { S32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2040a::__anon8de67fa20608	typeref:typename:S32
w	code/momo_vectors.h	/^	struct { U32 w, h; };$/;"	m	language:C++	struct:__anon8de67fa2010a::__anon8de67fa20308	typeref:typename:U32
w	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0208	typeref:typename:U32
w	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0308	typeref:typename:U32
w	momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780d08	typeref:typename:F32
w	momo_vectors.h	/^	struct { F32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780908	typeref:typename:F32
w	momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon9e7ae4780e0a::__anon9e7ae4780f08	typeref:typename:F32
w	momo_vectors.h	/^	struct { S32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478040a::__anon9e7ae4780608	typeref:typename:S32
w	momo_vectors.h	/^	struct { U32 w, h; };$/;"	m	language:C++	struct:__anon9e7ae478010a::__anon9e7ae4780308	typeref:typename:U32
w32_add_task	code/w32.cpp	/^w32_add_task(Platform_Task_Callback callback, void* data) {$/;"	f	language:C++	typeref:typename:void	file:
w32_add_task	w32.cpp	/^w32_add_task(Platform_Task_Callback callback, void* data) {$/;"	f	language:C++	typeref:typename:void	file:
w32_add_task_entry	code/w32.cpp	/^w32_add_task_entry(W32_Work_Queue* wq, void (*callback)(void* ctx), void *data) {$/;"	f	language:C++	typeref:typename:void	file:
w32_add_task_entry	w32.cpp	/^w32_add_task_entry(W32_Work_Queue* wq, void (*callback)(void* ctx), void *data) {$/;"	f	language:C++	typeref:typename:void	file:
w32_allocate_memory_into_arena	code/w32.cpp	/^w32_allocate_memory_into_arena(Bump_Allocator* a, UMI memory_size) {$/;"	f	language:C++	typeref:typename:B32	file:
w32_allocate_memory_into_arena	w32.cpp	/^w32_allocate_memory_into_arena(Bump_Allocator* a, UMI memory_size) {$/;"	f	language:C++	typeref:typename:B32	file:
w32_audio_begin_frame	code/w32_audio.h	/^w32_audio_begin_frame(Platform_Audio* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_begin_frame	code/w32_audio_wasapi.h	/^w32_audio_begin_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_begin_frame	w32_audio.h	/^w32_audio_begin_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_end_frame	code/w32_audio.h	/^w32_audio_end_frame(Platform_Audio* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_end_frame	code/w32_audio_wasapi.h	/^w32_audio_end_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_end_frame	w32_audio.h	/^w32_audio_end_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_load	code/w32_audio.h	/^w32_audio_load(U32 samples_per_second, $/;"	p	language:C++	typeref:typename:Platform_Audio *
w32_audio_load	code/w32_audio_wasapi.h	/^w32_audio_load(U32 samples_per_second, $/;"	f	language:C++	typeref:typename:Platform_Audio *
w32_audio_load	w32_audio.h	/^w32_audio_load(U32 samples_per_second, $/;"	f	language:C++	typeref:typename:Platform_Audio *
w32_audio_unload	code/w32_audio.h	/^w32_audio_unload(Platform_Audio* audio);$/;"	p	language:C++	typeref:typename:void
w32_audio_unload	code/w32_audio_wasapi.h	/^w32_audio_unload(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_audio_unload	w32_audio.h	/^w32_audio_unload(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
w32_calc_render_region	code/w32_common.h	/^w32_calc_render_region(U32 window_w, $/;"	f	language:C++	typeref:typename:Rect2U
w32_calc_render_region	w32_common.h	/^w32_calc_render_region(U32 window_w, $/;"	f	language:C++	typeref:typename:Rect2U
w32_close_file	code/w32.cpp	/^w32_close_file(Platform_File* file) {$/;"	f	language:C++	typeref:typename:void	file:
w32_close_file	w32.cpp	/^w32_close_file(Platform_File* file) {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks	code/w32.cpp	/^w32_complete_all_tasks() {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks	w32.cpp	/^w32_complete_all_tasks() {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks_entries	code/w32.cpp	/^w32_complete_all_tasks_entries(W32_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:void	file:
w32_complete_all_tasks_entries	w32.cpp	/^w32_complete_all_tasks_entries(W32_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:void	file:
w32_do_next_work_entry	code/w32.cpp	/^w32_do_next_work_entry(W32_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:B32	file:
w32_do_next_work_entry	w32.cpp	/^w32_do_next_work_entry(W32_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:B32	file:
W32_File	code/w32.cpp	/^struct W32_File {$/;"	s	language:C++	file:
W32_File	w32.cpp	/^struct W32_File {$/;"	s	language:C++	file:
W32_File_Cabinet	code/w32.cpp	/^struct W32_File_Cabinet {$/;"	s	language:C++	file:
W32_File_Cabinet	w32.cpp	/^struct W32_File_Cabinet {$/;"	s	language:C++	file:
w32_file_time_to_large_integer	code/w32_common.h	/^w32_file_time_to_large_integer(FILETIME file_time) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_file_time_to_large_integer	w32_common.h	/^w32_file_time_to_large_integer(FILETIME file_time) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_free_memory_from_arena	code/w32.cpp	/^w32_free_memory_from_arena(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:void	file:
w32_free_memory_from_arena	w32.cpp	/^w32_free_memory_from_arena(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:void	file:
w32_get_client_dims	code/w32_common.h	/^w32_get_client_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
w32_get_client_dims	w32_common.h	/^w32_get_client_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
w32_get_file_last_write_time	code/w32_common.h	/^w32_get_file_last_write_time(const char* filename) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_file_last_write_time	w32_common.h	/^w32_get_file_last_write_time(const char* filename) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_next_free_file	code/w32.cpp	/^w32_get_next_free_file(W32_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:W32_File *	file:
w32_get_next_free_file	w32.cpp	/^w32_get_next_free_file(W32_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:W32_File *	file:
w32_get_performance_counter	code/w32_common.h	/^w32_get_performance_counter(void) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_performance_counter	w32_common.h	/^w32_get_performance_counter(void) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
w32_get_performance_counter_u64	code/w32_common.h	/^w32_get_performance_counter_u64(void) {$/;"	f	language:C++	typeref:typename:U64
w32_get_performance_counter_u64	w32_common.h	/^w32_get_performance_counter_u64(void) {$/;"	f	language:C++	typeref:typename:U64
w32_get_secs_elapsed	code/w32_common.h	/^w32_get_secs_elapsed(LARGE_INTEGER start,$/;"	f	language:C++	typeref:typename:F32
w32_get_secs_elapsed	w32_common.h	/^w32_get_secs_elapsed(LARGE_INTEGER start,$/;"	f	language:C++	typeref:typename:F32
w32_get_window_dims	code/w32_common.h	/^w32_get_window_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
w32_get_window_dims	w32_common.h	/^w32_get_window_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
w32_gfx_begin_frame	code/w32_gfx.h	/^w32_gfx_begin_frame(Gfx* renderer, $/;"	p	language:C++	typeref:typename:void
w32_gfx_begin_frame	code/w32_gfx_opengl.h	/^w32_gfx_begin_frame(Gfx* renderer,  V2U render_wh, Rect2U region) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_begin_frame	code/win_gfx.h	/^w32_gfx_begin_frame(Gfx* renderer, $/;"	p	language:C++	typeref:typename:void
w32_gfx_begin_frame	code/win_gfx_opengl.cpp	/^w32_gfx_begin_frame(Gfx* renderer,  V2U render_wh, Rect2U region) {$/;"	f	language:C++	typeref:typename:void	file:
w32_gfx_begin_frame	w32_gfx.h	/^w32_gfx_begin_frame(Gfx* renderer, $/;"	p	language:C++	typeref:typename:void
w32_gfx_begin_frame	w32_gfx_opengl.h	/^w32_gfx_begin_frame(Gfx* renderer,  V2U render_wh, Rect2U region) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_end_frame	code/w32_gfx.h	/^w32_gfx_end_frame(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_end_frame	code/w32_gfx_opengl.h	/^w32_gfx_end_frame(Gfx* renderer) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_end_frame	code/win_gfx.h	/^w32_gfx_end_frame(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_end_frame	code/win_gfx_opengl.cpp	/^w32_gfx_end_frame(Gfx* renderer) {$/;"	f	language:C++	typeref:typename:void	file:
w32_gfx_end_frame	w32_gfx.h	/^w32_gfx_end_frame(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_end_frame	w32_gfx_opengl.h	/^w32_gfx_end_frame(Gfx* renderer) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_load	code/w32_gfx.h	/^w32_gfx_load(HWND window, $/;"	p	language:C++	typeref:typename:Gfx *
w32_gfx_load	code/w32_gfx_opengl.h	/^w32_gfx_load(HWND window, $/;"	f	language:C++	typeref:typename:Gfx *
w32_gfx_load	code/win_gfx.h	/^w32_gfx_load(HWND window, $/;"	p	language:C++	typeref:typename:Gfx *
w32_gfx_load	code/win_gfx_opengl.cpp	/^w32_gfx_load(HWND window, $/;"	f	language:C++	typeref:typename:Gfx *	file:
w32_gfx_load	w32_gfx.h	/^w32_gfx_load(HWND window, $/;"	p	language:C++	typeref:typename:Gfx *
w32_gfx_load	w32_gfx_opengl.h	/^w32_gfx_load(HWND window, $/;"	f	language:C++	typeref:typename:Gfx *
w32_gfx_swap_buffer	code/w32_gfx.h	/^w32_gfx_swap_buffer(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_swap_buffer	code/w32_gfx_opengl.h	/^w32_gfx_swap_buffer(Gfx* renderer) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_unload	code/w32_gfx.h	/^w32_gfx_unload(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_unload	code/w32_gfx_opengl.h	/^w32_gfx_unload(Gfx* r) {$/;"	f	language:C++	typeref:typename:void
w32_gfx_unload	code/win_gfx.h	/^w32_gfx_unload(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_unload	code/win_gfx_opengl.cpp	/^w32_gfx_unload(Gfx* r) {$/;"	f	language:C++	typeref:typename:void	file:
w32_gfx_unload	w32_gfx.h	/^w32_gfx_unload(Gfx* renderer);$/;"	p	language:C++	typeref:typename:void
w32_gfx_unload	w32_gfx_opengl.h	/^w32_gfx_unload(Gfx* r) {$/;"	f	language:C++	typeref:typename:void
w32_init_file_cabinet	code/w32.cpp	/^w32_init_file_cabinet(W32_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:void	file:
w32_init_file_cabinet	w32.cpp	/^w32_init_file_cabinet(W32_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:void	file:
w32_init_work_queue	code/w32.cpp	/^w32_init_work_queue(W32_Work_Queue* wq, U32 thread_count) {$/;"	f	language:C++	typeref:typename:B32	file:
w32_init_work_queue	w32.cpp	/^w32_init_work_queue(W32_Work_Queue* wq, U32 thread_count) {$/;"	f	language:C++	typeref:typename:B32	file:
W32_Loaded_Code	code/w32_loaded_code.h	/^struct W32_Loaded_Code {$/;"	s	language:C++
w32_load_code	code/w32_loaded_code.h	/^w32_load_code(W32_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
w32_log	code/w32_common.h	/^#define w32_log(/;"	d	language:C++
w32_log	code/w32_common.h	/^#define w32_log(/;"	d	language:C++
w32_log	w32_common.h	/^#define w32_log(/;"	d	language:C++
w32_log	w32_common.h	/^#define w32_log(/;"	d	language:C++
w32_log_proc	code/w32_common.h	/^w32_log_proc(const char* fmt, ...) {$/;"	f	language:C++	typeref:typename:void
w32_log_proc	w32_common.h	/^w32_log_proc(const char* fmt, ...) {$/;"	f	language:C++	typeref:typename:void
w32_open_file	code/w32.cpp	/^w32_open_file(Platform_File* file,$/;"	f	language:C++	typeref:typename:B32	file:
w32_open_file	w32.cpp	/^w32_open_file(Platform_File* file,$/;"	f	language:C++	typeref:typename:B32	file:
w32_process_input	code/w32.cpp	/^w32_process_input(HWND window, Platform* pf) $/;"	f	language:C++	typeref:typename:void	file:
w32_process_input	w32.cpp	/^w32_process_input(HWND window, Platform* pf) $/;"	f	language:C++	typeref:typename:void	file:
w32_profiler_block	code/w32_common.h	/^#define w32_profiler_block(/;"	d	language:C++
w32_profiler_block	w32_common.h	/^#define w32_profiler_block(/;"	d	language:C++
w32_profile_block	code/w32_common.h	/^#define w32_profile_block(/;"	d	language:C++
w32_profile_block	w32_common.h	/^#define w32_profile_block(/;"	d	language:C++
w32_read_file	code/w32.cpp	/^w32_read_file(Platform_File* file, UMI size, UMI offset, void* dest) $/;"	f	language:C++	typeref:typename:B32	file:
w32_read_file	w32.cpp	/^w32_read_file(Platform_File* file, UMI size, UMI offset, void* dest) $/;"	f	language:C++	typeref:typename:B32	file:
w32_rect_height	code/w32_common.h	/^static inline LONG w32_rect_height(RECT r) { return r.bottom - r.top; }$/;"	f	language:C++	typeref:typename:LONG
w32_rect_height	w32_common.h	/^static inline LONG w32_rect_height(RECT r) { return r.bottom - r.top; }$/;"	f	language:C++	typeref:typename:LONG
w32_rect_width	code/w32_common.h	/^static inline LONG w32_rect_width(RECT r) { return r.right - r.left; }$/;"	f	language:C++	typeref:typename:LONG
w32_rect_width	w32_common.h	/^static inline LONG w32_rect_width(RECT r) { return r.right - r.left; }$/;"	f	language:C++	typeref:typename:LONG
w32_reload_code_if_outdated	code/w32_loaded_code.h	/^w32_reload_code_if_outdated(W32_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:B32
w32_return_file	code/w32.cpp	/^w32_return_file(W32_File_Cabinet* c, W32_File* f) {$/;"	f	language:C++	typeref:typename:void	file:
w32_return_file	w32.cpp	/^w32_return_file(W32_File_Cabinet* c, W32_File* f) {$/;"	f	language:C++	typeref:typename:void	file:
w32_setup_platform_functions	code/w32.cpp	/^w32_setup_platform_functions(Platform* pf)$/;"	f	language:C++	typeref:typename:void	file:
w32_setup_platform_functions	w32.cpp	/^w32_setup_platform_functions(Platform* pf)$/;"	f	language:C++	typeref:typename:void	file:
w32_shutdown	code/w32.cpp	/^w32_shutdown() {$/;"	f	language:C++	typeref:typename:void	file:
w32_shutdown	w32.cpp	/^w32_shutdown() {$/;"	f	language:C++	typeref:typename:void	file:
W32_State	code/w32.cpp	/^struct W32_State{$/;"	s	language:C++	file:
W32_State	w32.cpp	/^struct W32_State{$/;"	s	language:C++	file:
w32_unload_code	code/w32_loaded_code.h	/^w32_unload_code(W32_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_begin_frame	code/w32_audio_wasapi.h	/^w32_wasapi_begin_frame(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_begin_frame	w32_audio_wasapi.h	/^w32_wasapi_begin_frame(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_end_frame	code/w32_audio_wasapi.h	/^w32_wasapi_end_frame(Win_Wasapi* wasapi) $/;"	f	language:C++	typeref:typename:void
w32_wasapi_end_frame	w32_audio_wasapi.h	/^w32_wasapi_end_frame(Win_Wasapi* wasapi) $/;"	f	language:C++	typeref:typename:void
w32_wasapi_free	code/w32_audio_wasapi.h	/^w32_wasapi_free(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_free	w32_audio_wasapi.h	/^w32_wasapi_free(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
w32_wasapi_init	code/w32_audio_wasapi.h	/^w32_wasapi_init(Win_Wasapi* wasapi,$/;"	f	language:C++	typeref:typename:B32
w32_wasapi_init	w32_audio_wasapi.h	/^w32_wasapi_init(Win_Wasapi* wasapi,$/;"	f	language:C++	typeref:typename:B32
w32_window_callback	code/w32.cpp	/^w32_window_callback(HWND window, $/;"	f	language:C++	typeref:typename:LRESULT CALLBACK
w32_window_callback	w32.cpp	/^w32_window_callback(HWND window, $/;"	f	language:C++	typeref:typename:LRESULT CALLBACK
W32_Work	code/w32.cpp	/^struct W32_Work {$/;"	s	language:C++	file:
W32_Work	w32.cpp	/^struct W32_Work {$/;"	s	language:C++	file:
w32_worker_func	code/w32.cpp	/^w32_worker_func(LPVOID ctx) {$/;"	f	language:C++	typeref:typename:DWORD WINAPI	file:
w32_worker_func	w32.cpp	/^w32_worker_func(LPVOID ctx) {$/;"	f	language:C++	typeref:typename:DWORD WINAPI	file:
W32_Work_Queue	code/w32.cpp	/^struct W32_Work_Queue {$/;"	s	language:C++	file:
W32_Work_Queue	w32.cpp	/^struct W32_Work_Queue {$/;"	s	language:C++	file:
w32_write_file	code/w32.cpp	/^w32_write_file(Platform_File* file, UMI size, UMI offset, void* src)$/;"	f	language:C++	typeref:typename:B32	file:
w32_write_file	w32.cpp	/^w32_write_file(Platform_File* file, UMI size, UMI offset, void* src)$/;"	f	language:C++	typeref:typename:B32	file:
wasapi	code/w32_audio_wasapi.h	/^  Win_Wasapi* wasapi;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:Win_Wasapi *
wasapi	code/win_audio_wasapi.h	/^  Win_Wasapi* wasapi;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:Win_Wasapi *
wasapi	w32_audio_wasapi.h	/^  Win_Wasapi* wasapi;$/;"	m	language:C++	struct:Win_Wasapi_Notif_Client	typeref:typename:Win_Wasapi *
WAV	code/momo_wav.h	/^}WAV;$/;"	t	language:C++	typeref:struct:__anon54fde02a0408
wav	code/sui_pack.h	/^  WAV* wav;$/;"	m	language:C++	struct:Sui_Packer_Sound	typeref:typename:WAV *
WAV	momo_wav.h	/^}WAV;$/;"	t	language:C++	typeref:struct:__anon4ee54a000408
wav	sui_pack.h	/^  WAV* wav;$/;"	m	language:C++	struct:Sui_Packer_Sound	typeref:typename:WAV *
WAV_Data_Chunk	code/momo_wav.h	/^}WAV_Data_Chunk;$/;"	t	language:C++	typeref:struct:__anon54fde02a0308
WAV_Data_Chunk	momo_wav.h	/^}WAV_Data_Chunk;$/;"	t	language:C++	typeref:struct:__anon4ee54a000308
WAV_Fmt_Chunk	code/momo_wav.h	/^}WAV_Fmt_Chunk;$/;"	t	language:C++	typeref:struct:__anon54fde02a0208
WAV_Fmt_Chunk	momo_wav.h	/^}WAV_Fmt_Chunk;$/;"	t	language:C++	typeref:struct:__anon4ee54a000208
wav_read	code/momo_wav.h	/^static B32 wav_read(WAV* wav, void* memory, UMI size);$/;"	p	language:C++	typeref:typename:B32
wav_read	code/momo_wav.h	/^wav_read(WAV* w, void* memory, UMI memory_size) $/;"	f	language:C++	typeref:typename:B32
wav_read	momo_wav.h	/^static B32 wav_read(WAV* wav, void* memory, UMI size);$/;"	p	language:C++	typeref:typename:B32
wav_read	momo_wav.h	/^wav_read(WAV* w, void* memory, UMI memory_size) $/;"	f	language:C++	typeref:typename:B32
WAV_Riff_Chunk	code/momo_wav.h	/^}WAV_Riff_Chunk;$/;"	t	language:C++	typeref:struct:__anon54fde02a0108
WAV_Riff_Chunk	momo_wav.h	/^}WAV_Riff_Chunk;$/;"	t	language:C++	typeref:struct:__anon4ee54a000108
wglChoosePixelFormatARB	code/w32_gfx_opengl.h	/^static wglChoosePixelFormatARBFn* wglChoosePixelFormatARB;$/;"	v	language:C++	typeref:typename:wglChoosePixelFormatARBFn *
wglChoosePixelFormatARB	code/win_gfx_opengl.cpp	/^static wglChoosePixelFormatARBFn* wglChoosePixelFormatARB;$/;"	v	language:C++	typeref:typename:wglChoosePixelFormatARBFn *	file:
wglChoosePixelFormatARB	code/win_renderer_opengl.cpp	/^static wglChoosePixelFormatARBFn* wglChoosePixelFormatARB;$/;"	v	language:C++	typeref:typename:wglChoosePixelFormatARBFn *	file:
wglChoosePixelFormatARB	w32_gfx_opengl.h	/^static wglChoosePixelFormatARBFn* wglChoosePixelFormatARB;$/;"	v	language:C++	typeref:typename:wglChoosePixelFormatARBFn *
wglChoosePixelFormatARBFn	code/w32_gfx_opengl.h	/^wglChoosePixelFormatARBFn(HDC hdc,$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
wglChoosePixelFormatARBFn	code/win_gfx_opengl.cpp	/^wglChoosePixelFormatARBFn(HDC hdc,$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)	file:
wglChoosePixelFormatARBFn	code/win_renderer_opengl.cpp	/^wglChoosePixelFormatARBFn(HDC hdc,$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)	file:
wglChoosePixelFormatARBFn	w32_gfx_opengl.h	/^wglChoosePixelFormatARBFn(HDC hdc,$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
wglCreateContextAttribsARB	code/w32_gfx_opengl.h	/^static wglCreateContextAttribsARBFn* wglCreateContextAttribsARB;$/;"	v	language:C++	typeref:typename:wglCreateContextAttribsARBFn *
wglCreateContextAttribsARB	code/win_gfx_opengl.cpp	/^static wglCreateContextAttribsARBFn* wglCreateContextAttribsARB;$/;"	v	language:C++	typeref:typename:wglCreateContextAttribsARBFn *	file:
wglCreateContextAttribsARB	code/win_renderer_opengl.cpp	/^static wglCreateContextAttribsARBFn* wglCreateContextAttribsARB;$/;"	v	language:C++	typeref:typename:wglCreateContextAttribsARBFn *	file:
wglCreateContextAttribsARB	w32_gfx_opengl.h	/^static wglCreateContextAttribsARBFn* wglCreateContextAttribsARB;$/;"	v	language:C++	typeref:typename:wglCreateContextAttribsARBFn *
wglCreateContextAttribsARBFn	code/w32_gfx_opengl.h	/^wglCreateContextAttribsARBFn(HDC hdc, $/;"	t	language:C++	typeref:typename:HGLRC WINAPI ()(HDC hdc,HGLRC hShareContext,const int * attribList)
wglCreateContextAttribsARBFn	code/win_gfx_opengl.cpp	/^wglCreateContextAttribsARBFn(HDC hdc, $/;"	t	language:C++	typeref:typename:HGLRC WINAPI ()(HDC hdc,HGLRC hShareContext,const int * attribList)	file:
wglCreateContextAttribsARBFn	code/win_renderer_opengl.cpp	/^wglCreateContextAttribsARBFn(HDC hdc, $/;"	t	language:C++	typeref:typename:HGLRC WINAPI ()(HDC hdc,HGLRC hShareContext,const int * attribList)	file:
wglCreateContextAttribsARBFn	w32_gfx_opengl.h	/^wglCreateContextAttribsARBFn(HDC hdc, $/;"	t	language:C++	typeref:typename:HGLRC WINAPI ()(HDC hdc,HGLRC hShareContext,const int * attribList)
wglGetExtensionsStringEXT	code/w32_gfx_opengl.h	/^static wglGetExtensionsStringEXTFn* wglGetExtensionsStringEXT;$/;"	v	language:C++	typeref:typename:wglGetExtensionsStringEXTFn *
wglGetExtensionsStringEXT	code/win_gfx_opengl.cpp	/^static wglGetExtensionsStringEXTFn* wglGetExtensionsStringEXT;$/;"	v	language:C++	typeref:typename:wglGetExtensionsStringEXTFn *	file:
wglGetExtensionsStringEXT	code/win_renderer_opengl.cpp	/^static wglGetExtensionsStringEXTFn* wglGetExtensionsStringEXT;$/;"	v	language:C++	typeref:typename:wglGetExtensionsStringEXTFn *	file:
wglGetExtensionsStringEXT	w32_gfx_opengl.h	/^static wglGetExtensionsStringEXTFn* wglGetExtensionsStringEXT;$/;"	v	language:C++	typeref:typename:wglGetExtensionsStringEXTFn *
wglGetExtensionsStringEXTFn	code/w32_gfx_opengl.h	/^wglGetExtensionsStringEXTFn(void);$/;"	t	language:C++	typeref:typename:const char * WINAPI ()(void)
wglGetExtensionsStringEXTFn	code/win_gfx_opengl.cpp	/^wglGetExtensionsStringEXTFn(void);$/;"	t	language:C++	typeref:typename:const char * WINAPI ()(void)	file:
wglGetExtensionsStringEXTFn	code/win_renderer_opengl.cpp	/^wglGetExtensionsStringEXTFn(void);$/;"	t	language:C++	typeref:typename:const char * WINAPI ()(void)	file:
wglGetExtensionsStringEXTFn	w32_gfx_opengl.h	/^wglGetExtensionsStringEXTFn(void);$/;"	t	language:C++	typeref:typename:const char * WINAPI ()(void)
wglSwapIntervalEXT	code/w32_gfx_opengl.h	/^static wglSwapIntervalEXTFn* wglSwapIntervalEXT;$/;"	v	language:C++	typeref:typename:wglSwapIntervalEXTFn *
wglSwapIntervalEXT	code/win_gfx_opengl.cpp	/^static wglSwapIntervalEXTFn* wglSwapIntervalEXT;$/;"	v	language:C++	typeref:typename:wglSwapIntervalEXTFn *	file:
wglSwapIntervalEXT	code/win_renderer_opengl.cpp	/^static wglSwapIntervalEXTFn* wglSwapIntervalEXT;$/;"	v	language:C++	typeref:typename:wglSwapIntervalEXTFn *	file:
wglSwapIntervalEXT	w32_gfx_opengl.h	/^static wglSwapIntervalEXTFn* wglSwapIntervalEXT;$/;"	v	language:C++	typeref:typename:wglSwapIntervalEXTFn *
wglSwapIntervalEXTFn	code/w32_gfx_opengl.h	/^wglSwapIntervalEXTFn(int interval);$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(int interval)
wglSwapIntervalEXTFn	code/win_gfx_opengl.cpp	/^wglSwapIntervalEXTFn(int interval);$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(int interval)	file:
wglSwapIntervalEXTFn	code/win_renderer_opengl.cpp	/^wglSwapIntervalEXTFn(int interval);$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(int interval)	file:
wglSwapIntervalEXTFn	w32_gfx_opengl.h	/^wglSwapIntervalEXTFn(int interval);$/;"	t	language:C++	typeref:typename:BOOL WINAPI ()(int interval)
WGL_ACCELERATION_ARB	code/w32_gfx_opengl.h	/^#define WGL_ACCELERATION_ARB /;"	d	language:C++
WGL_ACCELERATION_ARB	code/win_gfx_opengl.cpp	/^#define WGL_ACCELERATION_ARB /;"	d	language:C++	file:
WGL_ACCELERATION_ARB	code/win_renderer_opengl.cpp	/^#define WGL_ACCELERATION_ARB /;"	d	language:C++	file:
WGL_ACCELERATION_ARB	w32_gfx_opengl.h	/^#define WGL_ACCELERATION_ARB /;"	d	language:C++
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_DEBUG_BIT_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_DEBUG_BIT_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_DEBUG_BIT_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_DEBUG_BIT_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_FLAGS_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d	language:C++
WGL_CONTEXT_FLAGS_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FLAGS_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FLAGS_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d	language:C++
WGL_CONTEXT_FLAG_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAG_ARB /;"	d	language:C++
WGL_CONTEXT_FLAG_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_FLAG_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FLAG_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_FLAG_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FLAG_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_FLAG_ARB /;"	d	language:C++
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d	language:C++	file:
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d	language:C++
WGL_CONTEXT_LAYER_PLANE_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d	language:C++
WGL_CONTEXT_LAYER_PLANE_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d	language:C++	file:
WGL_CONTEXT_LAYER_PLANE_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d	language:C++	file:
WGL_CONTEXT_LAYER_PLANE_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d	language:C++
WGL_CONTEXT_MAJOR_VERSION_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_MAJOR_VERSION_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d	language:C++	file:
WGL_CONTEXT_MAJOR_VERSION_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d	language:C++	file:
WGL_CONTEXT_MAJOR_VERSION_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_MINOR_VERSION_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_MINOR_VERSION_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d	language:C++	file:
WGL_CONTEXT_MINOR_VERSION_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d	language:C++	file:
WGL_CONTEXT_MINOR_VERSION_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d	language:C++
WGL_CONTEXT_PROFILE_MASK_ARB	code/w32_gfx_opengl.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d	language:C++
WGL_CONTEXT_PROFILE_MASK_ARB	code/win_gfx_opengl.cpp	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d	language:C++	file:
WGL_CONTEXT_PROFILE_MASK_ARB	code/win_renderer_opengl.cpp	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d	language:C++	file:
WGL_CONTEXT_PROFILE_MASK_ARB	w32_gfx_opengl.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d	language:C++
WGL_DOUBLE_BUFFER_ARB	code/w32_gfx_opengl.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d	language:C++
WGL_DOUBLE_BUFFER_ARB	code/win_gfx_opengl.cpp	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d	language:C++	file:
WGL_DOUBLE_BUFFER_ARB	code/win_renderer_opengl.cpp	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d	language:C++	file:
WGL_DOUBLE_BUFFER_ARB	w32_gfx_opengl.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d	language:C++
WGL_DRAW_TO_WINDOW_ARB	code/w32_gfx_opengl.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d	language:C++
WGL_DRAW_TO_WINDOW_ARB	code/win_gfx_opengl.cpp	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d	language:C++	file:
WGL_DRAW_TO_WINDOW_ARB	code/win_renderer_opengl.cpp	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d	language:C++	file:
WGL_DRAW_TO_WINDOW_ARB	w32_gfx_opengl.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d	language:C++
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	code/w32_gfx_opengl.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d	language:C++
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	code/win_gfx_opengl.cpp	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d	language:C++	file:
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	code/win_renderer_opengl.cpp	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d	language:C++	file:
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	w32_gfx_opengl.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d	language:C++
WGL_FULL_ACCELERATION_ARB	code/w32_gfx_opengl.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d	language:C++
WGL_FULL_ACCELERATION_ARB	code/win_gfx_opengl.cpp	/^#define WGL_FULL_ACCELERATION_ARB /;"	d	language:C++	file:
WGL_FULL_ACCELERATION_ARB	code/win_renderer_opengl.cpp	/^#define WGL_FULL_ACCELERATION_ARB /;"	d	language:C++	file:
WGL_FULL_ACCELERATION_ARB	w32_gfx_opengl.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d	language:C++
WGL_PIXEL_TYPE_ARB	code/w32_gfx_opengl.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d	language:C++
WGL_PIXEL_TYPE_ARB	code/win_gfx_opengl.cpp	/^#define WGL_PIXEL_TYPE_ARB /;"	d	language:C++	file:
WGL_PIXEL_TYPE_ARB	code/win_renderer_opengl.cpp	/^#define WGL_PIXEL_TYPE_ARB /;"	d	language:C++	file:
WGL_PIXEL_TYPE_ARB	w32_gfx_opengl.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d	language:C++
WGL_SetOpenglFunction	code/w32_gfx_opengl.h	/^#define WGL_SetOpenglFunction(/;"	d	language:C++
WGL_SetOpenglFunction	code/win_gfx_opengl.cpp	/^#define WGL_SetOpenglFunction(/;"	d	language:C++	file:
WGL_SetOpenglFunction	code/win_renderer_opengl.cpp	/^#define WGL_SetOpenglFunction(/;"	d	language:C++	file:
WGL_SetOpenglFunction	w32_gfx_opengl.h	/^#define WGL_SetOpenglFunction(/;"	d	language:C++
WGL_SUPPORT_OPENGL_ARB	code/w32_gfx_opengl.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d	language:C++
WGL_SUPPORT_OPENGL_ARB	code/win_gfx_opengl.cpp	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d	language:C++	file:
WGL_SUPPORT_OPENGL_ARB	code/win_renderer_opengl.cpp	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d	language:C++	file:
WGL_SUPPORT_OPENGL_ARB	w32_gfx_opengl.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d	language:C++
WGL_TYPE_RGBA_ARB	code/w32_gfx_opengl.h	/^#define WGL_TYPE_RGBA_ARB /;"	d	language:C++
WGL_TYPE_RGBA_ARB	code/win_gfx_opengl.cpp	/^#define WGL_TYPE_RGBA_ARB /;"	d	language:C++	file:
WGL_TYPE_RGBA_ARB	code/win_renderer_opengl.cpp	/^#define WGL_TYPE_RGBA_ARB /;"	d	language:C++	file:
WGL_TYPE_RGBA_ARB	w32_gfx_opengl.h	/^#define WGL_TYPE_RGBA_ARB /;"	d	language:C++
width	code/game_assets.h	/^  U32 width;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
width	code/game_gfx_opengl.h	/^  U32 width; $/;"	m	language:C++	struct:__anon1d4ae8470708	typeref:typename:U32
width	code/game_renderer.h	/^  F32 width;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
width	code/game_renderer_opengl.h	/^  U32 width; $/;"	m	language:C++	struct:Texture	typeref:typename:U32
width	code/karu.h	/^  U32 width, height;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
width	code/momo_image.h	/^  U32 width, height;$/;"	m	language:C++	struct:__anon70e8603f0108	typeref:typename:U32
width	code/momo_png.h	/^  U32 width;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U32
width	code/momo_png.h	/^  U32 width;$/;"	m	language:C++	struct:__anon548615c10108	typeref:typename:U32
width	code/sui_pack.h	/^  U32 width;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32
width	game_assets.h	/^  U32 width;$/;"	m	language:C++	struct:Bitmap_Asset	typeref:typename:U32
width	game_gfx.h	/^  F32 width;$/;"	m	language:C++	struct:Gfx_Command_View	typeref:typename:F32
width	game_gfx_opengl.h	/^  U32 width; $/;"	m	language:C++	struct:__anon8caa255d0708	typeref:typename:U32
width	karu.h	/^  U32 width, height;$/;"	m	language:C++	struct:Karu_Bitmap	typeref:typename:U32
width	momo_image.h	/^  U32 width, height;$/;"	m	language:C++	struct:__anon825197950108	typeref:typename:U32
width	momo_png.h	/^  U32 width;$/;"	m	language:C++	struct:_PNG_IHDR	typeref:typename:U32
width	momo_png.h	/^  U32 width;$/;"	m	language:C++	struct:__anon4e6d7f970108	typeref:typename:U32
width	sui_pack.h	/^  U32 width;$/;"	m	language:C++	struct:Sui_Packer_Bitmap	typeref:typename:U32
WIN32_LEAN_AND_MEAN	code/w32.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d	language:C++
WIN32_LEAN_AND_MEAN	code/win.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d	language:C++
WIN32_LEAN_AND_MEAN	w32.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d	language:C++
WINGDIAPI	test.c	/^            #define WINGDIAPI /;"	d	language:C	file:
WinMain	code/w32.cpp	/^WinMain(HINSTANCE instance, $/;"	f	language:C++	typeref:typename:int CALLBACK
WinMain	code/win.cpp	/^WinMain(HINSTANCE instance, $/;"	f	language:C++	typeref:typename:int CALLBACK
WinMain	w32.cpp	/^WinMain(HINSTANCE instance, $/;"	f	language:C++	typeref:typename:int CALLBACK
win_add_task	code/win.cpp	/^win_add_task(Platform_Task_Callback callback, void* data) {$/;"	f	language:C++	typeref:typename:void	file:
win_add_task_entry	code/win.cpp	/^win_add_task_entry(Win_Work_Queue* wq, void (*callback)(void* ctx), void *data) {$/;"	f	language:C++	typeref:typename:void	file:
win_allocate_memory_into_arena	code/win.cpp	/^win_allocate_memory_into_arena(Bump_Allocator* a, UMI memory_size) {$/;"	f	language:C++	typeref:typename:B32	file:
WIN_AUDIO	code/w32_audio.h	/^#define WIN_AUDIO$/;"	d	language:C++
win_audio_begin_frame	code/win_audio.h	/^win_audio_begin_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
win_audio_end_frame	code/win_audio.h	/^win_audio_end_frame(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
win_audio_load	code/win_audio.h	/^win_audio_load(U32 samples_per_second, $/;"	f	language:C++	typeref:typename:Platform_Audio *
win_audio_unload	code/win_audio.h	/^win_audio_unload(Platform_Audio* audio) {$/;"	f	language:C++	typeref:typename:void
win_calc_render_region	code/win_common.h	/^win_calc_render_region(U32 window_w, $/;"	f	language:C++	typeref:typename:Rect2U
win_close_file	code/win.cpp	/^win_close_file(Platform_File* file) {$/;"	f	language:C++	typeref:typename:void	file:
win_complete_all_tasks	code/win.cpp	/^win_complete_all_tasks() {$/;"	f	language:C++	typeref:typename:void	file:
win_complete_all_tasks_entries	code/win.cpp	/^win_complete_all_tasks_entries(Win_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:void	file:
win_do_next_work_entry	code/win.cpp	/^win_do_next_work_entry(Win_Work_Queue* wq) {$/;"	f	language:C++	typeref:typename:B32	file:
Win_File	code/win.cpp	/^struct Win_File {$/;"	s	language:C++	file:
Win_File_Cabinet	code/win.cpp	/^struct Win_File_Cabinet {$/;"	s	language:C++	file:
win_file_time_to_large_integer	code/win_common.h	/^win_file_time_to_large_integer(FILETIME file_time) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
win_free_memory_from_arena	code/win.cpp	/^win_free_memory_from_arena(Bump_Allocator* a) {$/;"	f	language:C++	typeref:typename:void	file:
win_get_client_dims	code/win_common.h	/^win_get_client_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
win_get_file_last_write_time	code/win_common.h	/^win_get_file_last_write_time(const char* filename) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
win_get_next_free_file	code/win.cpp	/^win_get_next_free_file(Win_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:Win_File *	file:
win_get_performance_counter	code/win_common.h	/^win_get_performance_counter(void) {$/;"	f	language:C++	typeref:typename:LARGE_INTEGER
win_get_performance_counter_u64	code/win_common.h	/^win_get_performance_counter_u64(void) {$/;"	f	language:C++	typeref:typename:U64
win_get_secs_elapsed	code/win_common.h	/^win_get_secs_elapsed(LARGE_INTEGER start,$/;"	f	language:C++	typeref:typename:F32
win_get_window_dims	code/win_common.h	/^win_get_window_dims(HWND window) {$/;"	f	language:C++	typeref:typename:V2U
Win_Gfx_Begin_Frame	code/win_renderer.h	/^Win_Gfx_Begin_Frame(Gfx* renderer, $/;"	t	language:C++	typeref:typename:void ()(Gfx * renderer,V2U render_wh,Rect2U render_region)
win_gfx_begin_frame	code/win_renderer_opengl.cpp	/^win_gfx_begin_frame(Gfx* renderer,  V2U render_wh, Rect2U region) {$/;"	f	language:C++	typeref:typename:exported void
Win_Gfx_End_Frame	code/win_renderer.h	/^Win_Gfx_End_Frame(Gfx* renderer);$/;"	t	language:C++	typeref:typename:void ()(Gfx * renderer)
win_gfx_end_frame	code/win_renderer_opengl.cpp	/^win_gfx_end_frame(Gfx* renderer) {$/;"	f	language:C++	typeref:typename:exported void
Win_Gfx_Functions	code/win_renderer.h	/^struct Win_Gfx_Functions {$/;"	s	language:C++
Win_Gfx_Load	code/win_renderer.h	/^Win_Gfx_Load(HWND window, $/;"	t	language:C++	typeref:typename:Gfx * ()(HWND window,U32 command_queue_size,U32 texture_queue_size,Bump_Allocator * allocator)
win_gfx_load	code/win_renderer_opengl.cpp	/^win_gfx_load(HWND window, $/;"	f	language:C++	typeref:typename:exported Gfx *
Win_Gfx_Unload	code/win_renderer.h	/^Win_Gfx_Unload(Gfx* renderer);$/;"	t	language:C++	typeref:typename:void ()(Gfx * renderer)
win_gfx_unload	code/win_renderer_opengl.cpp	/^win_gfx_unload(Gfx* r) {$/;"	f	language:C++	typeref:typename:exported void
WIN_H	code/w32.h	/^#define WIN_H$/;"	d	language:C++
WIN_H	code/win.h	/^#define WIN_H$/;"	d	language:C++
WIN_H	w32.h	/^#define WIN_H$/;"	d	language:C++
win_init_file_cabinet	code/win.cpp	/^win_init_file_cabinet(Win_File_Cabinet* c) {$/;"	f	language:C++	typeref:typename:void	file:
win_init_work_queue	code/win.cpp	/^win_init_work_queue(Win_Work_Queue* wq, U32 thread_count) {$/;"	f	language:C++	typeref:typename:B32	file:
Win_Loaded_Code	code/win_loaded_code.h	/^struct Win_Loaded_Code {$/;"	s	language:C++
Win_Loaded_Code	w32_loaded_code.h	/^struct Win_Loaded_Code {$/;"	s	language:C++
win_load_code	code/win_loaded_code.h	/^win_load_code(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
win_load_code	w32_loaded_code.h	/^win_load_code(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
win_load_wgl_extentions	code/win_renderer_opengl.cpp	/^win_load_wgl_extentions() {$/;"	f	language:C++	typeref:typename:B32	file:
win_log	code/win_common.h	/^#define win_log(/;"	d	language:C++
win_log	code/win_common.h	/^#define win_log(/;"	d	language:C++
win_log_proc	code/win_common.h	/^win_log_proc(const char* fmt, ...) {$/;"	f	language:C++	typeref:typename:void
win_open_file	code/win.cpp	/^win_open_file(Platform_File* file,$/;"	f	language:C++	typeref:typename:B32	file:
win_point	.\code\game_sb1.h	/^  V2 win_point;$/;"	m	language:C++	struct:SB1
win_point	code/game_mode_sb1.h	/^  V2 win_point;$/;"	m	language:C++	struct:Lit	typeref:typename:V2
win_process_input	code/win.cpp	/^win_process_input(HWND window, Platform* pf) $/;"	f	language:C++	typeref:typename:void	file:
win_profiler_block	code/win_common.h	/^#define win_profiler_block(/;"	d	language:C++
win_profile_block	code/win_common.h	/^#define win_profile_block(/;"	d	language:C++
win_read_file	code/win.cpp	/^win_read_file(Platform_File* file, UMI size, UMI offset, void* dest) $/;"	f	language:C++	typeref:typename:B32	file:
win_rect_height	code/win_common.h	/^static inline LONG win_rect_height(RECT r) { return r.bottom - r.top; }$/;"	f	language:C++	typeref:typename:LONG
win_rect_width	code/win_common.h	/^static inline LONG win_rect_width(RECT r) { return r.right - r.left; }$/;"	f	language:C++	typeref:typename:LONG
win_reload_code_if_outdated	code/win_loaded_code.h	/^win_reload_code_if_outdated(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:B32
win_reload_code_if_outdated	w32_loaded_code.h	/^win_reload_code_if_outdated(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:B32
win_renderer_function_names	code/win_renderer.h	/^static const char* win_renderer_function_names[] = {$/;"	v	language:C++	typeref:typename:const char * []
WIN_RENDERER_H	code/w32_gfx.h	/^#define WIN_RENDERER_H$/;"	d	language:C++
WIN_RENDERER_H	code/win_gfx.h	/^#define WIN_RENDERER_H$/;"	d	language:C++
WIN_RENDERER_H	code/win_renderer.h	/^#define WIN_RENDERER_H$/;"	d	language:C++
WIN_RENDERER_H	w32_gfx.h	/^#define WIN_RENDERER_H$/;"	d	language:C++
win_return_file	code/win.cpp	/^win_return_file(Win_File_Cabinet* c, Win_File* f) {$/;"	f	language:C++	typeref:typename:void	file:
win_setup_platform_functions	code/win.cpp	/^win_setup_platform_functions(Platform* pf)$/;"	f	language:C++	typeref:typename:void	file:
win_set_pixel_format	code/win_renderer_opengl.cpp	/^win_set_pixel_format(HDC dc) {$/;"	f	language:C++	typeref:typename:void	file:
win_shutdown	code/win.cpp	/^win_shutdown() {$/;"	f	language:C++	typeref:typename:void	file:
Win_State	code/win.cpp	/^struct Win_State{$/;"	s	language:C++	file:
win_try_get_wgl_function	code/win_renderer_opengl.cpp	/^win_try_get_wgl_function(const char* name, HMODULE fallback_module)$/;"	f	language:C++	typeref:typename:void *	file:
win_unload_code	code/win_loaded_code.h	/^win_unload_code(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
win_unload_code	w32_loaded_code.h	/^win_unload_code(Win_Loaded_Code* code) {$/;"	f	language:C++	typeref:typename:void
WIN_WASAPI	code/w32_audio_wasapi.h	/^#define WIN_WASAPI$/;"	d	language:C++
Win_Wasapi	code/w32_audio_wasapi.h	/^struct Win_Wasapi {$/;"	s	language:C++
WIN_WASAPI	code/win_audio_wasapi.h	/^#define WIN_WASAPI$/;"	d	language:C++
Win_Wasapi	code/win_audio_wasapi.h	/^struct Win_Wasapi {$/;"	s	language:C++
WIN_WASAPI	w32_audio_wasapi.h	/^#define WIN_WASAPI$/;"	d	language:C++
Win_Wasapi	w32_audio_wasapi.h	/^struct Win_Wasapi {$/;"	s	language:C++
win_wasapi_begin_frame	code/win_audio_wasapi.h	/^win_wasapi_begin_frame(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
win_wasapi_end_frame	code/win_audio_wasapi.h	/^win_wasapi_end_frame(Win_Wasapi* wasapi) $/;"	f	language:C++	typeref:typename:void
win_wasapi_free	code/win_audio_wasapi.h	/^win_wasapi_free(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
win_wasapi_init	code/win_audio_wasapi.h	/^win_wasapi_init(Win_Wasapi* wasapi,$/;"	f	language:C++	typeref:typename:B32
Win_Wasapi_Notif_Client	code/w32_audio_wasapi.h	/^struct Win_Wasapi_Notif_Client {$/;"	s	language:C++
Win_Wasapi_Notif_Client	code/win_audio_wasapi.h	/^struct Win_Wasapi_Notif_Client {$/;"	s	language:C++
Win_Wasapi_Notif_Client	w32_audio_wasapi.h	/^struct Win_Wasapi_Notif_Client {$/;"	s	language:C++
win_window_callback	code/win.cpp	/^win_window_callback(HWND window, $/;"	f	language:C++	typeref:typename:LRESULT CALLBACK
Win_Work	code/win.cpp	/^struct Win_Work {$/;"	s	language:C++	file:
win_worker_func	code/win.cpp	/^win_worker_func(LPVOID ctx) {$/;"	f	language:C++	typeref:typename:DWORD WINAPI	file:
Win_Work_Queue	code/win.cpp	/^struct Win_Work_Queue {$/;"	s	language:C++	file:
win_write_file	code/win.cpp	/^win_write_file(Platform_File* file, UMI size, UMI offset, void* src)$/;"	f	language:C++	typeref:typename:B32	file:
work_queue	code/w32.cpp	/^  W32_Work_Queue work_queue;$/;"	m	language:C++	struct:W32_State	typeref:typename:W32_Work_Queue	file:
work_queue	code/win.cpp	/^  Win_Work_Queue work_queue;$/;"	m	language:C++	struct:Win_State	typeref:typename:Win_Work_Queue	file:
work_queue	w32.cpp	/^  W32_Work_Queue work_queue;$/;"	m	language:C++	struct:W32_State	typeref:typename:W32_Work_Queue	file:
write_file	code/game_platform.h	/^  Platform_Write_File* write_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Write_File *
write_file	code/game_platform.h	/^  Platform_Write_File* write_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Write_File *
write_file	game_platform.h	/^  Platform_Write_File* write_file;$/;"	m	language:C++	struct:Platform	typeref:typename:Platform_Write_File *
write_file	game_platform.h	/^  Platform_Write_File* write_file;$/;"	m	language:C++	struct:Platform_API	typeref:typename:Platform_Write_File *
wtf_sia	build/meta_test.cpp	/^#define wtf_sia(/;"	d	language:C++	file:
x	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80208	typeref:typename:U32
x	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80308	typeref:typename:U32
x	code/momo_ttf.h	/^  S16 x, y; $/;"	m	language:C++	struct:__anon54d1bdca0308	typeref:typename:S16
x	code/momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon8de67fa20e0a::__anon8de67fa20f08	typeref:typename:F32
x	code/momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20c08	typeref:typename:F32
x	code/momo_vectors.h	/^	struct { F32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20808	typeref:typename:F32
x	code/momo_vectors.h	/^	struct { S32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2040a::__anon8de67fa20508	typeref:typename:S32
x	code/momo_vectors.h	/^	struct { U32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2010a::__anon8de67fa20208	typeref:typename:U32
x	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0208	typeref:typename:U32
x	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0308	typeref:typename:U32
x	momo_ttf.h	/^  S16 x, y; $/;"	m	language:C++	struct:__anon4eb927a00308	typeref:typename:S16
x	momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon9e7ae4780e0a::__anon9e7ae4780f08	typeref:typename:F32
x	momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780c08	typeref:typename:F32
x	momo_vectors.h	/^	struct { F32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780808	typeref:typename:F32
x	momo_vectors.h	/^	struct { S32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478040a::__anon9e7ae4780508	typeref:typename:S32
x	momo_vectors.h	/^	struct { U32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478010a::__anon9e7ae4780208	typeref:typename:U32
x_intersect	code/momo_ttf.h	/^  F32 x_intersect;$/;"	m	language:C++	struct:__anon54d1bdca0608	typeref:typename:F32
x_intersect	momo_ttf.h	/^  F32 x_intersect;$/;"	m	language:C++	struct:__anon4eb927a00608	typeref:typename:F32
y	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80208	typeref:typename:U32
y	code/momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anonb69b67e80308	typeref:typename:U32
y	code/momo_ttf.h	/^  S16 x, y; $/;"	m	language:C++	struct:__anon54d1bdca0308	typeref:typename:S16
y	code/momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon8de67fa20e0a::__anon8de67fa20f08	typeref:typename:F32
y	code/momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20c08	typeref:typename:F32
y	code/momo_vectors.h	/^	struct { F32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2070a::__anon8de67fa20808	typeref:typename:F32
y	code/momo_vectors.h	/^	struct { S32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2040a::__anon8de67fa20508	typeref:typename:S32
y	code/momo_vectors.h	/^	struct { U32 x, y; };$/;"	m	language:C++	struct:__anon8de67fa2010a::__anon8de67fa20208	typeref:typename:U32
y	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0208	typeref:typename:U32
y	momo_rect_pack.h	/^	U32 x, y, w, h;$/;"	m	language:C++	struct:__anon3ddc5a3e0308	typeref:typename:U32
y	momo_ttf.h	/^  S16 x, y; $/;"	m	language:C++	struct:__anon4eb927a00308	typeref:typename:S16
y	momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon9e7ae4780e0a::__anon9e7ae4780f08	typeref:typename:F32
y	momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780c08	typeref:typename:F32
y	momo_vectors.h	/^	struct { F32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478070a::__anon9e7ae4780808	typeref:typename:F32
y	momo_vectors.h	/^	struct { S32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478040a::__anon9e7ae4780508	typeref:typename:S32
y	momo_vectors.h	/^	struct { U32 x, y; };$/;"	m	language:C++	struct:__anon9e7ae478010a::__anon9e7ae4780208	typeref:typename:U32
z	code/momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon8de67fa20e0a::__anon8de67fa20f08	typeref:typename:F32
z	code/momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon8de67fa20b0a::__anon8de67fa20c08	typeref:typename:F32
z	momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	m	language:C++	struct:__anon9e7ae4780e0a::__anon9e7ae4780f08	typeref:typename:F32
z	momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	m	language:C++	struct:__anon9e7ae4780b0a::__anon9e7ae4780c08	typeref:typename:F32
zero_array	code/momo_common.h	/^#define zero_array(/;"	d	language:C++
zero_array	momo_common.h	/^#define zero_array(/;"	d	language:C++
zero_memory	code/momo_common.h	/^zero_memory(void* dest, UMI size) {$/;"	f	language:C++	typeref:typename:void
zero_memory	code/momo_common.h	/^zero_memory(void* dest, UMI size) {$/;"	f	language:C++	typeref:typename:void
zero_memory	momo_common.h	/^zero_memory(void* dest, UMI size) {$/;"	f	language:C++	typeref:typename:void
zero_memory	momo_common.h	/^zero_memory(void* dest, UMI size) {$/;"	f	language:C++	typeref:typename:void
zero_range	code/momo_common.h	/^#define zero_range(/;"	d	language:C++
zero_range	momo_common.h	/^#define zero_range(/;"	d	language:C++
zero_struct	code/momo_common.h	/^#define zero_struct(/;"	d	language:C++
zero_struct	momo_common.h	/^#define zero_struct(/;"	d	language:C++
zoom_level	code/game_painter.h	/^  F32 zoom_level;$/;"	m	language:C++	struct:Painter	typeref:typename:F32
_ba_set_revert_point	code/momo_memory.h	/^# define _ba_set_revert_point(/;"	d	language:C++
_ba_set_revert_point	momo_memory.h	/^# define _ba_set_revert_point(/;"	d	language:C++
_compute_f64	code/momo_common.h	/^_compute_f64(S64 power, U64 i, B32 negative) $/;"	f	language:C++	typeref:typename:F64
_compute_f64	momo_common.h	/^_compute_f64(S64 power, U64 i, B32 negative) $/;"	f	language:C++	typeref:typename:F64
_defer_dummy	code/momo_common.h	/^struct _defer_dummy {};$/;"	s	language:C++
_defer_dummy	momo_common.h	/^struct _defer_dummy {};$/;"	s	language:C++
_defer_scope_guard	code/momo_common.h	/^struct _defer_scope_guard {$/;"	s	language:C++
_defer_scope_guard	momo_common.h	/^struct _defer_scope_guard {$/;"	s	language:C++
_execute	code/game_console.h	/^_execute(Console* dc) {$/;"	f	language:C++	typeref:typename:void
_execute	game_console.h	/^_execute(Console* dc) {$/;"	f	language:C++	typeref:typename:void
_gfx_push_command	code/game_gfx.h	/^_gfx_push_command(Gfx_Command_Queue* q, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:T *
_gfx_push_command	code/game_renderer.h	/^_gfx_push_command(Gfx_Command_Queue* q, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:T *
_gfx_push_command	game_gfx.h	/^_gfx_push_command(Gfx_Command_Queue* q, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:T *
_gfx_push_command_block	code/game_gfx.h	/^_gfx_push_command_block(Gfx_Command_Queue* q, U32 size, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:void *
_gfx_push_command_block	code/game_renderer.h	/^_gfx_push_command_block(Gfx_Command_Queue* q, U32 size, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:void *
_gfx_push_command_block	game_gfx.h	/^_gfx_push_command_block(Gfx_Command_Queue* q, U32 size, U32 id, U32 align = 4) {$/;"	f	language:C++	typeref:typename:void *
_g_profiler	code/w32.cpp	/^Profiler _g_profiler = {0};$/;"	v	language:C++	typeref:typename:Profiler
_g_profiler	code/win.cpp	/^Profiler _g_profiler = {0};$/;"	v	language:C++	typeref:typename:Profiler
_g_profiler	w32.cpp	/^Profiler _g_profiler = {0};$/;"	v	language:C++	typeref:typename:Profiler
_hue_to_color	code/momo_colors.h	/^_hue_to_color(F32 p, F32 q, F32 t) {$/;"	f	language:C++	typeref:typename:F32
_hue_to_color	momo_colors.h	/^_hue_to_color(F32 p, F32 q, F32 t) {$/;"	f	language:C++	typeref:typename:F32
_json_append_array	code/momo_json.h	/^_json_append_array(JSON_Array* arr, _JSON_Array_Node* node) {$/;"	f	language:C++	typeref:typename:void
_json_append_array	momo_json.h	/^_json_append_array(JSON_Array* arr, _JSON_Array_Node* node) {$/;"	f	language:C++	typeref:typename:void
_JSON_Array_Node	code/momo_json.h	/^typedef struct _JSON_Array_Node{$/;"	s	language:C++
_JSON_Array_Node	code/momo_json.h	/^} _JSON_Array_Node;$/;"	t	language:C++	typeref:struct:_JSON_Array_Node
_JSON_Array_Node	momo_json.h	/^typedef struct _JSON_Array_Node{$/;"	s	language:C++
_JSON_Array_Node	momo_json.h	/^} _JSON_Array_Node;$/;"	t	language:C++	typeref:struct:_JSON_Array_Node
_json_create_tokenizer	code/momo_json.h	/^_json_create_tokenizer(void* png_memory, UMI png_size) {$/;"	f	language:C++	typeref:typename:_JSON_Tokenizer
_json_create_tokenizer	momo_json.h	/^_json_create_tokenizer(void* png_memory, UMI png_size) {$/;"	f	language:C++	typeref:typename:_JSON_Tokenizer
_json_eat_ignorables	code/momo_json.h	/^_json_eat_ignorables(_JSON_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void
_json_eat_ignorables	momo_json.h	/^_json_eat_ignorables(_JSON_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:void
_json_get	code/momo_json.h	/^_json_get(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:_JSON_Object_Node *
_json_get	momo_json.h	/^_json_get(JSON_Object* j, String8 key) {$/;"	f	language:C++	typeref:typename:_JSON_Object_Node *
_json_insert_node	code/momo_json.h	/^_json_insert_node(_JSON_Object_Node** node, _JSON_Object_Node* new_node) {$/;"	f	language:C++	typeref:typename:B32
_json_insert_node	momo_json.h	/^_json_insert_node(_JSON_Object_Node** node, _JSON_Object_Node* new_node) {$/;"	f	language:C++	typeref:typename:B32
_json_next_token	code/momo_json.h	/^_json_next_token(_JSON_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:_JSON_Token
_json_next_token	momo_json.h	/^_json_next_token(_JSON_Tokenizer* t) {$/;"	f	language:C++	typeref:typename:_JSON_Token
_JSON_Object_Expect_Type	code/momo_json.h	/^} _JSON_Object_Expect_Type;$/;"	t	language:C++	typeref:enum:__anond7a9c0d60403
_JSON_Object_Expect_Type	momo_json.h	/^} _JSON_Object_Expect_Type;$/;"	t	language:C++	typeref:enum:__anon0e7e656c0403
_JSON_OBJECT_EXPECT_TYPE_COLON	code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COLON,$/;"	e	language:C++	enum:__anond7a9c0d60403
_JSON_OBJECT_EXPECT_TYPE_COLON	momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COLON,$/;"	e	language:C++	enum:__anon0e7e656c0403
_JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE	code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE,$/;"	e	language:C++	enum:__anond7a9c0d60403
_JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE	momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_COMMA_OR_CLOSE,$/;"	e	language:C++	enum:__anon0e7e656c0403
_JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE	code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE,$/;"	e	language:C++	enum:__anond7a9c0d60403
_JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE	momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_KEY_OR_CLOSE,$/;"	e	language:C++	enum:__anon0e7e656c0403
_JSON_OBJECT_EXPECT_TYPE_OPEN	code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_OPEN,$/;"	e	language:C++	enum:__anond7a9c0d60403
_JSON_OBJECT_EXPECT_TYPE_OPEN	momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_OPEN,$/;"	e	language:C++	enum:__anon0e7e656c0403
_JSON_OBJECT_EXPECT_TYPE_VALUE	code/momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_VALUE,$/;"	e	language:C++	enum:__anond7a9c0d60403
_JSON_OBJECT_EXPECT_TYPE_VALUE	momo_json.h	/^  _JSON_OBJECT_EXPECT_TYPE_VALUE,$/;"	e	language:C++	enum:__anon0e7e656c0403
_JSON_Object_Node	code/momo_json.h	/^typedef struct _JSON_Object_Node {$/;"	s	language:C++
_JSON_Object_Node	code/momo_json.h	/^} _JSON_Object_Node;$/;"	t	language:C++	typeref:struct:_JSON_Object_Node
_JSON_Object_Node	momo_json.h	/^typedef struct _JSON_Object_Node {$/;"	s	language:C++
_JSON_Object_Node	momo_json.h	/^} _JSON_Object_Node;$/;"	t	language:C++	typeref:struct:_JSON_Object_Node
_json_parse_array	code/momo_json.h	/^_json_parse_array(JSON_Array* arr, _JSON_Tokenizer* t, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
_json_parse_array	momo_json.h	/^_json_parse_array(JSON_Array* arr, _JSON_Tokenizer* t, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
_json_parse_object	code/momo_json.h	/^static B32 _json_parse_object(JSON_Object*, _JSON_Tokenizer* t, Bump_Allocator* ba);$/;"	p	language:C++	typeref:typename:B32
_json_parse_object	code/momo_json.h	/^_json_parse_object(JSON_Object* obj, _JSON_Tokenizer* t, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
_json_parse_object	momo_json.h	/^static B32 _json_parse_object(JSON_Object*, _JSON_Tokenizer* t, Bump_Allocator* ba);$/;"	p	language:C++	typeref:typename:B32
_json_parse_object	momo_json.h	/^_json_parse_object(JSON_Object* obj, _JSON_Tokenizer* t, Bump_Allocator* ba) {$/;"	f	language:C++	typeref:typename:B32
_json_print_nodes_in_order	code/momo_json.h	/^static void _json_print_nodes_in_order(_JSON_Object_Node* node);$/;"	p	language:C++	typeref:typename:void
_json_print_nodes_in_order	code/momo_json.h	/^_json_print_nodes_in_order(_JSON_Object_Node* node) {$/;"	f	language:C++	typeref:typename:void
_json_print_nodes_in_order	momo_json.h	/^static void _json_print_nodes_in_order(_JSON_Object_Node* node);$/;"	p	language:C++	typeref:typename:void
_json_print_nodes_in_order	momo_json.h	/^_json_print_nodes_in_order(_JSON_Object_Node* node) {$/;"	f	language:C++	typeref:typename:void
_json_print_token	code/momo_json.h	/^_json_print_token(_JSON_Tokenizer* t, _JSON_Token token)  {$/;"	f	language:C++	typeref:typename:void
_json_print_token	momo_json.h	/^_json_print_token(_JSON_Tokenizer* t, _JSON_Token token)  {$/;"	f	language:C++	typeref:typename:void
_json_print_value	code/momo_json.h	/^_json_print_value(_JSON_Value* value) {$/;"	f	language:C++	typeref:typename:void
_json_print_value	momo_json.h	/^_json_print_value(_JSON_Value* value) {$/;"	f	language:C++	typeref:typename:void
_json_set_node_key	code/momo_json.h	/^_json_set_node_key(_JSON_Object_Node* node, _JSON_Tokenizer* j, _JSON_Token key)$/;"	f	language:C++	typeref:typename:void
_json_set_node_key	momo_json.h	/^_json_set_node_key(_JSON_Object_Node* node, _JSON_Tokenizer* j, _JSON_Token key)$/;"	f	language:C++	typeref:typename:void
_json_set_value_based_on_token	code/momo_json.h	/^static B32 _json_set_value_based_on_token(_JSON_Value* value, _JSON_Tokenizer* t, _JSON_Token to/;"	p	language:C++	typeref:typename:B32
_json_set_value_based_on_token	code/momo_json.h	/^_json_set_value_based_on_token(_JSON_Value* value, $/;"	f	language:C++	typeref:typename:B32
_json_set_value_based_on_token	momo_json.h	/^static B32 _json_set_value_based_on_token(_JSON_Value* value, _JSON_Tokenizer* t, _JSON_Token to/;"	p	language:C++	typeref:typename:B32
_json_set_value_based_on_token	momo_json.h	/^_json_set_value_based_on_token(_JSON_Value* value, $/;"	f	language:C++	typeref:typename:B32
_JSON_Token	code/momo_json.h	/^}_JSON_Token;$/;"	t	language:C++	typeref:struct:__anond7a9c0d60508
_JSON_Token	momo_json.h	/^}_JSON_Token;$/;"	t	language:C++	typeref:struct:__anon0e7e656c0508
_JSON_Tokenizer	code/momo_json.h	/^} _JSON_Tokenizer;$/;"	t	language:C++	typeref:struct:__anond7a9c0d60608
_JSON_Tokenizer	momo_json.h	/^} _JSON_Tokenizer;$/;"	t	language:C++	typeref:struct:__anon0e7e656c0608
_JSON_Token_Type	code/momo_json.h	/^} _JSON_Token_Type;$/;"	t	language:C++	typeref:enum:__anond7a9c0d60203
_JSON_Token_Type	momo_json.h	/^} _JSON_Token_Type;$/;"	t	language:C++	typeref:enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_CLOSE_BRACE	code/momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_CLOSE_BRACE	momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACE,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_CLOSE_BRACKET	code/momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_CLOSE_BRACKET	momo_json.h	/^  _JSON_TOKEN_TYPE_CLOSE_BRACKET,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_COLON	code/momo_json.h	/^  _JSON_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_COLON	momo_json.h	/^  _JSON_TOKEN_TYPE_COLON,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_COMMA	code/momo_json.h	/^  _JSON_TOKEN_TYPE_COMMA,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_COMMA	momo_json.h	/^  _JSON_TOKEN_TYPE_COMMA,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_EOF	code/momo_json.h	/^  _JSON_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_EOF	momo_json.h	/^  _JSON_TOKEN_TYPE_EOF$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_FALSE	code/momo_json.h	/^  _JSON_TOKEN_TYPE_FALSE,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_FALSE	momo_json.h	/^  _JSON_TOKEN_TYPE_FALSE,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_FLOATING_POINT	code/momo_json.h	/^  _JSON_TOKEN_TYPE_FLOATING_POINT,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_FLOATING_POINT	momo_json.h	/^  _JSON_TOKEN_TYPE_FLOATING_POINT,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_IDENTIFIER	code/momo_json.h	/^  _JSON_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_IDENTIFIER	momo_json.h	/^  _JSON_TOKEN_TYPE_IDENTIFIER,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_NULL	code/momo_json.h	/^  _JSON_TOKEN_TYPE_NULL,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_NULL	momo_json.h	/^  _JSON_TOKEN_TYPE_NULL,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_OPEN_BRACE	code/momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_OPEN_BRACE	momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACE,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_OPEN_BRACKET	code/momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_OPEN_BRACKET	momo_json.h	/^  _JSON_TOKEN_TYPE_OPEN_BRACKET,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_SIGNED_INTEGER	code/momo_json.h	/^  _JSON_TOKEN_TYPE_SIGNED_INTEGER,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_SIGNED_INTEGER	momo_json.h	/^  _JSON_TOKEN_TYPE_SIGNED_INTEGER,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_STRING	code/momo_json.h	/^  _JSON_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_STRING	momo_json.h	/^  _JSON_TOKEN_TYPE_STRING,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_TRUE	code/momo_json.h	/^  _JSON_TOKEN_TYPE_TRUE,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_TRUE	momo_json.h	/^  _JSON_TOKEN_TYPE_TRUE,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_UNKNOWN	code/momo_json.h	/^  _JSON_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_UNKNOWN	momo_json.h	/^  _JSON_TOKEN_TYPE_UNKNOWN,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_TOKEN_TYPE_UNSIGNED_INTEGER	code/momo_json.h	/^  _JSON_TOKEN_TYPE_UNSIGNED_INTEGER,$/;"	e	language:C++	enum:__anond7a9c0d60203
_JSON_TOKEN_TYPE_UNSIGNED_INTEGER	momo_json.h	/^  _JSON_TOKEN_TYPE_UNSIGNED_INTEGER,$/;"	e	language:C++	enum:__anon0e7e656c0203
_JSON_Value	code/momo_json.h	/^} _JSON_Value;$/;"	t	language:C++	typeref:struct:__anond7a9c0d60708
_JSON_Value	momo_json.h	/^} _JSON_Value;$/;"	t	language:C++	typeref:struct:__anon0e7e656c0708
_JSON_Value_Type	code/momo_json.h	/^} _JSON_Value_Type;$/;"	t	language:C++	typeref:enum:__anond7a9c0d60303
_JSON_Value_Type	momo_json.h	/^} _JSON_Value_Type;$/;"	t	language:C++	typeref:enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_ARRAY	code/momo_json.h	/^  _JSON_VALUE_TYPE_ARRAY,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_ARRAY	momo_json.h	/^  _JSON_VALUE_TYPE_ARRAY,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_B32	code/momo_json.h	/^  _JSON_VALUE_TYPE_B32,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_B32	momo_json.h	/^  _JSON_VALUE_TYPE_B32,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_F32	code/momo_json.h	/^  _JSON_VALUE_TYPE_F32,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_F32	momo_json.h	/^  _JSON_VALUE_TYPE_F32,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_NULL	code/momo_json.h	/^  _JSON_VALUE_TYPE_NULL$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_NULL	momo_json.h	/^  _JSON_VALUE_TYPE_NULL$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_OBJECT	code/momo_json.h	/^  _JSON_VALUE_TYPE_OBJECT,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_OBJECT	momo_json.h	/^  _JSON_VALUE_TYPE_OBJECT,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_S32	code/momo_json.h	/^  _JSON_VALUE_TYPE_S32,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_S32	momo_json.h	/^  _JSON_VALUE_TYPE_S32,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_STR8	code/momo_json.h	/^  _JSON_VALUE_TYPE_STR8,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_STR8	momo_json.h	/^  _JSON_VALUE_TYPE_STR8,$/;"	e	language:C++	enum:__anon0e7e656c0303
_JSON_VALUE_TYPE_U32	code/momo_json.h	/^  _JSON_VALUE_TYPE_U32,$/;"	e	language:C++	enum:__anond7a9c0d60303
_JSON_VALUE_TYPE_U32	momo_json.h	/^  _JSON_VALUE_TYPE_U32,$/;"	e	language:C++	enum:__anon0e7e656c0303
_ogl_add_predefined_textures	code/game_gfx_opengl.h	/^_ogl_add_predefined_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_add_predefined_textures	code/game_renderer_opengl.h	/^_ogl_add_predefined_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_add_predefined_textures	game_gfx_opengl.h	/^_ogl_add_predefined_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_align_viewport	code/game_gfx_opengl.h	/^_ogl_align_viewport(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_align_viewport	code/game_renderer_opengl.h	/^_ogl_align_viewport(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_align_viewport	game_gfx_opengl.h	/^_ogl_align_viewport(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_attach_shader	code/game_gfx_opengl.h	/^_ogl_attach_shader(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_attach_shader	code/game_renderer_opengl.h	/^_ogl_attach_shader(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_attach_shader	game_gfx_opengl.h	/^_ogl_attach_shader(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_begin_sprites	code/game_gfx_opengl.h	/^_ogl_begin_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_begin_sprites	code/game_renderer_opengl.h	/^_ogl_begin_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_begin_sprites	game_gfx_opengl.h	/^_ogl_begin_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_begin_triangles	code/game_gfx_opengl.h	/^_ogl_begin_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_begin_triangles	game_gfx_opengl.h	/^_ogl_begin_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_all_textures	code/game_gfx_opengl.h	/^_ogl_delete_all_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_all_textures	code/game_renderer_opengl.h	/^_ogl_delete_all_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_all_textures	game_gfx_opengl.h	/^_ogl_delete_all_textures(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_texture	code/game_gfx_opengl.h	/^_ogl_delete_texture(Opengl* ogl, UMI texture_index) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_texture	code/game_renderer_opengl.h	/^_ogl_delete_texture(Opengl* ogl, UMI texture_index) {$/;"	f	language:C++	typeref:typename:void
_ogl_delete_texture	game_gfx_opengl.h	/^_ogl_delete_texture(Opengl* ogl, UMI texture_index) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_sprites	code/game_gfx_opengl.h	/^_ogl_end_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_sprites	code/game_renderer_opengl.h	/^_ogl_end_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_sprites	game_gfx_opengl.h	/^_ogl_end_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_triangles	code/game_gfx_opengl.h	/^_ogl_end_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_end_triangles	game_gfx_opengl.h	/^_ogl_end_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_sprites	code/game_gfx_opengl.h	/^_ogl_flush_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_sprites	code/game_renderer_opengl.h	/^_ogl_flush_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_sprites	game_gfx_opengl.h	/^_ogl_flush_sprites(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_triangles	code/game_gfx_opengl.h	/^_ogl_flush_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_flush_triangles	game_gfx_opengl.h	/^_ogl_flush_triangles(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_get_blend_mode_from_gfx_blend_type	code/game_gfx_opengl.h	/^_ogl_get_blend_mode_from_gfx_blend_type(Gfx_Blend_Type type) {$/;"	f	language:C++	typeref:typename:GLenum
_ogl_get_blend_mode_from_gfx_blend_type	code/game_renderer_opengl.h	/^_ogl_get_blend_mode_from_gfx_blend_type(Gfx_Blend_Type type) {$/;"	f	language:C++	typeref:typename:GLenum
_ogl_get_blend_mode_from_gfx_blend_type	game_gfx_opengl.h	/^_ogl_get_blend_mode_from_gfx_blend_type(Gfx_Blend_Type type) {$/;"	f	language:C++	typeref:typename:GLenum
_ogl_init_sprite_batch	code/game_gfx_opengl.h	/^_ogl_init_sprite_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_init_sprite_batch	game_gfx_opengl.h	/^_ogl_init_sprite_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_init_sprite_batcher	code/game_renderer_opengl.h	/^_ogl_init_sprite_batcher(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_init_triangle_batch	code/game_gfx_opengl.h	/^_ogl_init_triangle_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_init_triangle_batch	game_gfx_opengl.h	/^_ogl_init_triangle_batch(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_init_triangle_batcher	code/game_renderer_opengl.h	/^_ogl_init_triangle_batcher(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:B32
_ogl_process_texture_queue	code/game_gfx_opengl.h	/^_ogl_process_texture_queue(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_process_texture_queue	code/game_renderer_opengl.h	/^_ogl_process_texture_queue(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_process_texture_queue	game_gfx_opengl.h	/^_ogl_process_texture_queue(Opengl* ogl) {$/;"	f	language:C++	typeref:typename:void
_ogl_push_sprite	code/game_gfx_opengl.h	/^_ogl_push_sprite(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_push_sprite	code/game_renderer_opengl.h	/^_ogl_push_sprite(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_push_sprite	game_gfx_opengl.h	/^_ogl_push_sprite(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_push_triangle	code/game_gfx_opengl.h	/^_ogl_push_triangle(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_push_triangle	game_gfx_opengl.h	/^_ogl_push_triangle(Opengl* ogl, $/;"	f	language:C++	typeref:typename:void
_ogl_set_blend_mode	code/game_gfx_opengl.h	/^_ogl_set_blend_mode(Opengl* ogl, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
_ogl_set_blend_mode	code/game_renderer_opengl.h	/^_ogl_set_blend_mode(Opengl* ogl, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
_ogl_set_blend_mode	game_gfx_opengl.h	/^_ogl_set_blend_mode(Opengl* ogl, Gfx_Blend_Type src, Gfx_Blend_Type dst) {$/;"	f	language:C++	typeref:typename:void
_ogl_set_texture	code/game_gfx_opengl.h	/^_ogl_set_texture(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_set_texture	code/game_renderer_opengl.h	/^_ogl_set_texture(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_ogl_set_texture	game_gfx_opengl.h	/^_ogl_set_texture(Opengl* ogl,$/;"	f	language:C++	typeref:typename:void
_png_calculate_crc32	code/momo_png.h	/^_png_calculate_crc32(U8* data, U32 data_size) {$/;"	f	language:C++	typeref:typename:U32
_png_calculate_crc32	momo_png.h	/^_png_calculate_crc32(U8* data, U32 data_size) {$/;"	f	language:C++	typeref:typename:U32
_PNG_CHANNELS	code/momo_png.h	/^#define _PNG_CHANNELS /;"	d	language:C++
_PNG_CHANNELS	momo_png.h	/^#define _PNG_CHANNELS /;"	d	language:C++
_PNG_Chunk_Footer	code/momo_png.h	/^struct _PNG_Chunk_Footer {$/;"	s	language:C++
_PNG_Chunk_Footer	momo_png.h	/^struct _PNG_Chunk_Footer {$/;"	s	language:C++
_PNG_Chunk_Header	code/momo_png.h	/^struct _PNG_Chunk_Header{$/;"	s	language:C++
_PNG_Chunk_Header	momo_png.h	/^struct _PNG_Chunk_Header{$/;"	s	language:C++
_PNG_Context	code/momo_png.h	/^struct _PNG_Context {$/;"	s	language:C++
_PNG_Context	momo_png.h	/^struct _PNG_Context {$/;"	s	language:C++
_png_decompress_zlib	code/momo_png.h	/^_png_decompress_zlib(_PNG_Context* c, Stream* zlib_stream) {$/;"	f	language:C++	typeref:typename:B32
_png_decompress_zlib	momo_png.h	/^_png_decompress_zlib(_PNG_Context* c, Stream* zlib_stream) {$/;"	f	language:C++	typeref:typename:B32
_png_deflate	code/momo_png.h	/^_png_deflate(Stream* src_stream, Stream* dest_stream, Bump_Allocator* allocator) $/;"	f	language:C++	typeref:typename:B32
_png_deflate	momo_png.h	/^_png_deflate(Stream* src_stream, Stream* dest_stream, Bump_Allocator* allocator) $/;"	f	language:C++	typeref:typename:B32
_png_filter	code/momo_png.h	/^_png_filter(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter	momo_png.h	/^_png_filter(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_average	code/momo_png.h	/^_png_filter_average(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_average	momo_png.h	/^_png_filter_average(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_none	code/momo_png.h	/^_png_filter_none(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_none	momo_png.h	/^_png_filter_none(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_paeth	code/momo_png.h	/^_png_filter_paeth(_PNG_Context* cx) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_paeth	momo_png.h	/^_png_filter_paeth(_PNG_Context* cx) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_sub	code/momo_png.h	/^_png_filter_sub(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_sub	momo_png.h	/^_png_filter_sub(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_up	code/momo_png.h	/^_png_filter_up(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_filter_up	momo_png.h	/^_png_filter_up(_PNG_Context* c) {$/;"	f	language:C++	typeref:typename:B32
_png_get_channels_from_colour_type	code/momo_png.h	/^_png_get_channels_from_colour_type(U32 colour_type) {$/;"	f	language:C++	typeref:typename:U32
_png_get_channels_from_colour_type	momo_png.h	/^_png_get_channels_from_colour_type(U32 colour_type) {$/;"	f	language:C++	typeref:typename:U32
_PNG_Header	code/momo_png.h	/^struct _PNG_Header {$/;"	s	language:C++
_PNG_Header	momo_png.h	/^struct _PNG_Header {$/;"	s	language:C++
_PNG_Huffman	code/momo_png.h	/^struct _PNG_Huffman {$/;"	s	language:C++
_PNG_Huffman	momo_png.h	/^struct _PNG_Huffman {$/;"	s	language:C++
_png_huffman_compute	code/momo_png.h	/^_png_huffman_compute(_PNG_Huffman* h,$/;"	f	language:C++	typeref:typename:void
_png_huffman_compute	momo_png.h	/^_png_huffman_compute(_PNG_Huffman* h,$/;"	f	language:C++	typeref:typename:void
_png_huffman_decode	code/momo_png.h	/^_png_huffman_decode(Stream* src_stream, _PNG_Huffman huffman) {$/;"	f	language:C++	typeref:typename:S32
_png_huffman_decode	momo_png.h	/^_png_huffman_decode(Stream* src_stream, _PNG_Huffman huffman) {$/;"	f	language:C++	typeref:typename:S32
_PNG_IDAT_Header	code/momo_png.h	/^struct _PNG_IDAT_Header{$/;"	s	language:C++
_PNG_IDAT_Header	momo_png.h	/^struct _PNG_IDAT_Header{$/;"	s	language:C++
_PNG_IHDR	code/momo_png.h	/^struct _PNG_IHDR {$/;"	s	language:C++
_PNG_IHDR	momo_png.h	/^struct _PNG_IHDR {$/;"	s	language:C++
_png_is_format_supported	code/momo_png.h	/^_png_is_format_supported(_PNG_IHDR* IHDR){$/;"	f	language:C++	typeref:typename:B32
_png_is_format_supported	momo_png.h	/^_png_is_format_supported(_PNG_IHDR* IHDR){$/;"	f	language:C++	typeref:typename:B32
_png_is_signature_valid	code/momo_png.h	/^_png_is_signature_valid(U8* comparee) {$/;"	f	language:C++	typeref:typename:B32
_png_is_signature_valid	momo_png.h	/^_png_is_signature_valid(U8* comparee) {$/;"	f	language:C++	typeref:typename:B32
_prf_begin_profiling_block	code/game_profiler.h	/^_prf_begin_profiling_block(Profiler* p, Profiler_Entry* entry) $/;"	f	language:C++	typeref:typename:void
_prf_begin_profiling_block	game_profiler.h	/^_prf_begin_profiling_block(Profiler* p, Profiler_Entry* entry) $/;"	f	language:C++	typeref:typename:void
_prf_block	code/game_profiler.h	/^#define _prf_block(/;"	d	language:C++
_prf_block	game_profiler.h	/^#define _prf_block(/;"	d	language:C++
_prf_end_profiling_block	code/game_profiler.h	/^_prf_end_profiling_block(Profiler* p, Profiler_Entry* entry) {$/;"	f	language:C++	typeref:typename:void
_prf_end_profiling_block	game_profiler.h	/^_prf_end_profiling_block(Profiler* p, Profiler_Entry* entry) {$/;"	f	language:C++	typeref:typename:void
_prf_init_block	code/game_profiler.h	/^_prf_init_block(Profiler* p,$/;"	f	language:C++	typeref:typename:Profiler_Entry *
_prf_init_block	game_profiler.h	/^_prf_init_block(Profiler* p,$/;"	f	language:C++	typeref:typename:Profiler_Entry *
_push_info	code/game_console.h	/^_push_info(Console* dc, String8 str) {$/;"	f	language:C++	typeref:typename:void
_push_info	game_console.h	/^_push_info(Console* dc, String8 str) {$/;"	f	language:C++	typeref:typename:void
_quicksort_partition	code/momo_sort.h	/^_quicksort_partition(Sort_Entry* a,$/;"	f	language:C++	typeref:typename:U32
_quicksort_partition	momo_sort.h	/^_quicksort_partition(Sort_Entry* a,$/;"	f	language:C++	typeref:typename:U32
_quicksort_range	code/momo_sort.h	/^_quicksort_range(Sort_Entry* a, $/;"	f	language:C++	typeref:typename:void
_quicksort_range	momo_sort.h	/^_quicksort_range(Sort_Entry* a, $/;"	f	language:C++	typeref:typename:void
_RP_Node	code/momo_rect_pack.h	/^}_RP_Node;$/;"	t	language:C++	typeref:struct:__anonb69b67e80308
_RP_Node	momo_rect_pack.h	/^}_RP_Node;$/;"	t	language:C++	typeref:struct:__anon3ddc5a3e0308
_rp_sort	code/momo_rect_pack.h	/^_rp_sort(RP_Rect* rects,$/;"	f	language:C++	typeref:typename:void
_rp_sort	momo_rect_pack.h	/^_rp_sort(RP_Rect* rects,$/;"	f	language:C++	typeref:typename:void
_sb8_push_fmt_list	code/momo_strings.h	/^_sb8_push_fmt_list(String8_Builder* b, String8 format, va_list args) {$/;"	f	language:C++	typeref:typename:void
_sb8_push_fmt_list	momo_strings.h	/^_sb8_push_fmt_list(String8_Builder* b, String8 format, va_list args) {$/;"	f	language:C++	typeref:typename:void
_sort_swap_entries	code/momo_sort.h	/^_sort_swap_entries(Sort_Entry* a, Sort_Entry* b) {$/;"	f	language:C++	typeref:typename:void
_sort_swap_entries	momo_sort.h	/^_sort_swap_entries(Sort_Entry* a, Sort_Entry* b) {$/;"	f	language:C++	typeref:typename:void
_t2_is_point_within_barycentric	code/momo_shapes.h	/^_t2_is_point_within_barycentric(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_t2_is_point_within_barycentric	momo_shapes.h	/^_t2_is_point_within_barycentric(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_t2_is_point_within_dot_product	code/momo_shapes.h	/^_t2_is_point_within_dot_product(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_t2_is_point_within_dot_product	momo_shapes.h	/^_t2_is_point_within_dot_product(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_t2_is_point_within_parametric	code/momo_shapes.h	/^_t2_is_point_within_parametric(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_t2_is_point_within_parametric	momo_shapes.h	/^_t2_is_point_within_parametric(Tri2 tri, V2 pt) {$/;"	f	language:C++	typeref:typename:B32
_ttf_add_vertex	code/momo_ttf.h	/^_ttf_add_vertex(V2* vertices, U32 n, F32 x, F32 y) {$/;"	f	language:C++	typeref:typename:void
_ttf_add_vertex	code/momo_ttf.h	/^_ttf_add_vertex(V2* vertices, U32 n, V2 v) {$/;"	f	language:C++	typeref:typename:void
_ttf_add_vertex	momo_ttf.h	/^_ttf_add_vertex(V2* vertices, U32 n, F32 x, F32 y) {$/;"	f	language:C++	typeref:typename:void
_ttf_add_vertex	momo_ttf.h	/^_ttf_add_vertex(V2* vertices, U32 n, V2 v) {$/;"	f	language:C++	typeref:typename:void
_TTF_CMAP_MS_ID_BIG_FIVE	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_BIG_FIVE = 4,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_BIG_FIVE	momo_ttf.h	/^  _TTF_CMAP_MS_ID_BIG_FIVE = 4,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_JOHAB	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_JOHAB = 5,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_JOHAB	momo_ttf.h	/^  _TTF_CMAP_MS_ID_JOHAB = 5,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_PRC	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_PRC = 3,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_PRC	momo_ttf.h	/^  _TTF_CMAP_MS_ID_PRC = 3,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_SHIFT_JIS	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_SHIFT_JIS = 2,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_SHIFT_JIS	momo_ttf.h	/^  _TTF_CMAP_MS_ID_SHIFT_JIS = 2,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_SYMBOL	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_SYMBOL = 0,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_SYMBOL	momo_ttf.h	/^  _TTF_CMAP_MS_ID_SYMBOL = 0,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_UNICODE_BMP	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_BMP = 1,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_UNICODE_BMP	momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_BMP = 1,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_MS_ID_UNICODE_FULL	code/momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_FULL = 10,$/;"	e	language:C++	enum:__anon54d1bdca0903
_TTF_CMAP_MS_ID_UNICODE_FULL	momo_ttf.h	/^  _TTF_CMAP_MS_ID_UNICODE_FULL = 10,$/;"	e	language:C++	enum:__anon4eb927a00903
_TTF_CMAP_PLATFORM_ID_MACINTOSH	code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MACINTOSH = 1,$/;"	e	language:C++	enum:__anon54d1bdca0803
_TTF_CMAP_PLATFORM_ID_MACINTOSH	momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MACINTOSH = 1,$/;"	e	language:C++	enum:__anon4eb927a00803
_TTF_CMAP_PLATFORM_ID_MICROSOFT	code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MICROSOFT = 3,$/;"	e	language:C++	enum:__anon54d1bdca0803
_TTF_CMAP_PLATFORM_ID_MICROSOFT	momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_MICROSOFT = 3,$/;"	e	language:C++	enum:__anon4eb927a00803
_TTF_CMAP_PLATFORM_ID_RESERVED	code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_RESERVED = 2,$/;"	e	language:C++	enum:__anon54d1bdca0803
_TTF_CMAP_PLATFORM_ID_RESERVED	momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_RESERVED = 2,$/;"	e	language:C++	enum:__anon4eb927a00803
_TTF_CMAP_PLATFORM_ID_UNICODE	code/momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_UNICODE = 0,$/;"	e	language:C++	enum:__anon54d1bdca0803
_TTF_CMAP_PLATFORM_ID_UNICODE	momo_ttf.h	/^  _TTF_CMAP_PLATFORM_ID_UNICODE = 0,$/;"	e	language:C++	enum:__anon4eb927a00803
_TTF_Edge	code/momo_ttf.h	/^}_TTF_Edge;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0608
_TTF_Edge	momo_ttf.h	/^}_TTF_Edge;$/;"	t	language:C++	typeref:struct:__anon4eb927a00608
_TTF_Edge_List	code/momo_ttf.h	/^}_TTF_Edge_List;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0708
_TTF_Edge_List	momo_ttf.h	/^}_TTF_Edge_List;$/;"	t	language:C++	typeref:struct:__anon4eb927a00708
_ttf_get_glyph_outline	code/momo_ttf.h	/^_ttf_get_glyph_outline(TTF* ttf, $/;"	f	language:C++	typeref:typename:B32
_ttf_get_glyph_outline	momo_ttf.h	/^_ttf_get_glyph_outline(TTF* ttf, $/;"	f	language:C++	typeref:typename:B32
_ttf_get_kern_advance	code/momo_ttf.h	/^_ttf_get_kern_advance(TTF* ttf, S32 g1, S32 g2) {$/;"	f	language:C++	typeref:typename:S32
_ttf_get_kern_advance	momo_ttf.h	/^_ttf_get_kern_advance(TTF* ttf, S32 g1, S32 g2) {$/;"	f	language:C++	typeref:typename:S32
_ttf_get_offset_to_glyph	code/momo_ttf.h	/^_ttf_get_offset_to_glyph(TTF* ttf, U32 glyph_index) {$/;"	f	language:C++	typeref:typename:U32
_ttf_get_offset_to_glyph	momo_ttf.h	/^_ttf_get_offset_to_glyph(TTF* ttf, U32 glyph_index) {$/;"	f	language:C++	typeref:typename:U32
_ttf_get_paths_from_glyph_outline	code/momo_ttf.h	/^_ttf_get_paths_from_glyph_outline(_TTF_Glyph_Outline* outline,$/;"	f	language:C++	typeref:typename:B32
_ttf_get_paths_from_glyph_outline	momo_ttf.h	/^_ttf_get_paths_from_glyph_outline(_TTF_Glyph_Outline* outline,$/;"	f	language:C++	typeref:typename:B32
_ttf_get_raw_glyph_box	code/momo_ttf.h	/^_ttf_get_raw_glyph_box(TTF* ttf, U32 glyph_index) {$/;"	f	language:C++	typeref:typename:Rect2S
_ttf_get_raw_glyph_box	momo_ttf.h	/^_ttf_get_raw_glyph_box(TTF* ttf, U32 glyph_index) {$/;"	f	language:C++	typeref:typename:Rect2S
_TTF_Glyph_Outline	code/momo_ttf.h	/^}_TTF_Glyph_Outline;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0408
_TTF_Glyph_Outline	momo_ttf.h	/^}_TTF_Glyph_Outline;$/;"	t	language:C++	typeref:struct:__anon4eb927a00408
_TTF_Glyph_Paths	code/momo_ttf.h	/^}_TTF_Glyph_Paths;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0508
_TTF_Glyph_Paths	momo_ttf.h	/^}_TTF_Glyph_Paths;$/;"	t	language:C++	typeref:struct:__anon4eb927a00508
_TTF_Glyph_Point	code/momo_ttf.h	/^}_TTF_Glyph_Point;$/;"	t	language:C++	typeref:struct:__anon54d1bdca0308
_TTF_Glyph_Point	momo_ttf.h	/^}_TTF_Glyph_Point;$/;"	t	language:C++	typeref:struct:__anon4eb927a00308
_ttf_read_s16	code/momo_ttf.h	/^_ttf_read_s16(U8* location) {$/;"	f	language:C++	typeref:typename:S16
_ttf_read_s16	momo_ttf.h	/^_ttf_read_s16(U8* location) {$/;"	f	language:C++	typeref:typename:S16
_ttf_read_u16	code/momo_ttf.h	/^_ttf_read_u16(U8* location) {$/;"	f	language:C++	typeref:typename:U16
_ttf_read_u16	momo_ttf.h	/^_ttf_read_u16(U8* location) {$/;"	f	language:C++	typeref:typename:U16
_ttf_read_u32	code/momo_ttf.h	/^_ttf_read_u32(U8* location) {$/;"	f	language:C++	typeref:typename:U32
_ttf_read_u32	momo_ttf.h	/^_ttf_read_u32(U8* location) {$/;"	f	language:C++	typeref:typename:U32
_ttf_tessellate_bezier	code/momo_ttf.h	/^_ttf_tessellate_bezier(V2* vertices,$/;"	f	language:C++	typeref:typename:void
_ttf_tessellate_bezier	momo_ttf.h	/^_ttf_tessellate_bezier(V2* vertices,$/;"	f	language:C++	typeref:typename:void
_w32_load_wgl_extentions	code/w32_gfx_opengl.h	/^_w32_load_wgl_extentions() {$/;"	f	language:C++	typeref:typename:B32
_w32_load_wgl_extentions	code/win_gfx_opengl.cpp	/^_w32_load_wgl_extentions() {$/;"	f	language:C++	typeref:typename:B32	file:
_w32_load_wgl_extentions	w32_gfx_opengl.h	/^_w32_load_wgl_extentions() {$/;"	f	language:C++	typeref:typename:B32
_w32_set_pixel_format	code/w32_gfx_opengl.h	/^_w32_set_pixel_format(HDC dc) {$/;"	f	language:C++	typeref:typename:void
_w32_set_pixel_format	code/win_gfx_opengl.cpp	/^_w32_set_pixel_format(HDC dc) {$/;"	f	language:C++	typeref:typename:void	file:
_w32_set_pixel_format	w32_gfx_opengl.h	/^_w32_set_pixel_format(HDC dc) {$/;"	f	language:C++	typeref:typename:void
_w32_try_get_wgl_function	code/w32_gfx_opengl.h	/^_w32_try_get_wgl_function(const char* name, HMODULE fallback_module)$/;"	f	language:C++	typeref:typename:void *
_w32_try_get_wgl_function	code/win_gfx_opengl.cpp	/^_w32_try_get_wgl_function(const char* name, HMODULE fallback_module)$/;"	f	language:C++	typeref:typename:void *	file:
_w32_try_get_wgl_function	w32_gfx_opengl.h	/^_w32_try_get_wgl_function(const char* name, HMODULE fallback_module)$/;"	f	language:C++	typeref:typename:void *
_w32_wasapi_notifs_vtable	code/w32_audio_wasapi.h	/^static IMMNotificationClientVtbl _w32_wasapi_notifs_vtable {$/;"	v	language:C++	typeref:typename:IMMNotificationClientVtbl
_w32_wasapi_notifs_vtable	w32_audio_wasapi.h	/^static IMMNotificationClientVtbl _w32_wasapi_notifs_vtable {$/;"	v	language:C++	typeref:typename:IMMNotificationClientVtbl
_w32_wasapi_notif_client_AddRef	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_AddRef(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_notif_client_AddRef	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_AddRef(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_notif_client_OnDefaultDeviceChange	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDefaultDeviceChange(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDefaultDeviceChange	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDefaultDeviceChange(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceAdded	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceAdded(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceAdded	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceAdded(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceRemoved	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceRemoved(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceRemoved	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceRemoved(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceStateChanged	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceStateChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnDeviceStateChanged	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnDeviceStateChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnPropertyValueChanged	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnPropertyValueChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_OnPropertyValueChanged	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_OnPropertyValueChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_QueryInterface	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_QueryInterface(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_QueryInterface	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_QueryInterface(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_w32_wasapi_notif_client_Release	code/w32_audio_wasapi.h	/^_w32_wasapi_notif_client_Release(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_notif_client_Release	w32_audio_wasapi.h	/^_w32_wasapi_notif_client_Release(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_w32_wasapi_release_current_device	code/w32_audio_wasapi.h	/^_w32_wasapi_release_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
_w32_wasapi_release_current_device	w32_audio_wasapi.h	/^_w32_wasapi_release_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
_w32_wasapi_set_default_device_as_current_device	code/w32_audio_wasapi.h	/^_w32_wasapi_set_default_device_as_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:B32
_w32_wasapi_set_default_device_as_current_device	w32_audio_wasapi.h	/^_w32_wasapi_set_default_device_as_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:B32
_win_wasapi_notifs_vtable	code/win_audio_wasapi.h	/^static IMMNotificationClientVtbl _win_wasapi_notifs_vtable {$/;"	v	language:C++	typeref:typename:IMMNotificationClientVtbl
_win_wasapi_notif_client_AddRef	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_AddRef(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_win_wasapi_notif_client_OnDefaultDeviceChange	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_OnDefaultDeviceChange(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_OnDeviceAdded	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_OnDeviceAdded(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_OnDeviceRemoved	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_OnDeviceRemoved(IMMNotificationClient* client, LPCWSTR pwstr_device_id)$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_OnDeviceStateChanged	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_OnDeviceStateChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_OnPropertyValueChanged	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_OnPropertyValueChanged(IMMNotificationClient* client,$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_QueryInterface	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_QueryInterface(IMMNotificationClient* mm_notif,$/;"	f	language:C++	typeref:typename:HRESULT
_win_wasapi_notif_client_Release	code/win_audio_wasapi.h	/^_win_wasapi_notif_client_Release(IMMNotificationClient* mm_notif) {$/;"	f	language:C++	typeref:typename:ULONG
_win_wasapi_release_current_device	code/win_audio_wasapi.h	/^_win_wasapi_release_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:void
_win_wasapi_set_default_device_as_current_device	code/win_audio_wasapi.h	/^_win_wasapi_set_default_device_as_current_device(Win_Wasapi* wasapi) {$/;"	f	language:C++	typeref:typename:B32
__anon0e7e656c0108	momo_json.h	/^typedef struct {$/;"	s	language:C++
__anon0e7e656c0203	momo_json.h	/^typedef enum  {$/;"	g	language:C++
__anon0e7e656c0303	momo_json.h	/^typedef enum  {$/;"	g	language:C++
__anon0e7e656c0403	momo_json.h	/^typedef enum {$/;"	g	language:C++
__anon0e7e656c0508	momo_json.h	/^typedef struct {$/;"	s	language:C++
__anon0e7e656c0608	momo_json.h	/^typedef struct  {$/;"	s	language:C++
__anon0e7e656c0708	momo_json.h	/^typedef struct {$/;"	s	language:C++
__anon0e7e656c080a	momo_json.h	/^  union {$/;"	u	language:C++	struct:__anon0e7e656c0708
__anon0eed7b670108	momo_matrix.h	/^typedef struct {$/;"	s	language:C++
__anon19207be70108	game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anon19207be70208	game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anon19207be70308	game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anon1d4ae8470103	code/game_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon1d4ae8470203	code/game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon1d4ae8470303	code/game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon1d4ae8470403	code/game_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon1d4ae8470503	code/game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon1d4ae8470603	code/game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon1d4ae8470708	code/game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon1d4ae8470808	code/game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon1d4ae8470908	code/game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon1dda1bf60103	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60203	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60303	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60403	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60503	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60603	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60703	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60803	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60903	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60a03	test.c	/^typedef enum {$/;"	g	language:C	file:
__anon1dda1bf60b08	test.c	/^    struct {$/;"	s	language:C	struct:rlglData	file:
__anon1dda1bf60c08	test.c	/^    struct {$/;"	s	language:C	struct:rlglData	file:
__anon23362fba0108	momo_sort.h	/^typedef struct{$/;"	s	language:C++
__anon2a657d030108	game_mode_splash.h	/^typedef struct  {$/;"	s	language:C++
__anon2ac8214a010a	code/sui_atlas.h	/^  union {$/;"	u	language:C++	struct:Sui_Atlas_Context
__anon3250fc2b0108	momo_memory.h	/^typedef struct {$/;"	s	language:C++
__anon3250fc2b0208	momo_memory.h	/^typedef struct {$/;"	s	language:C++
__anon3ddc5a3e0103	momo_rect_pack.h	/^typedef enum {$/;"	g	language:C++
__anon3ddc5a3e0208	momo_rect_pack.h	/^typedef struct{$/;"	s	language:C++
__anon3ddc5a3e0308	momo_rect_pack.h	/^typedef struct {$/;"	s	language:C++
__anon484784200108	code/momo_shapes.h	/^typedef struct{$/;"	s	language:C++
__anon484784200208	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200308	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200408	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200508	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200608	code/momo_shapes.h	/^{$/;"	s	language:C++
__anon484784200708	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200808	code/momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon484784200908	code/momo_shapes.h	/^typedef struct{$/;"	s	language:C++
__anon4d84618a0108	momo_crc.h	/^typedef struct {$/;"	s	language:C++
__anon4d84618a0208	momo_crc.h	/^typedef struct{$/;"	s	language:C++
__anon4d84618a0308	momo_crc.h	/^typedef struct {$/;"	s	language:C++
__anon4e6d7f970108	momo_png.h	/^typedef struct {$/;"	s	language:C++
__anon4e6d7f97020a	momo_png.h	/^  union {$/;"	u	language:C++	struct:_PNG_Chunk_Header
__anon4e91b0990108	momo_rng.h	/^{$/;"	s	language:C++
__anon4eb927a00108	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00208	momo_ttf.h	/^{$/;"	s	language:C++
__anon4eb927a00308	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00408	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00508	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00608	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00708	momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon4eb927a00803	momo_ttf.h	/^enum {$/;"	g	language:C++
__anon4eb927a00903	momo_ttf.h	/^enum {$/;"	g	language:C++
__anon4ee54a000108	momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon4ee54a000208	momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon4ee54a000308	momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon4ee54a000408	momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon539cf7b40108	code/momo_crc.h	/^typedef struct {$/;"	s	language:C++
__anon539cf7b40208	code/momo_crc.h	/^typedef struct{$/;"	s	language:C++
__anon539cf7b40308	code/momo_crc.h	/^typedef struct {$/;"	s	language:C++
__anon548615c10108	code/momo_png.h	/^typedef struct {$/;"	s	language:C++
__anon548615c1020a	code/momo_png.h	/^  union {$/;"	u	language:C++	struct:_PNG_Chunk_Header
__anon54aa46c30108	code/momo_rng.h	/^{$/;"	s	language:C++
__anon54d1bdca0108	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0208	code/momo_ttf.h	/^{$/;"	s	language:C++
__anon54d1bdca0308	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0408	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0508	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0608	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0708	code/momo_ttf.h	/^typedef struct {$/;"	s	language:C++
__anon54d1bdca0803	code/momo_ttf.h	/^enum {$/;"	g	language:C++
__anon54d1bdca0903	code/momo_ttf.h	/^enum {$/;"	g	language:C++
__anon54fde02a0108	code/momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon54fde02a0208	code/momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon54fde02a0308	code/momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon54fde02a0408	code/momo_wav.h	/^typedef struct {$/;"	s	language:C++
__anon619cc5e0010a	sui_atlas.h	/^  union {$/;"	u	language:C++	struct:Sui_Atlas_Context
__anon6a37947f010a	code/test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anon6a37947f020a	code/test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anon70e8603f0108	code/momo_image.h	/^typedef struct {$/;"	s	language:C++
__anon713555860108	code/momo_strings.h	/^typedef struct {$/;"	s	language:C++
__anon713555860208	code/momo_strings.h	/^typedef struct {$/;"	s	language:C++
__anon71355586030a	code/momo_strings.h	/^	union {$/;"	u	language:C++	struct:__anon713555860208
__anon713555860408	code/momo_strings.h	/^		struct {$/;"	s	language:C++	union:__anon713555860208::__anon71355586030a
__anon71355586050a	code/momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	u	language:C++	function:sb8_push_hex_u32
__anon7974dca3010a	code/game_platform.h	/^  union {$/;"	u	language:C++	struct:Platform
__anon7974dca30208	code/game_platform.h	/^    struct {$/;"	s	language:C++	union:Platform::__anon7974dca3010a
__anon81c9ba5c0108	momo_strings.h	/^typedef struct {$/;"	s	language:C++
__anon81c9ba5c0208	momo_strings.h	/^typedef struct {$/;"	s	language:C++
__anon81c9ba5c030a	momo_strings.h	/^	union {$/;"	u	language:C++	struct:__anon81c9ba5c0208
__anon81c9ba5c0408	momo_strings.h	/^		struct {$/;"	s	language:C++	union:__anon81c9ba5c0208::__anon81c9ba5c030a
__anon81c9ba5c050a	momo_strings.h	/^  union { U32 v; U8 b[4]; } combine;$/;"	u	language:C++	function:sb8_push_hex_u32
__anon825197950108	momo_image.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360108	momo_shapes.h	/^typedef struct{$/;"	s	language:C++
__anon86d7a6360208	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360308	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360408	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360508	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360608	momo_shapes.h	/^{$/;"	s	language:C++
__anon86d7a6360708	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360808	momo_shapes.h	/^typedef struct {$/;"	s	language:C++
__anon86d7a6360908	momo_shapes.h	/^typedef struct{$/;"	s	language:C++
__anon8caa255d0103	game_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon8caa255d0203	game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon8caa255d0303	game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon8caa255d0403	game_gfx_opengl.h	/^enum{ $/;"	g	language:C++
__anon8caa255d0503	game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon8caa255d0603	game_gfx_opengl.h	/^enum {$/;"	g	language:C++
__anon8caa255d0708	game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon8caa255d0808	game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon8caa255d0908	game_gfx_opengl.h	/^typedef struct {$/;"	s	language:C++
__anon8de67fa2010a	code/momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon8de67fa20208	code/momo_vectors.h	/^	struct { U32 x, y; };$/;"	s	language:C++	union:__anon8de67fa2010a
__anon8de67fa20308	code/momo_vectors.h	/^	struct { U32 w, h; };$/;"	s	language:C++	union:__anon8de67fa2010a
__anon8de67fa2040a	code/momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon8de67fa20508	code/momo_vectors.h	/^	struct { S32 x, y; };$/;"	s	language:C++	union:__anon8de67fa2040a
__anon8de67fa20608	code/momo_vectors.h	/^	struct { S32 w, h; };$/;"	s	language:C++	union:__anon8de67fa2040a
__anon8de67fa2070a	code/momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon8de67fa20808	code/momo_vectors.h	/^	struct { F32 x, y; };$/;"	s	language:C++	union:__anon8de67fa2070a
__anon8de67fa20908	code/momo_vectors.h	/^	struct { F32 w, h; };$/;"	s	language:C++	union:__anon8de67fa2070a
__anon8de67fa20a08	code/momo_vectors.h	/^	struct { F32 u, v; };$/;"	s	language:C++	union:__anon8de67fa2070a
__anon8de67fa20b0a	code/momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon8de67fa20c08	code/momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	s	language:C++	union:__anon8de67fa20b0a
__anon8de67fa20d08	code/momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	s	language:C++	union:__anon8de67fa20b0a
__anon8de67fa20e0a	code/momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon8de67fa20f08	code/momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	s	language:C++	union:__anon8de67fa20e0a
__anon9c95dc39010a	game_platform.h	/^  union {$/;"	u	language:C++	struct:Platform
__anon9c95dc390208	game_platform.h	/^    struct {$/;"	s	language:C++	union:Platform::__anon9c95dc39010a
__anon9e7ae478010a	momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon9e7ae4780208	momo_vectors.h	/^	struct { U32 x, y; };$/;"	s	language:C++	union:__anon9e7ae478010a
__anon9e7ae4780308	momo_vectors.h	/^	struct { U32 w, h; };$/;"	s	language:C++	union:__anon9e7ae478010a
__anon9e7ae478040a	momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon9e7ae4780508	momo_vectors.h	/^	struct { S32 x, y; };$/;"	s	language:C++	union:__anon9e7ae478040a
__anon9e7ae4780608	momo_vectors.h	/^	struct { S32 w, h; };$/;"	s	language:C++	union:__anon9e7ae478040a
__anon9e7ae478070a	momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon9e7ae4780808	momo_vectors.h	/^	struct { F32 x, y; };$/;"	s	language:C++	union:__anon9e7ae478070a
__anon9e7ae4780908	momo_vectors.h	/^	struct { F32 w, h; };$/;"	s	language:C++	union:__anon9e7ae478070a
__anon9e7ae4780a08	momo_vectors.h	/^	struct { F32 u, v; };$/;"	s	language:C++	union:__anon9e7ae478070a
__anon9e7ae4780b0a	momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon9e7ae4780c08	momo_vectors.h	/^	struct { F32 x, y, z; };$/;"	s	language:C++	union:__anon9e7ae4780b0a
__anon9e7ae4780d08	momo_vectors.h	/^	struct { F32 w, h, d; };$/;"	s	language:C++	union:__anon9e7ae4780b0a
__anon9e7ae4780e0a	momo_vectors.h	/^typedef union {$/;"	u	language:C++
__anon9e7ae4780f08	momo_vectors.h	/^	struct { F32 x, y, z, w; };$/;"	s	language:C++	union:__anon9e7ae4780e0a
__anonb69b67e80103	code/momo_rect_pack.h	/^typedef enum {$/;"	g	language:C++
__anonb69b67e80208	code/momo_rect_pack.h	/^typedef struct{$/;"	s	language:C++
__anonb69b67e80308	code/momo_rect_pack.h	/^typedef struct {$/;"	s	language:C++
__anonb89fa6ae0108	code/momo_colors.h	/^typedef struct  {$/;"	s	language:C++
__anonb89fa6ae0208	code/momo_colors.h	/^typedef struct {$/;"	s	language:C++
__anonb89fa6ae0308	code/momo_colors.h	/^typedef struct  {$/;"	s	language:C++
__anonb89fa6ae040a	code/momo_colors.h	/^  union {$/;"	u	language:C++	struct:__anonb89fa6ae0308
__anonb89fa6ae0508	code/momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	s	language:C++	union:__anonb89fa6ae0308::__anonb89fa6ae040a
__anonbacee3e5010a	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_INFINITY
__anonbacee3e5020a	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_NEG_INFINITY
__anonbacee3e5030a	code/momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_NAN
__anonbacee3e5040a	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_NAN
__anonbacee3e5050a	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_INFINITY
__anonbacee3e5060a	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_NEG_INFINITY
__anonbacee3e5070a	code/momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	u	language:C++	function:abs_f32
__anonbacee3e5080a	code/momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	u	language:C++	function:abs_f64
__anonbacee3e50908	code/momo_common.h	/^typedef struct {$/;"	s	language:C++
__anonbacee3e50a0a	code/momo_common.h	/^  union {$/;"	u	language:C++	struct:__anonbacee3e50908
__anonbacee3e50b0a	code/momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	u	language:C++	function:is_nan_f32
__anonbacee3e50c0a	code/momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:is_nan_f64
__anonc1b4a30c0102	code/test_sort.h	/^            [](int* lhs, int* rhs) { return (*lhs) < (*rhs); } );$/;"	f	language:C++	function:test_sort	file:
__anoncf1e9d2d0108	code/game_mode_splash.h	/^typedef struct  {$/;"	s	language:C++
__anond05d59510108	code/momo_matrix.h	/^typedef struct {$/;"	s	language:C++
__anond0a24e910108	code/game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anond0a24e910208	code/game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anond0a24e910308	code/game_mode_computer.h	/^typedef struct {$/;"	s	language:C++
__anond7a9c0d60108	code/momo_json.h	/^typedef struct {$/;"	s	language:C++
__anond7a9c0d60203	code/momo_json.h	/^typedef enum  {$/;"	g	language:C++
__anond7a9c0d60303	code/momo_json.h	/^typedef enum  {$/;"	g	language:C++
__anond7a9c0d60403	code/momo_json.h	/^typedef enum {$/;"	g	language:C++
__anond7a9c0d60508	code/momo_json.h	/^typedef struct {$/;"	s	language:C++
__anond7a9c0d60608	code/momo_json.h	/^typedef struct  {$/;"	s	language:C++
__anond7a9c0d60708	code/momo_json.h	/^typedef struct {$/;"	s	language:C++
__anond7a9c0d6080a	code/momo_json.h	/^  union {$/;"	u	language:C++	struct:__anond7a9c0d60708
__anond996d195010a	test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anond996d195020a	test_essentials.h	/^    union {$/;"	u	language:C++	function:test_essentials
__anone8493a7f0108	test_png.h	/^  struct {$/;"	s	language:C++	function:test_png
__anonec618b240108	code/momo_sort.h	/^typedef struct{$/;"	s	language:C++
__anonee61d0a90108	code/test_png.h	/^  struct {$/;"	s	language:C++	function:test_png
__anonef5de20c0102	code/game_mode_level_light.cpp	/^  auto pred = [&](V2* lhs, V2* rhs){$/;"	f	language:C++	function:gen_light_intersections	file:
__anonf3c0da150108	code/momo_memory.h	/^typedef struct {$/;"	s	language:C++
__anonf3c0da150208	code/momo_memory.h	/^typedef struct {$/;"	s	language:C++
__anonf72fc8c40108	momo_colors.h	/^typedef struct  {$/;"	s	language:C++
__anonf72fc8c40208	momo_colors.h	/^typedef struct {$/;"	s	language:C++
__anonf72fc8c40308	momo_colors.h	/^typedef struct  {$/;"	s	language:C++
__anonf72fc8c4040a	momo_colors.h	/^  union {$/;"	u	language:C++	struct:__anonf72fc8c40308
__anonf72fc8c40508	momo_colors.h	/^    struct { F32 r, g, b; };  $/;"	s	language:C++	union:__anonf72fc8c40308::__anonf72fc8c4040a
__anonf75bd5220102	game_mode_level_light.cpp	/^  auto pred = [&](V2* lhs, V2* rhs){$/;"	f	language:C++	function:gen_light_intersections	file:
__anonf88947a20102	test_sort.h	/^            [](int* lhs, int* rhs) { return (*lhs) < (*rhs); } );$/;"	f	language:C++	function:test_sort	file:
__anonf95f05fb010a	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_INFINITY
__anonf95f05fb020a	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_NEG_INFINITY
__anonf95f05fb030a	momo_common.h	/^  union { F32 f; U32 u; } ret = {};$/;"	u	language:C++	function:F32_NAN
__anonf95f05fb040a	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_NAN
__anonf95f05fb050a	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_INFINITY
__anonf95f05fb060a	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:F64_NEG_INFINITY
__anonf95f05fb070a	momo_common.h	/^  union { F32 f; U32 u; } val = {};$/;"	u	language:C++	function:abs_f32
__anonf95f05fb080a	momo_common.h	/^  union { F64 f; U64 u; } val = {};$/;"	u	language:C++	function:abs_f64
__anonf95f05fb0908	momo_common.h	/^typedef struct {$/;"	s	language:C++
__anonf95f05fb0a0a	momo_common.h	/^  union {$/;"	u	language:C++	struct:__anonf95f05fb0908
__anonf95f05fb0b0a	momo_common.h	/^  union { F32 f; U64 u; } ret = {};$/;"	u	language:C++	function:is_nan_f32
__anonf95f05fb0c0a	momo_common.h	/^  union { F64 f; U64 u; } ret = {};$/;"	u	language:C++	function:is_nan_f64
__anonfc57340b0103	code/game_mode_lit.h	/^typedef enum {$/;"	g	language:C++
__anonfc57340b0208	code/game_mode_lit.h	/^typedef struct {$/;"	s	language:C++
__ba_set_revert_point	code/momo_memory.h	/^# define __ba_set_revert_point(/;"	d	language:C++
__ba_set_revert_point	momo_memory.h	/^# define __ba_set_revert_point(/;"	d	language:C++
__prf_block	code/game_profiler.h	/^#define __prf_block(/;"	d	language:C++
__prf_block	game_profiler.h	/^#define __prf_block(/;"	d	language:C++
~_defer_scope_guard	code/momo_common.h	/^  ~_defer_scope_guard() { f(); }$/;"	f	language:C++	struct:_defer_scope_guard
~_defer_scope_guard	momo_common.h	/^  ~_defer_scope_guard() { f(); }$/;"	f	language:C++	struct:_defer_scope_guard
